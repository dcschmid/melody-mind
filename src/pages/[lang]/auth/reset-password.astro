---
/**
 * Reset Password Page for MelodyMind
 *
 * This page displays the form for resetting a password using the Layout component.
 * It supports two distinct modes:
 * 1. Request mode: User enters email to receive a reset link (without token)
 * 2. Confirmation mode: User sets a new password with a valid token
 *
 * The page is fully optimized for WCAG AAA 2.2 compliance and uses only
 * CSS custom properties from global.css for consistent styling.
 *
 * @route /[lang]/auth/reset-password
 * @since 3.0.0
 */

import PasswordResetForm from "@components/auth/PasswordResetForm.astro";
import Layout from "@layouts/Layout.astro";
import { getLangFromUrl, useTranslations } from "@utils/i18n";

export async function getStaticPaths() {
  const supportedLanguages = [
    "de",
    "en",
    "es",
    "fr",
    "it",
    "pt",
    "da",
    "nl",
    "sv",
    "fi",
    "cn",
    "ru",
    "jp",
    "uk",
  ] as const;

  return supportedLanguages.map((lang) => ({
    params: { lang },
  }));
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang.toString());

const url = new URL(Astro.request.url);
const token = url.searchParams.get("token");
const isConfirmReset = !!token;

const title = isConfirmReset
  ? t("auth.password_reset_confirm.title")
  : t("auth.password_reset.title");

const description = isConfirmReset
  ? t("auth.password_reset_confirm.description")
  : t("auth.password_reset.description");
---

<Layout {title} {description}>
  <main class="reset-password-page" role="main">
    <div class="reset-password-page__container">
      <PasswordResetForm {token} {isConfirmReset} />
    </div>
  </main>
</Layout>

<style lang="scss">
  /* ======================================
   * RESET PASSWORD PAGE STYLES
   * ======================================
   * 
   * Modern SCSS with enhanced responsiveness
   * Uses only CSS custom properties from global.css
   * WCAG AAA 2.2 compliant with enhanced contrast
   * BEM methodology for consistent class naming
   */

  .reset-password-page {
    min-height: 100vh;
    background: var(--bg-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-lg);
    font-size: var(--text-lg);
    line-height: var(--leading-enhanced);
    letter-spacing: var(--letter-spacing-base);

    @media (max-width: 29.9375em) {
      padding: var(--space-sm);
      min-height: 100dvh;
    }

    @media (min-width: 30em) and (max-width: 47.9375em) {
      padding: var(--space-md) var(--space-sm);
    }

    @media (min-width: 48em) {
      padding: var(--space-xl);
    }

    @media (min-width: 64em) {
      padding: var(--space-2xl);
    }

    @media (prefers-reduced-motion: reduce) {
      background: var(--bg-primary);

      &__container {
        animation: none;
        transition: none;
      }
    }

    @media (prefers-contrast: high) {
      background: var(--bg-primary);
      border: var(--border-width-enhanced) solid var(--border-primary);
    }

    &__container {
      width: var(--width-full);
      max-width: var(--form-container-max-width);
      margin: var(--space-none) auto;
      padding: var(--space-lg);
      animation: fadeIn 0.4s ease;
      box-shadow: var(--card-shadow);
      border-radius: var(--radius-lg);
      background: var(--card-bg);
      border: var(--border-width-thin) solid var(--card-border);

      @media (max-width: 29.9375em) {
        padding: var(--space-sm);
        margin: 0 var(--space-xs);
        max-width: calc(100vw - var(--space-md));
      }

      @media (min-width: 30em) and (max-width: 47.9375em) {
        padding: var(--space-md);
        margin: 0 var(--space-sm);
        max-width: calc(var(--container-sm) - var(--space-lg));
      }

      @media (min-width: 48em) {
        max-width: var(--form-container-max-width);
        padding: var(--space-xl);
      }

      @media (min-width: 64em) {
        padding: var(--space-2xl);
        max-width: calc(var(--form-container-max-width) * 1.125);
      }

      &:focus-within {
        outline: var(--focus-outline);
        outline-offset: var(--focus-ring-offset);
        border-radius: var(--radius-lg);
        box-shadow: var(--focus-ring);
      }

      @media (hover: hover) {
        &:hover {
          box-shadow: var(--card-shadow-hover);
          transition: box-shadow var(--transition-fast);
        }
      }

      &:active {
        box-shadow: var(--shadow-md);
      }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    @media (prefers-contrast: high) {
      &__container {
        border: var(--border-width-enhanced) solid var(--text-primary);
        background: var(--bg-primary);
        box-shadow: var(--shadow-xl);
      }
    }

    @media (forced-colors: active) {
      &__container {
        border: var(--border-width-thick) solid CanvasText;
        background: Canvas;
        forced-color-adjust: none;
        box-shadow: none;
      }
    }

    @media print {
      background: var(--print-bg);
      color: var(--print-text);
      padding: var(--space-md);

      &__container {
        box-shadow: none;
        border: var(--print-border);
        background: var(--print-bg);
        max-width: var(--width-full);
        margin: var(--space-md) 0;
        padding: var(--space-lg);
        page-break-inside: avoid;
      }
    }
  }
</style>

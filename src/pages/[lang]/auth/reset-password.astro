---
/**
 * Reset Password Page for MelodyMind
 *
 * This page displays the form for resetting a password using the Layout component.
 * It supports two distinct modes:
 * 1. Request mode: User enters email to receive a reset link (without token)
 * 2. Confirmation mode: User sets a new password with a valid token
 *
 * The page is fully optimized for WCAG AAA 2.2 compliance and uses only
 * CSS custom properties from global.css for consistent styling.
 *
 * @route /[lang]/auth/reset-password
 * @since 3.0.0
 */

// 1. Imports
import PasswordResetForm from "@components/auth/PasswordResetForm.astro";
import Layout from "@layouts/Layout.astro";
import { getLangFromUrl, useTranslations } from "@utils/i18n";

// 2. Dynamic route requirements for Astro
export async function getStaticPaths() {
  const supportedLanguages = [
    "de",
    "en",
    "es",
    "fr",
    "it",
    "pt",
    "da",
    "nl",
    "sv",
    "fi",
    "cn",
    "ru",
    "jp",
    "uk",
  ] as const;

  return supportedLanguages.map((lang) => ({
    params: { lang },
  }));
}

// 3. URL and state processing
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang.toString());

// Extract token from URL parameters for password reset confirmation
const url = new URL(Astro.request.url);
const token = url.searchParams.get("token");
const isConfirmReset = !!token;

// 4. SEO and content variables
const title = isConfirmReset
  ? t("auth.password_reset_confirm.title")
  : t("auth.password_reset.title");

const description = isConfirmReset
  ? t("auth.password_reset_confirm.description")
  : t("auth.password_reset.description");
---

<Layout {title} {description}>
  <!-- Main content wrapper with semantic HTML structure -->
  <main class="reset-password-page" role="main">
    <div class="reset-password-page__container">
      <PasswordResetForm {token} {isConfirmReset} />
    </div>
  </main>
</Layout>

<style>
  /* ======================================
   * RESET PASSWORD PAGE STYLES
   * ======================================
   * 
   * Uses only CSS custom properties from global.css
   * WCAG AAA 2.2 compliant with enhanced contrast
   * BEM methodology for consistent class naming
   */

  .reset-password-page {
    min-height: 100vh;
    background: linear-gradient(
      var(--gradient-angle),
      var(--bg-primary) var(--gradient-start),
      var(--bg-secondary) var(--gradient-end)
    );
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-lg);

    /* Enhanced typography using root variables */
    font-size: var(--text-lg);
    line-height: var(--leading-enhanced);
    letter-spacing: var(--letter-spacing-base);

    /* Performance optimization using root variables */
    contain: layout style;
    will-change: opacity, transform;
  }

  .reset-password-page__container {
    width: var(--width-full);
    max-width: var(--form-container-max-width);
    margin: var(--space-none) auto;

    /* Consistent animation using root variables */
    animation: fadeIn var(--animation-duration-medium) ease-out;
  }

  /* ======================================
   * RESPONSIVE DESIGN
   * ====================================== */
  @media (min-width: 640px) {
    .reset-password-page {
      padding: var(--space-xl);
    }
  }

  @media (min-width: 768px) {
    .reset-password-page {
      padding: var(--space-2xl);
    }

    .reset-password-page__container {
      max-width: var(--container-md);
    }
  }

  /* ======================================
   * ANIMATIONS & TRANSITIONS
   * ====================================== */

  /* Fade-in animation for page entrance - using root variables */
  @keyframes fadeIn {
    from {
      opacity: var(--animation-opacity-start);
      transform: translateY(var(--animation-y-offset)) translateZ(0);
    }
    to {
      opacity: var(--animation-opacity-full);
      transform: translateY(var(--space-none)) translateZ(0);
    }
  }

  /* ======================================
   * ACCESSIBILITY ENHANCEMENTS
   * ====================================== */
  @media (prefers-reduced-motion: reduce) {
    .reset-password-page {
      background: var(--bg-primary);
    }

    .reset-password-page__container {
      animation: none;
    }

    @keyframes fadeIn {
      from,
      to {
        opacity: var(--animation-opacity-full);
        transform: translateY(var(--space-none));
      }
    }
  }

  @media (prefers-contrast: high) {
    .reset-password-page {
      background: var(--bg-primary);
      border: var(--border-width-enhanced) solid var(--border-primary);
    }
  }

  /* Support for high DPI displays using CSS variables */
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .reset-password-page {
      /* Enhanced rendering for high-resolution displays */
      -webkit-font-smoothing: var(--font-smoothing-light);
      -moz-osx-font-smoothing: var(--font-smoothing-grayscale);
    }
  }
</style>

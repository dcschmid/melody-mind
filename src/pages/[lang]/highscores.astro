---
/**
 * Highscores Page
 *
 * This page displays the top scores across different game modes and categories.
 * Users can filter scores by game mode and category.
 *
 * Features:
 * - Display of top scores for quiz and chronology game modes
 * - Filtering by game mode and category with smooth transitions
 * - Responsive design using CSS custom properties from global.css
 * - WCAG AAA 2.2 compliant with enhanced accessibility features
 * - DRY-compliant implementation using maximum available root variables
 * - Performance optimized with proper CSS containment and transitions
 *
 * CSS Architecture:
 * - Uses BEM methodology for class naming consistency
 * - Leverages complete root variable system from global.css
 * - Implements responsive breakpoints with CSS custom properties
 * - Enhanced focus management and screen reader support
 * - Reduced motion and high contrast mode support
 *
 * URL: /[lang]/highscores
 */
import Layout from "@layouts/Layout.astro";
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { Icon } from "astro-icon/components";
import { formatDate } from "@utils/dateUtils";
import Headline from "@components/Headline.astro";
import Paragraph from "@components/Paragraph.astro";

// Interface for highscore entry
interface HighscoreEntry {
  id: string;
  username: string;
  gameMode: "quiz" | "chronology";
  score: number;
  category: string;
  createdAt: string;
}

// Get language from URL and initialize translations
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(String(lang));

// Default values
let highscores: HighscoreEntry[] = [];
let isLoading = true;
let error: string | null = null;

// Get filter parameters from URL
const url = Astro.url;
const searchParams = url.searchParams;
const selectedGameMode = searchParams.get("gameMode");
const selectedCategory = searchParams.get("category");

// Build API URL with filters
let apiUrl = `${Astro.url.origin}/${String(lang)}/api/scores/highscores`;
const apiParams = new URLSearchParams();

if (selectedGameMode) {
  apiParams.append("gameMode", selectedGameMode);
}

if (selectedCategory) {
  apiParams.append("category", selectedCategory);
}

if (apiParams.toString()) {
  apiUrl += `?${apiParams.toString()}`;
}

// Fetch highscores data from API endpoint with filters
try {
  const response = await fetch(apiUrl, {
    headers: {
      "Content-Type": "application/json",
    },
  });

  const data = await response.json();

  if (data.success) {
    highscores = data.highscores;
  } else {
    error = data.error || t("highscores.error");
  }
} catch (err) {
  console.error("Error fetching highscores data:", err);
  error = t("highscores.error");
} finally {
  isLoading = false;
}

// Format the date for display
const formatHighscoreDate = (dateString: string): string => {
  try {
    return formatDate(dateString, String(lang));
  } catch {
    return dateString;
  }
};

// Get unique categories from highscores for filter dropdown
const categories = [...new Set(highscores.map((score) => score.category))];

// Game mode names for display
const gameModeNames = {
  quiz: t("profile.stats.quiz"),
  chronology: t("profile.stats.chronology"),
};
---

<Layout title={t("highscores.title")} description={t("highscores.description")} type="website">
  <div class="highscores-container" id="main-content">
    <!-- Hero section styled like GameHome with improved contrast and accessibility -->
    <header class="highscores-hero" aria-labelledby="highscores-heading">
      <!-- Decorative background elements with aria-hidden -->
      <div class="highscores-hero__decoration" aria-hidden="true">
        <div class="highscores-hero__decoration-item highscores-hero__decoration-item--top-right">
        </div>
        <div class="highscores-hero__decoration-item highscores-hero__decoration-item--bottom-left">
        </div>
        <div
          class="highscores-hero__decoration-item highscores-hero__decoration-item--center-right"
        >
        </div>
      </div>

      <div class="highscores-hero__content">
        <Headline
          level="h1"
          id="highscores-heading"
          title={t("highscores.title")}
          className="highscores-hero__title"
          size="4xl"
        />
        <div class="highscores-hero__divider"></div>
        <Paragraph
          description={t("highscores.description")}
          className="highscores-hero__description"
          align="center"
        />
        <!-- Additional descriptive content for SEO -->
        <p class="highscores-hero__seo-description sr-only">
          {t("highscores.seo.description")}
        </p>
      </div>
    </header>

    {
      isLoading && (
        <section class="highscores__loading" aria-live="polite">
          <div class="highscores__loading-content">
            <Icon name="loading" class="highscores__loading-icon" aria-hidden="true" />
            <span class="sr-only">{t("common.loading")}</span>
          </div>
        </section>
      )
    }

    {
      error && (
        <section class="highscores__error" role="alert">
          <Paragraph description={error} />
        </section>
      )
    }

    {
      !isLoading && !error && (
        <div class="highscores__content">
          <section class="highscores__filters" aria-labelledby="filter-heading">
            <div class="highscores__filters-container">
              <Headline
                level="h2"
                id="filter-heading"
                title={t("highscores.filters")}
                className="highscores__filter-title"
                textAlign="center"
              />

              <div class="highscores__filter-grid">
                <div class="highscores__filter-group">
                  <div class="highscores__filter-header">
                    <Icon name="game" class="highscores__filter-icon" aria-hidden="true" />
                    <label for="game-mode-filter" class="highscores__filter-label">
                      {t("highscores.gameMode")}
                    </label>
                  </div>
                  <div class="highscores__select-wrapper">
                    <select id="game-mode-filter" class="highscores__filter-select">
                      <option value="">{t("highscores.allModes")}</option>
                      <option value="quiz" selected={selectedGameMode === "quiz"}>
                        {gameModeNames.quiz}
                      </option>
                      <option value="chronology" selected={selectedGameMode === "chronology"}>
                        {gameModeNames.chronology}
                      </option>
                    </select>
                    <Icon name="chevron-down" class="highscores__select-arrow" aria-hidden="true" />
                  </div>
                </div>

                <div class="highscores__filter-group">
                  <div class="highscores__filter-header">
                    <Icon name="category" class="highscores__filter-icon" aria-hidden="true" />
                    <label for="category-filter" class="highscores__filter-label">
                      {t("highscores.category")}
                    </label>
                  </div>
                  <div class="highscores__select-wrapper">
                    <select id="category-filter" class="highscores__filter-select">
                      <option value="">{t("highscores.allCategories")}</option>
                      {categories.map((category) => (
                        <option value={category} selected={selectedCategory === category}>
                          {category}
                        </option>
                      ))}
                    </select>
                    <Icon name="chevron-down" class="highscores__select-arrow" aria-hidden="true" />
                  </div>
                </div>
              </div>
            </div>
          </section>

          <section class="highscores__list" aria-labelledby="highscores-heading">
            <Headline
              level="h2"
              id="highscores-heading"
              title={t("highscores.results")}
              className="highscores__list-title"
              textAlign="center"
            />

            {highscores.length === 0 ? (
              <div class="highscores__empty" role="status">
                <Paragraph description={t("highscores.noResults")} />
              </div>
            ) : (
              <div
                class="highscores__cards-grid"
                role="list"
                aria-label={t("highscores.tableLabel")}
              >
                {highscores.map((score, index) => (
                  <article
                    class="highscores__card"
                    role="listitem"
                    aria-label={t("highscores.scoreEntry", {
                      rank: index + 1,
                      username: score.username,
                    })}
                  >
                    <div class="highscores__card-badge">
                      <span
                        class={`highscores__rank-badge highscores__rank-badge--medal highscores__rank-badge--${index === 0 ? "gold" : index === 1 ? "silver" : index === 2 ? "bronze" : "normal"}`}
                        aria-label={t("highscores.rank")}
                      >
                        <span>{index + 1}</span>
                      </span>
                    </div>

                    <div class="highscores__card-content">
                      <div class="highscores__card-main">
                        <Headline
                          level="h3"
                          title={score.username}
                          className="highscores__card-username"
                        />
                        <div class="highscores__card-score">
                          <span class="highscores__score-value">{score.score}</span>
                          <span class="highscores__score-label">{t("highscores.points")}</span>
                        </div>
                      </div>

                      <div class="highscores__card-details">
                        <div class="highscores__detail-item">
                          <div class="highscores__detail-header">
                            <Icon name="game" class="highscores__detail-icon" aria-hidden="true" />
                            <span class="highscores__detail-label">{t("highscores.gameMode")}</span>
                          </div>
                          <span class="highscores__detail-value highscores__mode">
                            {gameModeNames[score.gameMode]}
                          </span>
                        </div>

                        <div class="highscores__detail-item">
                          <div class="highscores__detail-header">
                            <Icon
                              name="category"
                              class="highscores__detail-icon"
                              aria-hidden="true"
                            />
                            <span class="highscores__detail-label">{t("highscores.category")}</span>
                          </div>
                          <span class="highscores__detail-value highscores__category">
                            {score.category}
                          </span>
                        </div>

                        <div class="highscores__detail-item">
                          <div class="highscores__detail-header">
                            <Icon
                              name="calendar"
                              class="highscores__detail-icon"
                              aria-hidden="true"
                            />
                            <span class="highscores__detail-label">{t("highscores.date")}</span>
                          </div>
                          <time
                            class="highscores__detail-value highscores__date"
                            datetime={score.createdAt}
                          >
                            {formatHighscoreDate(score.createdAt)}
                          </time>
                        </div>
                      </div>
                    </div>
                  </article>
                ))}
              </div>
            )}
          </section>
        </div>
      )
    }
  </div>
</Layout>

<script>
  // Enhanced filter functionality for highscores with modern ES6+ features
  const initHighscoresFilters = (): void => {
    const gameModeFilter = document.getElementById("game-mode-filter") as HTMLSelectElement;
    const categoryFilter = document.getElementById("category-filter") as HTMLSelectElement;

    if (!gameModeFilter || !categoryFilter) {
      console.warn("Filter elements not found");
      return;
    }

    // Function to update highscores based on filters using modern URL API
    const updateHighscores = (): void => {
      const gameMode = gameModeFilter.value;
      const category = categoryFilter.value;

      // Build query parameters using modern URLSearchParams
      const params = new URLSearchParams();
      if (gameMode) {
        params.append("gameMode", gameMode);
      }
      if (category) {
        params.append("category", category);
      }

      // Get current language from URL using modern URL API
      const [, lang] = window.location.pathname.split("/");

      // Navigate with new filters using modern URL construction
      const newUrl = `/${lang}/highscores${params.toString() ? `?${params.toString()}` : ""}`;
      window.location.href = newUrl;
    };

    // Add event listeners using modern arrow functions
    gameModeFilter.addEventListener("change", updateHighscores);
    categoryFilter.addEventListener("change", updateHighscores);

    // Set initial filter values from URL params using modern destructuring
    const urlParams = new URLSearchParams(window.location.search);
    const { gameMode: gameModeParam, category: categoryParam } = Object.fromEntries(urlParams);

    // Set initial values using optional chaining and nullish coalescing
    gameModeFilter.value = gameModeParam ?? "";
    categoryFilter.value = categoryParam ?? "";
  };

  // Initialize filters when DOM is ready using modern event handling
  document.addEventListener("DOMContentLoaded", initHighscoresFilters);
</script>

<style lang="scss" is:global>
  @use "sass:map";

  /* ======================================
   * SCSS VARIABLES & MIXINS
   * Enhanced with global.css variables and responsive design
   * ====================================== */

  // SCSS Variables using global.css tokens
  $hero-decoration-sm: var(--space-2xl);
  $hero-decoration-md: var(--space-3xl);
  $hero-decoration-lg: calc(var(--space-3xl) * 2);
  $content-max-width: var(--form-container-max-width);
  $hero-shadow: var(--shadow-lg);
  $divider-height: var(--border-width-thick);

  // Note: Using hardcoded em values in media queries since CSS variables don't work in @media rules
  // Mobile portrait: 0-479px (< 30em)
  // Mobile landscape: 480-639px (30em - 39.9375em)
  // Small tablet: 640-767px (40em - 47.9375em)
  // Tablet: 768-1023px (48em - 63.9375em)
  // Desktop: 1024-1279px (64em - 79.9375em)
  // Large desktop: 1280px+ (80em+)

  // Mixins for responsive design using hardcoded breakpoints
  @mixin respond-to-sm {
    @media (min-width: 40em) {
      @content;
    }
  }

  @mixin respond-to-md {
    @media (min-width: 48em) {
      @content;
    }
  }

  @mixin respond-to-lg {
    @media (min-width: 64em) {
      @content;
    }
  }

  @mixin respond-to-xl {
    @media (min-width: 80em) {
      @content;
    }
  }

  // Mixin for container queries
  @mixin container-query($width) {
    @container (min-width: $width) {
      @content;
    }
  }

  // Mixin for focus states
  @mixin focus-visible {
    &:focus-visible {
      outline: var(--focus-outline);
      outline-offset: var(--focus-ring-offset);
      box-shadow: var(--focus-ring);
    }
  }

  // Mixin for hover effects
  @mixin hover-lift {
    transition: all var(--transition-normal);

    &:hover {
      transform: translateY(calc(-1 * var(--space-xs)));
      box-shadow: var(--card-shadow-hover);
    }
  }

  /* ======================================
   * HIGHSCORES CONTAINER LAYOUT 
   * Enhanced responsive design with modern SCSS
   * ====================================== */

  .highscores-container {
    width: var(--width-full);
    max-width: var(--container-xl);
    margin: 0 auto;
    padding: var(--space-md) var(--space-sm);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    contain: layout style;

    // Mobile portrait (< 480px) - very compact
    @media (max-width: 29.9375em) {
      padding: var(--space-sm) var(--space-xs);
    }

    // Mobile landscape (480px - 640px)
    @media (min-width: 30em) and (max-width: 39.9375em) {
      padding: var(--space-lg) var(--space-md);
    }

    // Small tablet (640px - 768px)
    @media (min-width: 40em) and (max-width: 47.9375em) {
      padding: var(--space-lg) var(--space-md);
    }

    // Tablet (768px - 1024px)
    @media (min-width: 48em) and (max-width: 63.9375em) {
      padding: var(--space-xl) var(--space-lg);
    }

    // Desktop (1024px+)
    @media (min-width: 64em) {
      padding: var(--space-2xl) var(--space-xl);
    }
  }

  /* ======================================
   * HERO SECTION STYLING
   * Enhanced responsive design with modern SCSS
   * ====================================== */

  .highscores-hero {
    position: relative;
    margin-bottom: var(--space-xl);
    overflow: hidden;
    border-radius: var(--radius-lg);
    background: linear-gradient(
      135deg,
      var(--color-primary-900) 0%,
      var(--color-primary-700) 50%,
      var(--color-secondary-800) 100%
    );
    padding: var(--space-lg) var(--space-md);
    box-shadow: var(--shadow-xl);
    border: var(--border-width-thin) solid var(--border-primary);
    contain: layout style;

    // Mobile portrait (< 480px)
    @media (max-width: 29.9375em) {
      margin-bottom: var(--space-lg);
      padding: var(--space-md) var(--space-sm);
      border-radius: var(--radius-md);
    }

    // Mobile landscape (480px - 640px)
    @media (min-width: 30em) and (max-width: 39.9375em) {
      padding: var(--space-lg) var(--space-md);
      border-radius: var(--radius-lg);
    }

    // Small tablet (640px - 768px)
    @media (min-width: 40em) and (max-width: 47.9375em) {
      padding: var(--space-xl) var(--space-lg);
      border-radius: var(--radius-xl);
    }

    // Tablet (768px - 1024px)
    @media (min-width: 48em) and (max-width: 63.9375em) {
      margin-bottom: var(--space-2xl);
      padding: var(--space-xl) var(--space-lg);
      border-radius: var(--radius-xl);
    }

    // Desktop (1024px+)
    @media (min-width: 64em) {
      margin-bottom: var(--space-3xl);
      padding: var(--space-2xl) var(--space-xl);
      border-radius: var(--radius-2xl);
    }

    // Large desktop (1280px+)
    @media (min-width: 80em) {
      padding: var(--space-3xl) var(--space-2xl);
    }

    // Decoration elements with responsive sizing
    &__decoration {
      position: absolute;
      inset: 0;
      opacity: 0.1;
      pointer-events: none;

      &-item {
        position: absolute;
        border-radius: var(--radius-full);
        background: var(--color-white);
        transition: transform var(--transition-normal);

        &--top-right {
          top: calc(-1 * var(--space-xl));
          right: calc(-1 * var(--space-xl));
          width: $hero-decoration-md;
          height: $hero-decoration-md;

          @include respond-to-lg {
            width: $hero-decoration-lg;
            height: $hero-decoration-lg;
          }
        }

        &--bottom-left {
          bottom: calc(-1 * var(--space-2xl));
          left: calc(-1 * var(--space-2xl));
          width: $hero-decoration-lg;
          height: $hero-decoration-lg;

          @include respond-to-lg {
            width: calc($hero-decoration-lg * 1.5);
            height: calc($hero-decoration-lg * 1.5);
          }
        }

        &--center-right {
          top: 50%;
          right: calc(-1 * var(--space-md));
          width: $hero-decoration-sm;
          height: $hero-decoration-sm;
          transform: translateY(-50%);

          @include respond-to-md {
            width: $hero-decoration-md;
            height: $hero-decoration-md;
          }
        }
      }
    }

    // Content section with responsive typography
    &__content {
      position: relative;
      z-index: 1;
      text-align: center;
      color: var(--color-white);
    }

    &__title {
      margin-bottom: var(--space-md);
      color: var(--color-white);
      text-shadow: $hero-shadow;
      font-size: var(--text-2xl);

      // Mobile portrait
      @media (max-width: 29.9375em) {
        margin-bottom: var(--space-sm);
        font-size: var(--text-xl);
      }

      // Mobile landscape
      @media (min-width: 30em) and (max-width: 39.9375em) {
        font-size: var(--text-2xl);
      }

      // Small tablet
      @media (min-width: 40em) and (max-width: 47.9375em) {
        font-size: var(--text-3xl);
      }

      // Tablet
      @media (min-width: 48em) and (max-width: 63.9375em) {
        margin-bottom: var(--space-lg);
        font-size: var(--text-3xl);
      }

      // Desktop
      @media (min-width: 64em) {
        margin-bottom: var(--space-lg);
        font-size: var(--text-4xl);
      }

      // Large desktop
      @media (min-width: 80em) {
        font-size: var(--text-5xl);
      }
    }

    &__divider {
      width: var(--space-xl);
      height: var(--border-width-thick);
      background: var(--color-secondary-400);
      margin: var(--space-md) auto;
      border-radius: var(--radius-full);

      // Mobile portrait
      @media (max-width: 29.9375em) {
        width: var(--space-lg);
        margin: var(--space-sm) auto;
      }

      // Desktop
      @media (min-width: 64em) {
        width: var(--space-2xl);
        margin: var(--space-lg) auto;
      }

      // Large desktop
      @media (min-width: 80em) {
        width: var(--space-3xl);
      }
    }

    &__description {
      color: var(--color-neutral-100);
      font-size: var(--text-base);
      line-height: var(--leading-relaxed);
      max-width: $content-max-width;
      margin: 0 auto;

      // Mobile portrait
      @media (max-width: 29.9375em) {
        font-size: var(--text-sm);
        line-height: var(--leading-normal);
        max-width: 100%;
      }

      // Mobile landscape
      @media (min-width: 30em) and (max-width: 39.9375em) {
        font-size: var(--text-base);
      }

      // Small tablet
      @media (min-width: 40em) and (max-width: 47.9375em) {
        font-size: var(--text-lg);
      }

      // Tablet
      @media (min-width: 48em) and (max-width: 63.9375em) {
        font-size: var(--text-lg);
      }

      // Desktop
      @media (min-width: 64em) {
        font-size: var(--text-xl);
      }

      // Large desktop
      @media (min-width: 80em) {
        font-size: var(--text-2xl);
        max-width: calc($content-max-width * 1.2);
      }
    }

    &__seo-description {
      // SEO content hidden visually but available to screen readers
    }
  }

  /* ======================================
   * RESPONSIVE DESIGN ENHANCEMENTS
   * Enhanced with modern SCSS and container queries
   * ====================================== */

  // Container queries for better component isolation
  .highscores-container {
    container-type: inline-size;
  }

  // Responsive typography using fluid scaling
  @include respond-to-lg {
    .highscores-hero {
      &__title {
        font-size: clamp(var(--text-3xl), 5vw, var(--text-5xl));
      }

      &__description {
        font-size: clamp(var(--text-lg), 3vw, var(--text-2xl));
      }
    }
  }

  // Fluid spacing for better responsive behavior
  @include respond-to-xl {
    .highscores-container {
      padding: clamp(var(--space-lg), 5vw, var(--space-3xl))
        clamp(var(--space-md), 3vw, var(--space-2xl));
    }
  }

  /* ======================================
   * ACCESSIBILITY ENHANCEMENTS
   * Enhanced with modern SCSS and better a11y support
   * ====================================== */

  // Reduced motion support with SCSS mixins
  @media (prefers-reduced-motion: reduce) {
    .highscores-hero {
      &__decoration-item {
        animation: none;
        transition: none;
      }
    }

    .highscores__loading-icon {
      animation: none;
    }

    .highscores__card {
      transition: var(--transition-instant);

      &:hover {
        transform: none;
      }
    }

    .highscores__rank {
      transition: var(--transition-instant);

      &:hover {
        transform: none;
      }
    }
  }

  // High contrast mode support
  @media (prefers-contrast: high) {
    .highscores-hero {
      border-width: var(--border-width-thick);
      border-color: var(--color-white);
    }

    .highscores__card {
      border-width: var(--border-width-thick);
      border-color: var(--text-primary);
    }

    .highscores__rank--medal {
      background: var(--text-primary) !important;
      color: var(--bg-primary) !important;
      border-color: var(--text-primary) !important;
    }
  }

  // Focus management improvements
  .highscores__filter-select {
    @include focus-visible;
  }

  .highscores__card {
    @include focus-visible;
  }

  /* ======================================
   * LOADING & ERROR STATES
   * Enhanced with modern SCSS and responsive design
   * ====================================== */

  .highscores__loading {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: calc(var(--container-sm) * 0.4);
    padding: var(--space-xl);
    margin: var(--space-xl) auto;
    animation: fadeIn var(--animation-duration-normal) ease-out;

    &-content {
      text-align: center;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--space-md);
    }

    &-icon {
      width: var(--icon-size-lg);
      height: var(--icon-size-lg);
      color: var(--interactive-primary);
      animation: loading-spin var(--animation-pulse-duration) linear infinite;

      @include respond-to-md {
        width: var(--icon-size-xl);
        height: var(--icon-size-xl);
      }
    }
  }

  .highscores__error {
    background-color: var(--bg-error-aaa);
    border: var(--border-width-thin) solid var(--border-error);
    border-radius: var(--radius-md);
    padding: var(--space-lg);
    margin: var(--space-xl) auto;
    max-width: var(--container-sm);
    text-align: center;
    animation: fadeIn var(--animation-duration-normal) ease-out;

    @include respond-to-md {
      padding: var(--space-xl);
      max-width: var(--container-md);
    }
  }

  // Keyframe animations with modern SCSS
  @keyframes loading-spin {
    from {
      transform: rotate(var(--rotation-0));
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(var(--space-md));
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(calc(-1 * var(--space-lg)));
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* ======================================
   * CONTENT & FILTER SECTIONS
   * Enhanced with modern SCSS and responsive design
   * ====================================== */

  .highscores__content {
    margin-top: var(--space-2xl);
    line-height: var(--leading-enhanced);
    animation: fadeIn var(--animation-duration-normal) ease-out;
  }

  // Enhanced filter section with modern design
  .highscores__filters {
    margin-bottom: var(--space-3xl);
    animation: slideIn var(--animation-duration-normal) ease-out;
  }

  .highscores__filters-container {
    max-width: var(--container-lg);
    margin: 0 auto;
  }

  .highscores__filter-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-xl);
    margin-top: var(--space-2xl);

    @include respond-to-sm {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-2xl);
    }

    @include respond-to-lg {
      grid-template-columns: repeat(2, 1fr);
      max-width: var(--container-md);
      margin-left: auto;
      margin-right: auto;
    }
  }

  .highscores__filter-group {
    background: var(--card-bg);
    border: var(--border-width-thin) solid var(--card-border);
    border-radius: var(--radius-xl);
    padding: var(--space-2xl);
    box-shadow: var(--card-shadow);
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;

    // Subtle inner glow
    box-shadow:
      var(--card-shadow),
      inset 0 var(--border-width-thin) 0 oklch(from var(--interactive-primary) l c h / 0.1);

    &:hover {
      transform: translateY(calc(-1 * var(--space-sm)));
      box-shadow: var(--card-shadow-hover);
      border-color: var(--interactive-primary);
      background: linear-gradient(
        135deg,
        var(--card-bg) 0%,
        color-mix(in srgb, var(--card-bg) 95%, var(--interactive-primary) 5%) 100%
      );
    }

    // Decorative accent line
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: var(--border-width-enhanced);
      background: linear-gradient(
        90deg,
        var(--interactive-primary) 0%,
        var(--interactive-secondary) 50%,
        var(--interactive-primary) 100%
      );
      opacity: 0.7;
    }

    @include respond-to-md {
      padding: var(--space-3xl);
    }
  }

  .highscores__filter-header {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    margin-bottom: var(--space-xl);

    @include respond-to-md {
      margin-bottom: var(--space-2xl);
    }
  }

  .highscores__filter-icon {
    width: var(--icon-size-lg);
    height: var(--icon-size-lg);
    color: var(--interactive-primary);
    flex-shrink: 0;

    @include respond-to-md {
      width: var(--icon-size-xl);
      height: var(--icon-size-xl);
    }
  }

  .highscores__filter-label {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--text-primary);
    line-height: var(--leading-tight);

    @include respond-to-md {
      font-size: var(--text-xl);
    }
  }

  .highscores__select-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }

  .highscores__filter-select {
    width: var(--width-full);
    padding: var(--space-lg) var(--space-xl);
    background: var(--form-bg);
    border: var(--border-width-thin) solid var(--form-border);
    border-radius: var(--radius-lg);
    color: var(--form-text);
    font-size: var(--text-base);
    font-weight: var(--font-medium);
    line-height: var(--leading-normal);
    min-height: var(--min-touch-size);
    transition: all var(--transition-normal);
    cursor: pointer;
    appearance: none;
    padding-right: calc(var(--space-xl) + var(--icon-size-lg) + var(--space-md));

    @include focus-visible;

    &:hover {
      border-color: var(--interactive-primary);
      background-color: color-mix(in srgb, var(--form-bg) 95%, var(--interactive-primary) 5%);
    }

    &:focus {
      border-color: var(--interactive-primary);
      box-shadow: var(--focus-ring);
      background-color: var(--form-bg);
    }

    @include respond-to-md {
      padding: var(--space-xl) var(--space-2xl);
      font-size: var(--text-lg);
      padding-right: calc(var(--space-2xl) + var(--icon-size-xl) + var(--space-lg));
    }
  }

  .highscores__select-arrow {
    position: absolute;
    right: var(--space-lg);
    width: var(--icon-size-md);
    height: var(--icon-size-md);
    color: var(--text-secondary);
    pointer-events: none;
    transition: color var(--transition-normal);

    @include respond-to-md {
      right: var(--space-xl);
      width: var(--icon-size-lg);
      height: var(--icon-size-lg);
    }
  }

  .highscores__filter-select:hover + .highscores__select-arrow {
    color: var(--interactive-primary);
  }

  /* ======================================
   * RESULTS & CARDS SECTIONS
   * Enhanced with modern SCSS and responsive design
   * ====================================== */

  .highscores__list {
    margin-top: var(--space-3xl);
  }

  .highscores__list-title {
    margin-bottom: var(--space-2xl);
    text-align: center;
  }

  .highscores__empty {
    text-align: center;
    padding: var(--space-2xl) var(--space-lg);
    border-radius: var(--radius-md);
    background-color: var(--bg-tertiary);
    border: var(--border-width-thin) solid var(--border-secondary);
    margin: var(--space-xl) auto;
    max-width: var(--container-sm);
    animation: fadeIn var(--animation-duration-normal) ease-out;

    @include respond-to-md {
      padding: var(--space-3xl) var(--space-2xl);
      max-width: var(--container-md);
    }
  }

  // Enhanced cards grid with comprehensive responsive design
  .highscores__cards-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-lg);
    margin: var(--space-2xl) auto;
    width: var(--width-full);
    max-width: var(--container-2xl);
    contain: layout style;
    animation: fadeIn var(--animation-duration-normal) ease-out;

    // Mobile portrait (< 480px) - single column
    @media (max-width: 29.9375em) {
      gap: var(--space-md);
      margin: var(--space-lg) auto;
    }

    // Mobile landscape (480px - 640px) - 2 columns
    @media (min-width: 30em) and (max-width: 39.9375em) {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-lg);
    }

    // Small tablet (640px - 768px) - 2 columns
    @media (min-width: 40em) and (max-width: 47.9375em) {
      grid-template-columns: repeat(auto-fit, minmax(var(--grid-min-width-sm), 1fr));
      gap: var(--space-lg);
    }

    // Tablet (768px - 1024px) - 2-3 columns
    @media (min-width: 48em) and (max-width: 63.9375em) {
      grid-template-columns: repeat(auto-fit, minmax(var(--grid-min-width-md), 1fr));
      gap: var(--space-xl);
      margin: var(--space-2xl) auto;
    }

    // Desktop (1024px - 1280px) - 3 columns
    @media (min-width: 64em) and (max-width: 79.9375em) {
      grid-template-columns: repeat(auto-fit, minmax(var(--grid-min-width-lg), 1fr));
      gap: var(--space-xl);
      margin: var(--space-3xl) auto;
    }

    // Large desktop (1280px+) - up to 4 columns
    @media (min-width: 80em) {
      grid-template-columns: repeat(auto-fit, minmax(var(--grid-min-width-xl), 1fr));
      gap: var(--space-2xl);
    }

    // Container queries for better component isolation
    @include container-query(20rem) {
      grid-template-columns: repeat(1, 1fr);
    }

    @include container-query(30rem) {
      grid-template-columns: repeat(2, 1fr);
    }

    @include container-query(40rem) {
      grid-template-columns: repeat(2, 1fr);
    }

    @include container-query(50rem) {
      grid-template-columns: repeat(3, 1fr);
    }

    @include container-query(60rem) {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  /* ======================================
   * ENHANCED CARD STYLING
   * Modern card design with better responsive behavior
   * ====================================== */

  .highscores__card {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
    min-height: var(--container-intrinsic-height-card);
    background: var(--card-bg);
    border: var(--border-width-thin) solid var(--card-border);
    border-radius: var(--radius-3xl);
    box-shadow: none;
    transition: none;
    overflow: hidden;
    contain: layout style;
    animation: none;
    padding-bottom: var(--space-xl);
  }

  .highscores__card-badge {
    position: absolute;
    top: var(--space-lg);
    right: var(--space-lg);
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .highscores__rank-badge {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: calc(var(--min-touch-size) * 1.27);
    height: calc(var(--min-touch-size) * 1.27);
    border-radius: var(--radius-full);
    font-size: var(--text-lg);
    font-weight: var(--font-black);
    background: var(--bg-tertiary);
    border: var(--border-width-enhanced) solid var(--border-secondary);
    color: var(--text-primary);
    box-shadow: none !important;
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;
    text-align: center;
    gap: 0.1em;

    // Mobile portrait
    @media (max-width: 29.9375em) {
      width: var(--min-touch-size);
      height: var(--min-touch-size);
      font-size: var(--text-base);
    }

    // Tablet and up
    @media (min-width: 48em) {
      width: calc(var(--min-touch-size) * 1.64);
      height: calc(var(--min-touch-size) * 1.64);
      font-size: var(--text-2xl);
    }

    // Desktop
    @media (min-width: 64em) {
      font-size: var(--text-3xl);
    }
  }

  .highscores__rank-badge--medal {
    &.highscores__rank-badge--gold,
    &.highscores__rank-badge--silver,
    &.highscores__rank-badge--bronze {
      box-shadow: none !important;
    }
  }

  // Medal variations for specific positions
  .highscores__card:nth-child(2) .highscores__rank-badge--medal {
    background: linear-gradient(
      135deg,
      var(--achievement-silver) 0%,
      color-mix(in srgb, var(--achievement-silver) 80%, var(--color-white) 20%) 100%
    );
    border-color: var(--achievement-silver);
    box-shadow:
      0 0 var(--space-md) oklch(from var(--achievement-silver) l c h / 0.4),
      inset 0 var(--border-width-thin) 0 oklch(from var(--color-white) l c h / 0.3);
  }

  .highscores__card:nth-child(3) .highscores__rank-badge--medal {
    background: linear-gradient(
      135deg,
      var(--achievement-bronze) 0%,
      color-mix(in srgb, var(--achievement-bronze) 80%, var(--color-white) 20%) 100%
    );
    border-color: var(--achievement-bronze);
    box-shadow:
      0 0 var(--space-md) oklch(from var(--achievement-bronze) l c h / 0.4),
      inset 0 var(--border-width-thin) 0 oklch(from var(--color-white) l c h / 0.3);
  }

  /* ======================================
   * CARD CONTENT & SCORE SECTIONS
   * Enhanced with modern SCSS and responsive design
   * ====================================== */

  .highscores__card-content {
    padding: var(--space-xl);
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    z-index: 1;

    @include respond-to-md {
      padding: var(--space-2xl);
    }
  }

  .highscores__card-main {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    margin-bottom: var(--space-lg);
    padding-bottom: var(--space-md);
  }

  .highscores__card-username {
    font-size: var(--text-lg);
    font-weight: var(--font-bold);
    color: var(--text-primary);
    line-height: var(--leading-tight);
    margin: 0;

    @include respond-to-md {
      font-size: var(--text-xl);
    }
  }

  .highscores__card-score {
    display: flex;
    align-items: baseline;
    gap: var(--space-xs);
    flex-wrap: wrap;

    @include respond-to-md {
      gap: var(--space-sm);
    }
  }

  .highscores__score-value {
    font-size: var(--text-xl);
    font-weight: var(--font-black);
    background: linear-gradient(
      135deg,
      var(--interactive-primary) 0%,
      var(--interactive-secondary) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    line-height: var(--leading-tight);
    position: relative;

    @include respond-to-md {
      font-size: var(--text-2xl);
    }
  }

  .highscores__score-label {
    font-size: var(--text-sm);
    color: var(--text-secondary);
    font-weight: var(--font-semibold);
    text-transform: uppercase;
    letter-spacing: var(--text-spacing-letter-2x);

    @include respond-to-md {
      font-size: var(--text-base);
    }
  }

  /* ======================================
   * CARD DETAILS SECTION
   * Enhanced with modern SCSS and responsive design
   * ====================================== */

  .highscores__card-details {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    margin-top: auto;
    padding-top: var(--space-md);
    border-top: var(--border-width-thin) solid
      color-mix(in srgb, var(--border-primary) 30%, transparent 70%);

    @include respond-to-md {
      flex-direction: row;
      gap: var(--space-md);
      justify-content: space-between;
      align-items: flex-start;
    }
  }

  .highscores__detail-item {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0;
    background: none;
    border: none;
    border-radius: 0;
    padding: 0;
    min-height: unset;
    margin-bottom: 0;
    position: static;
    overflow: visible;
    box-shadow: none;

    // Trennlinie wie gehabt
    & + .highscores__detail-item {
      border-top: var(--border-width-thin) solid
        color-mix(in srgb, var(--border-primary) 30%, transparent 70%);
      margin-top: var(--space-md);
      padding-top: var(--space-md);
    }
    @include respond-to-md {
      & + .highscores__detail-item {
        border-top: none;
        margin-top: 0;
        padding-top: 0;
        border-left: var(--border-width-thin) solid
          color-mix(in srgb, var(--border-primary) 30%, transparent 70%);
        margin-left: var(--space-xl);
        padding-left: var(--space-xl);
      }
    }

    // Icon + Label in eine Zeile
    .highscores__detail-header {
      display: flex;
      align-items: center;
      gap: var(--space-xs);
      margin-bottom: 0.1em;
    }

    // Value darunter, leicht eingerückt
    .highscores__detail-value {
      margin-left: calc(var(--icon-size-md) + var(--space-xs));
      margin-top: 0.1em;
      font-size: var(--text-base);
      font-weight: var(--font-semibold);
      color: var(--text-primary);
      line-height: var(--leading-tight);
      @include respond-to-md {
        margin-left: calc(var(--icon-size-lg) + var(--space-xs));
      }
    }
  }

  .highscores__detail-icon {
    width: var(--icon-size-md);
    height: var(--icon-size-md);
    color: var(--interactive-primary);
    flex-shrink: 0;
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, var(--shadow-opacity-light)));

    @include respond-to-md {
      width: var(--icon-size-lg);
      height: var(--icon-size-lg);
    }
  }

  .highscores__detail-content {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    flex: 1;

    @include respond-to-md {
      gap: var(--space-md);
    }
  }

  .highscores__detail-label {
    font-size: var(--text-xs);
    font-weight: var(--font-bold);
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: var(--text-spacing-letter-2x);
    opacity: 0.8;

    @include respond-to-md {
      font-size: var(--text-sm);
    }
  }

  .highscores__detail-value {
    font-size: var(--text-base);
    color: var(--text-primary);
    font-weight: var(--font-semibold);
    line-height: var(--leading-tight);

    @include respond-to-md {
      font-size: var(--text-base);
    }
  }

  // Special styling for different detail types with responsive design
  .highscores__mode {
    color: var(--interactive-secondary);
    font-weight: var(--font-bold);
    text-transform: capitalize;
    background: linear-gradient(
      135deg,
      var(--interactive-secondary) 0%,
      var(--interactive-primary) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;

    @include respond-to-md {
      font-size: var(--text-xl);
    }

    // Fallback for browsers that don't support background-clip: text
    @supports not (background-clip: text) {
      color: var(--interactive-secondary);
    }
  }

  .highscores__category {
    color: var(--text-primary);
    font-weight: var(--font-semibold);

    @include respond-to-md {
      font-size: var(--text-xl);
    }
  }

  .highscores__date {
    color: var(--text-tertiary);
    font-size: var(--text-base);
    font-variant-numeric: tabular-nums;
    font-weight: var(--font-medium);

    @include respond-to-md {
      font-size: var(--text-lg);
    }
  }

  /* ======================================
   * RESPONSIVE IMPROVEMENTS & CONTAINER QUERIES
   * Enhanced with modern SCSS and better responsive design
   * ====================================== */

  // Container queries for enhanced responsive cards
  @include container-query(20rem) {
    .highscores__card-content {
      padding: var(--space-lg);
    }

    .highscores__card-header {
      margin-bottom: var(--space-lg);
      padding-bottom: var(--space-md);
    }
  }

  @include container-query(24rem) {
    .highscores__card-content {
      padding: var(--space-xl);
    }

    .highscores__card-header {
      margin-bottom: var(--space-xl);
      padding-bottom: var(--space-lg);
    }
  }

  @include container-query(30rem) {
    .highscores__card-content {
      padding: var(--space-2xl);
    }

    .highscores__card-header {
      margin-bottom: var(--space-2xl);
      padding-bottom: var(--space-xl);
    }
  }

  // Additional responsive improvements
  @include respond-to-xl {
    .highscores__cards-grid {
      grid-template-columns: repeat(5, 1fr);
    }
  }

  // Fluid typography for better responsive behavior
  @include respond-to-lg {
    .highscores__card {
      &-username {
        font-size: clamp(var(--text-xl), 2.5vw, var(--text-3xl));
      }

      &-score-value {
        font-size: clamp(var(--text-3xl), 4vw, var(--text-5xl));
      }

      &-info-label,
      &-info-value {
        font-size: clamp(var(--text-sm), 1.5vw, var(--text-base));
      }
    }
  }

  /* ======================================
   * ACCESSIBILITY & PRINT STYLES
   * Enhanced with modern SCSS and better a11y support
   * ====================================== */

  // Reduced motion support with enhanced SCSS
  @media (prefers-reduced-motion: reduce) {
    .highscores__loading-icon,
    .highscores__rank-badge,
    .highscores__card,
    .highscores__filter-select,
    .highscores__detail-item {
      animation: none;
      transition: var(--transition-instant);
    }

    .highscores__card:hover {
      transform: none;
    }

    .highscores__rank-badge:hover {
      transform: none;
    }

    .highscores__detail-item:hover {
      transform: none;
    }
  }

  // High contrast mode support with enhanced styling
  @media (prefers-contrast: high) {
    .highscores__card {
      border: var(--border-width-thick) solid var(--text-primary);
    }

    .highscores__card-header {
      border-bottom: var(--border-width-thick) solid var(--text-primary);
    }

    .highscores__rank-badge--medal {
      background: var(--text-primary) !important;
      color: var(--bg-primary) !important;
      border-color: var(--text-primary) !important;
    }

    .highscores__mode {
      border: var(--border-width-thick) solid var(--text-primary);
    }

    .highscores__filter-select {
      border: var(--border-width-thick) solid var(--text-primary);
    }

    .highscores__detail-item {
      border: var(--border-width-thick) solid var(--text-primary);
    }
  }

  // Print styles optimized for modern browsers
  @media print {
    .highscores__filters {
      display: none;
    }

    .highscores-container {
      padding: var(--space-md);
      max-width: var(--width-full);
    }

    .highscores-hero {
      background: var(--print-bg);
      box-shadow: none;
      border: var(--border-width-thin) solid var(--print-border);
    }

    .highscores__cards-grid {
      grid-template-columns: 1fr 1fr;
      gap: var(--space-md);
    }

    .highscores__card {
      border: var(--border-width-thin) solid var(--print-border);
      background: var(--print-bg);
      color: var(--print-text);
      page-break-inside: avoid;
      box-shadow: none;
      font-size: var(--text-sm);

      &-content {
        padding: var(--space-sm);
      }

      &-header {
        margin-bottom: var(--space-md);
        padding-bottom: var(--space-sm);
        border-bottom: var(--border-width-thin) solid var(--print-border);
      }

      &-username {
        font-size: var(--text-base);
      }

      &-detail-label,
      &-detail-value {
        font-size: var(--text-xs);
      }
    }

    .highscores__score-value {
      font-size: var(--text-lg);
    }

    .highscores__rank-badge--medal {
      background: var(--print-text) !important;
      color: var(--print-bg) !important;
    }
  }
</style>

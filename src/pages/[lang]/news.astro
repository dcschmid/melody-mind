---
/**
 * Music News Page - SSR Rendered
 * Displays aggregated music news from RSS feeds
 */

import Layout from "../../layouts/Layout.astro";
import { getNewsForLanguage } from "../../services/rssService.ts";
import { useTranslations } from "../../utils/i18n.ts";
import { extractKeywords, generateMetaDescription } from "../../utils/seo.ts";

export const prerender = false; // Enable SSR for this page

const { lang } = Astro.params;
const currentLang = lang || "en";
const t = useTranslations(currentLang);

// Fetch news data at build time
let newsData;
let error = null;

try {
  newsData = await getNewsForLanguage(currentLang);
} catch (e) {
  error = e instanceof Error ? e.message : "Failed to load news";
  console.error("Error loading news:", e);
  // Fallback empty data
  newsData = {
    items: [],
    lastUpdated: new Date().toISOString(),
    totalSources: 0,
    language: currentLang,
  };
}

const pageTitle = t("news.title");
const pageDescription = t("news.description");

// SEO optimization using existing architecture
// Generate rich content for SEO using existing utility functions
const enrichedContent = newsData?.items
  ? `${pageTitle} ${pageDescription} ${newsData.items
      .slice(0, 10)
      .map(item => `${item.title} ${item.description}`)
      .join(" ")}`
  : `${pageTitle} ${pageDescription}`;

// Use existing SEO utilities
const optimizedDescription = generateMetaDescription(enrichedContent, 155);
const seoKeywords = extractKeywords(enrichedContent, 15, currentLang);

// Enhanced page metadata
const baseUrl = Astro.site?.toString() || "https://melody-mind.de";
const currentUrl = `${baseUrl}/${currentLang}/news`;

// Generate NewsArticle structured data using existing patterns
const newsStructuredData = newsData?.items?.length ? {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": `${pageTitle} - MelodyMind`,
  "description": optimizedDescription,
  "url": currentUrl,
  "inLanguage": currentLang,
  "isPartOf": {
    "@type": "WebSite",
    "name": "MelodyMind",
    "url": baseUrl
  },
  "mainEntity": {
    "@type": "ItemList",
    "numberOfItems": newsData.items.length,
    "itemListElement": newsData.items.slice(0, 10).map((item, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "item": {
        "@type": "NewsArticle",
        "headline": item.title,
        "description": item.description,
        "url": item.link,
        "datePublished": item.pubDate,
        "author": {
          "@type": "Organization",
          "name": item.source
        },
        "publisher": {
          "@type": "Organization",
          "name": "MelodyMind",
          "url": baseUrl
        },
        "image": item.imageUrl || `${baseUrl}/images/news-fallback.svg`,
        "genre": "Music",
        "about": "Music News"
      }
    }))
  }
} : null;
---

<Layout 
  title={`${pageTitle} - MelodyMind`}
  description={optimizedDescription}
  keywords={seoKeywords}
  image={newsData?.items?.[0]?.imageUrl || "/images/news-fallback.svg"}
  type="website"
  publishDate={newsData?.lastUpdated ? new Date(newsData.lastUpdated) : new Date()}
  modifiedDate={new Date()}
>
  <!-- Enhanced structured data for news -->
  <Fragment slot="head">
    <link rel="canonical" href={currentUrl} />
    
    {newsStructuredData && (
      <script type="application/ld+json" set:html={JSON.stringify(newsStructuredData)} />
    )}
    
    <!-- News-specific meta tags -->
    <meta name="news_keywords" content={seoKeywords} />
    <meta property="article:section" content="Music News" />
    <meta property="article:tag" content="Music" />
    <meta property="article:tag" content="News" />
    <meta property="article:tag" content="Artists" />
    <meta property="article:tag" content="Entertainment" />
  </Fragment>
  <main class="news">
    <div class="news__container">
      <!-- Hero Header Section like GameHome -->
      <header class="news__hero" aria-labelledby="news-heading">
        <!-- Decorative background elements -->
        <div class="news__hero-decoration" aria-hidden="true">
          <div class="news__hero-decoration-item news__hero-decoration-item--top-right"></div>
          <div class="news__hero-decoration-item news__hero-decoration-item--bottom-left"></div>
          <div class="news__hero-decoration-item news__hero-decoration-item--center-right"></div>
        </div>

        <div class="news__hero-content">
          <h1 id="news-heading" class="news__hero-title">{pageTitle}</h1>
          <div class="news__hero-divider"></div>
          <p class="news__hero-description">{pageDescription}</p>
          
          {
            newsData && (
              <div class="news__hero-meta">
                <div class="news__hero-meta-item">
                  <span class="news__hero-meta-label">{t("news.lastUpdated")}:</span>
                  <time class="news__hero-meta-value" datetime={newsData.lastUpdated}>
                    {new Date(newsData.lastUpdated).toLocaleString(currentLang)}
                  </time>
                </div>
                <div class="news__hero-meta-item">
                  <span class="news__hero-meta-label">{t("news.sourcesCount", { count: newsData.totalSources })}</span>
                </div>
              </div>
            )
          }
        </div>
      </header>

      {
        error && (
          <div class="news__error" role="alert">
            <h2 class="news__error-title">{t("errors.loadingError")}</h2>
            <p class="news__error-message">{error}</p>
            <button type="button" class="news__retry-btn" onclick="window.location.reload()">
              {t("common.retry")}
            </button>
          </div>
        )
      }

      {
        !error && newsData.items.length > 0 && (
          <section class="news__content" aria-labelledby="news-list-title">
            <h2 id="news-list-title" class="sr-only">
              {t("news.articlesList")}
            </h2>

            <div class="news__grid" itemscope itemtype="https://schema.org/ItemList">
              {newsData.items.map((item, index) => (
                <article 
                  class="news__card" 
                  aria-labelledby={`news-title-${index}`}
                  itemscope 
                  itemtype="https://schema.org/NewsArticle"
                  itemprop="itemListElement"
                >
                  <div class="news__card-image">
                    <img
                      src={item.imageUrl || "/images/news-fallback.svg"}
                      alt={`${item.title} - ${t("news.imageAlt")}`}
                      class="news__card-img"
                      loading="lazy"
                    />
                    <div class="news__card-image-overlay" aria-hidden="true">
                      <span class="news__card-image-icon">ðŸ“°</span>
                    </div>
                  </div>

                  <div class="news__card-content">
                    <header class="news__card-header">
                      <div class="news__card-meta">
                        <span class="news__card-source" itemprop="author">{item.source}</span>
                        <time class="news__card-date" datetime={item.pubDate} itemprop="datePublished">
                          {new Date(item.pubDate).toLocaleDateString(currentLang)}
                        </time>
                      </div>

                      <h3 id={`news-title-${index}`} class="news__card-title" itemprop="headline">
                        <a
                          href={item.link}
                          target="_blank"
                          rel="noopener noreferrer"
                          class="news__card-link"
                          itemprop="url"
                        >
                          {item.title}
                        </a>
                      </h3>

                      {item.description && <p class="news__card-description" itemprop="description">{item.description}</p>}
                    </header>

                    <footer class="news__card-footer">
                      <a
                        href={item.link}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="news__card-read-more"
                        aria-label={`${t("news.readMore")} - ${item.title}`}
                      >
                        {t("news.readMore")}
                        <span class="news__card-external-icon" aria-hidden="true">
                          â†—
                        </span>
                      </a>
                    </footer>
                  </div>
                </article>
              ))}
            </div>
          </section>
        )
      }

      {
        !error && newsData.items.length === 0 && (
          <section class="news__empty" role="status">
            <h2 class="news__empty-title">{t("news.noNews")}</h2>
            <p class="news__empty-message">{t("news.noNewsDescription")}</p>
            <button type="button" class="news__refresh-btn" onclick="window.location.reload()">
              {t("news.refresh")}
            </button>
          </section>
        )
      }

      <!-- Footer Info -->
      <footer class="news__footer">
        <div class="news__disclaimer">
          <h3 class="news__disclaimer-title">{t("news.disclaimer.title")}</h3>
          <p class="news__disclaimer-text">
            {t("news.disclaimer.text")}
          </p>
        </div>

        <div class="news__legal">
          <p class="news__legal-text">
            {t("news.legal.attribution")}
          </p>
          <ul class="news__sources-list">
            {
              newsData &&
                newsData.items
                  .map((item) => item.source)
                  .filter((source, index, arr) => arr.indexOf(source) === index)
                  .map((source) => <li class="news__source-item">{source}</li>)
            }
          </ul>
        </div>
      </footer>
    </div>
  </main>
</Layout>

<style lang="scss">
  /* ======================================
   * NEWS PAGE STYLES - FOLLOWING GAMEHOME CARD DESIGN
   * Using global.css variables for consistency
   * ====================================== */

  .news {
    min-height: 100vh;
    background: var(--bg-primary);
    color: var(--text-primary);
    padding: var(--space-lg) 0;
  }

  .news__container {
    max-width: var(--container-xl);
    margin: 0 auto;
    padding: 0 var(--space-md);

    // Mobile Portrait - compact padding
    @media (max-width: 19.9375em) {
      padding: 0 var(--space-sm);
    }

    @media (min-width: 20em) {
      padding: 0 var(--space-lg);
    }

    @media (min-width: 64em) {
      padding: 0 var(--space-xl);
    }
  }

  /* ======================================
   * HERO SECTION - LIKE GAMEHOME DESIGN
   * ====================================== */
  .news__hero {
    position: relative;
    overflow: hidden;
    background: linear-gradient(
      135deg,
      var(--color-primary-900) 0%,
      var(--color-primary-700) 50%,
      var(--color-secondary-800) 100%
    );
    box-shadow: var(--shadow-xl);
    border: 1px solid var(--border-color);
    margin-bottom: var(--space-2xl);
    border-radius: var(--radius-xl);

    // Mobile Portrait - compact spacing
    padding: var(--space-lg) var(--space-md);

    @media (min-width: 20em) {
      padding: var(--space-xl) var(--space-lg);
    }

    @media (min-width: 40em) {
      padding: var(--space-2xl) var(--space-xl);
      border-radius: var(--radius-2xl);
    }

    @media (min-width: 64em) {
      padding: var(--space-3xl) var(--space-2xl);
    }

    @media (prefers-reduced-motion: reduce) {
      background: var(--color-primary-800);
    }
  }

  // Decorative background elements
  .news__hero-decoration {
    position: absolute;
    inset: 0;
    opacity: 0.1;
    pointer-events: none;
  }

  .news__hero-decoration-item {
    position: absolute;
    border-radius: var(--radius-full);
    background: var(--color-white);

    &--top-right {
      top: calc(-1 * var(--space-xl));
      right: calc(-1 * var(--space-xl));
      width: var(--space-3xl);
      height: var(--space-3xl);
    }

    &--bottom-left {
      bottom: calc(-1 * var(--space-2xl));
      left: calc(-1 * var(--space-2xl));
      width: calc(var(--space-3xl) * 2);
      height: calc(var(--space-3xl) * 2);
    }

    &--center-right {
      top: 50%;
      right: calc(-1 * var(--space-md));
      width: var(--space-2xl);
      height: var(--space-2xl);
      transform: translateY(-50%);
    }
  }

  .news__hero-content {
    position: relative;
    z-index: 1;
    text-align: center;
    color: var(--color-white);
  }

  .news__hero-title {
    color: var(--color-white);
    text-shadow: var(--text-shadow-strong);

    // Mobile Portrait - compact spacing
    margin-bottom: var(--space-sm);
    font-size: var(--text-xl);
    line-height: var(--leading-tight);

    @media (min-width: 20em) {
      margin-bottom: var(--space-md);
      font-size: var(--text-2xl);
      line-height: var(--leading-snug);
    }

    @media (min-width: 40em) {
      margin-bottom: var(--space-lg);
      font-size: var(--text-3xl);
    }

    @media (min-width: 64em) {
      font-size: var(--text-4xl);
      line-height: var(--leading-relaxed);
    }
  }

  .news__hero-divider {
    background: var(--color-secondary-400);
    border-radius: var(--radius-full);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);

    // Mobile Portrait - smaller divider
    width: var(--icon-size-lg);
    height: var(--border-width-thick);
    margin: var(--space-md) auto;

    @media (min-width: 20em) {
      width: var(--icon-size-xl);
      margin: var(--space-lg) auto;
    }

    @media (min-width: 40em) {
      height: var(--border-width-enhanced);
    }
  }

  .news__hero-description {
    color: var(--color-neutral-100);
    line-height: var(--leading-relaxed);
    margin: 0 auto var(--space-xl);
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);

    // Mobile Portrait - compact text
    font-size: var(--text-base);
    max-width: var(--container-xs);

    @media (min-width: 20em) {
      font-size: var(--text-lg);
      max-width: var(--container-sm);
    }

    @media (min-width: 40em) {
      font-size: var(--text-xl);
      max-width: var(--container-md);
    }

    @media (min-width: 64em) {
      font-size: var(--text-2xl);
      max-width: var(--container-lg);
    }
  }

  .news__hero-meta {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-lg);
    flex-wrap: wrap;

    @media (max-width: 47.9375em) {
      flex-direction: column;
      gap: var(--space-md);
    }
  }

  .news__hero-meta-item {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    background: rgba(255, 255, 255, 0.1);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-full);
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    font-size: var(--text-sm);

    @media (max-width: 47.9375em) {
      flex-direction: column;
      gap: var(--space-xs);
      text-align: center;
    }
  }

  .news__hero-meta-label {
    color: rgba(255, 255, 255, 0.8);
    font-weight: var(--font-medium);
  }

  .news__hero-meta-value {
    color: var(--color-white);
    font-weight: var(--font-semibold);
  }

  /* ======================================
   * ERROR & EMPTY STATES
   * ====================================== */
  .news__error,
  .news__empty {
    text-align: center;
    padding: var(--space-2xl);
    background: var(--bg-secondary);
    border-radius: var(--radius-xl);
    border: 1px solid var(--border-color);
    margin: var(--space-xl) 0;
  }

  .news__error {
    border-color: var(--error-500);
    background: var(--bg-error-aaa);
  }

  .news__error-title {
    color: var(--text-error-aaa);
    margin-bottom: var(--space-md);
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
  }

  .news__retry-btn,
  .news__refresh-btn {
    background: linear-gradient(135deg, var(--primary-600), var(--primary-700));
    color: var(--color-white);
    border: none;
    border-radius: var(--radius-lg);
    padding: var(--space-sm) var(--space-lg);
    cursor: pointer;
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    transition: all var(--transition-base);
    margin-top: var(--space-md);

    &:hover {
      background: linear-gradient(135deg, var(--primary-700), var(--primary-800));
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

    &:active {
      transform: translateY(0);
    }
  }

  /* ======================================
   * NEWS GRID - CARD LAYOUT LIKE GAMEHOME
   * ====================================== */
  .news__grid {
    display: grid;
    margin-bottom: var(--space-2xl);
    gap: var(--space-lg);

    // Mobile Portrait - single column
    grid-template-columns: 1fr;

    // Mobile Landscape
    @media (min-width: 20em) {
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: var(--space-xl);
    }

    // Small Tablet
    @media (min-width: 40em) {
      grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    }

    // Medium Tablet
    @media (min-width: 48em) {
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    }

    // Desktop
    @media (min-width: 64em) {
      grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
    }

    // Large Desktop
    @media (min-width: 80em) {
      grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    }
  }

  /* ======================================
   * NEWS CARDS - FOLLOWING GAMEHOME DESIGN
   * ====================================== */
  .news__card {
    background: var(--bg-secondary);
    border-radius: var(--radius-xl);
    border: 1px solid var(--border-color);
    transition: all var(--transition-base);
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: hidden;
    position: relative;
    backdrop-filter: blur(10px);

    &:hover {
      transform: translateY(-8px);
      box-shadow: var(--shadow-2xl);
      border-color: var(--primary-500);

      .news__card-img {
        transform: scale(1.05);
      }
    }

    // Reduced motion support
    @media (prefers-reduced-motion: reduce) {
      &:hover {
        transform: none;
        .news__card-img {
          transform: none;
        }
      }
    }
  }

  /* Card Images */
  .news__card-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
    background: linear-gradient(
      135deg,
      var(--primary-900),
      var(--secondary-900),
      var(--bg-tertiary)
    );
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;

    @media (max-width: 19.9375em) {
      height: 160px;
    }

    @media (min-width: 20em) and (max-width: 39.9375em) {
      height: 180px;
    }

    @media (min-width: 40em) {
      height: 220px;
    }
  }

  .news__card-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform var(--transition-slow);
    position: relative;
    z-index: 2;
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
  }

  // Image overlay for failed/missing images
  .news__card-image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.8), rgba(236, 72, 153, 0.8));
    opacity: 0;
    transition: opacity var(--transition-base);
    z-index: 1;
  }

  .news__card-image-icon {
    font-size: 3rem;
    color: var(--color-white);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  // Show overlay when image fails to load or is fallback image
  .news__card-img[src="/images/news-fallback.svg"] + .news__card-image-overlay,
  .news__card-img[src*="news-fallback"] + .news__card-image-overlay {
    opacity: 0.7;
  }

  // Alternative: Show overlay on hover for fallback images
  .news__card:hover .news__card-img[src="/images/news-fallback.svg"] + .news__card-image-overlay,
  .news__card:hover .news__card-img[src*="news-fallback"] + .news__card-image-overlay {
    opacity: 0.9;
  }

  // Style for when actual image loads successfully
  .news__card-img:not([src="/images/news-fallback.svg"]):not([src*="news-fallback"])
    + .news__card-image-overlay {
    display: none;
  }

  // Special styling for fallback SVG images
  .news__card-img[src="/images/news-fallback.svg"],
  .news__card-img[src*="news-fallback"],
  .news__card-img--fallback {
    opacity: 0.9;
    filter: brightness(1.1) saturate(1.2);
  }

  // Loading state for images
  .news__card-img {
    background: linear-gradient(
      90deg,
      var(--bg-tertiary) 25%,
      var(--bg-secondary) 50%,
      var(--bg-tertiary) 75%
    );
    background-size: 200% 100%;
    animation: imageLoading 2s ease-in-out infinite;
  }

  .news__card-img[src]:not([src=""]) {
    animation: none;
  }

  @keyframes imageLoading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  // Hide loading animation when image loads
  .news__card-img[data-loaded="true"] {
    animation: none;
    background: none;
  }

  /* Card Content */
  .news__card-content {
    padding: var(--space-lg);
    flex: 1;
    display: flex;
    flex-direction: column;

    @media (max-width: 19.9375em) {
      padding: var(--space-md);
    }
  }

  .news__card-header {
    flex: 1;
    margin-bottom: var(--space-md);
  }

  .news__card-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-md);
    font-size: var(--text-sm);
    color: var(--text-tertiary);
    flex-wrap: wrap;
    gap: var(--space-sm);

    @media (max-width: 19.9375em) {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-xs);
    }
  }

  .news__card-source {
    font-weight: var(--font-semibold);
    color: var(--primary-400);
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.1), rgba(236, 72, 153, 0.1));
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-full);
    font-size: var(--text-xs);
    border: 1px solid rgba(139, 92, 246, 0.2);
  }

  .news__card-date {
    font-size: var(--text-xs);
    opacity: 0.8;
  }

  .news__card-title {
    font-size: clamp(var(--text-lg), 2vw, var(--text-xl));
    font-weight: var(--font-bold);
    margin-bottom: var(--space-md);
    line-height: var(--leading-tight);
    color: var(--text-primary);

    @media (max-width: 19.9375em) {
      margin-bottom: var(--space-sm);
    }
  }

  .news__card-link {
    color: inherit;
    text-decoration: none;
    transition: color var(--transition-fast);

    &:hover {
      color: var(--primary-400);
    }

    &:focus-visible {
      outline: 2px solid var(--primary-500);
      outline-offset: 2px;
      border-radius: var(--radius-sm);
    }
  }

  .news__card-description {
    color: var(--text-secondary);
    line-height: var(--leading-relaxed);
    font-size: var(--text-sm);
    display: -webkit-box;
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
    overflow: hidden;

    @media (max-width: 19.9375em) {
      font-size: var(--text-sm);
      line-height: var(--leading-normal);
      -webkit-line-clamp: 3;
    }
    
    @media (min-width: 20em) and (max-width: 39.9375em) {
      -webkit-line-clamp: 4;
    }
  }

  /* Card Footer */
  .news__card-footer {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    margin-top: auto;
  }

  .news__card-read-more {
    color: var(--primary-400);
    text-decoration: none;
    font-size: var(--text-sm);
    font-weight: var(--font-semibold);
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    transition: all var(--transition-fast);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-lg);
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.1), rgba(236, 72, 153, 0.1));
    border: 1px solid rgba(139, 92, 246, 0.2);

    &:hover {
      background: linear-gradient(135deg, var(--primary-600), var(--secondary-600));
      color: var(--color-white);
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

    &:focus-visible {
      outline: 2px solid var(--primary-500);
      outline-offset: 2px;
    }
  }

  .news__card-external-icon {
    font-size: var(--text-xs);
    transition: transform var(--transition-fast);
  }

  .news__card-read-more:hover .news__card-external-icon {
    transform: translate(2px, -2px);
  }

  /* ======================================
   * FOOTER SECTION
   * ====================================== */
  .news__footer {
    margin-top: var(--space-2xl);
    padding-top: var(--space-xl);
    border-top: 1px solid var(--border-color);
  }

  .news__disclaimer {
    margin-bottom: var(--space-xl);
    padding: var(--space-lg);
    background: var(--bg-secondary);
    border-radius: var(--radius-lg);
    border: 1px solid var(--border-color);
  }

  .news__disclaimer-title {
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    margin-bottom: var(--space-sm);
    color: var(--text-primary);
  }

  .news__disclaimer-text {
    font-size: var(--text-sm);
    color: var(--text-secondary);
    line-height: var(--leading-relaxed);
  }

  .news__legal-text {
    font-size: var(--text-sm);
    color: var(--text-tertiary);
    margin-bottom: var(--space-md);
  }

  .news__sources-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-sm);
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .news__source-item {
    font-size: var(--text-xs);
    color: var(--text-tertiary);
    padding: var(--space-xs) var(--space-sm);
    background: var(--bg-tertiary);
    border-radius: var(--radius-md);
    border: 1px solid var(--border-color);
  }

  /* ======================================
   * ACCESSIBILITY & FOCUS STYLES
   * ====================================== */
  .news__card:focus-within {
    outline: 2px solid var(--primary-500);
    outline-offset: 2px;
  }

  // Screen reader only class
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  // High contrast mode support
  @media (prefers-contrast: high) {
    .news__card {
      border-width: 2px;
    }

    .news__card-source,
    .news__card-read-more {
      border-width: 2px;
    }
  }

  // Print styles
  @media print {
    .news__card {
      break-inside: avoid;
      box-shadow: none;
      border: 1px solid var(--color-black);
    }

    .news__card-read-more {
      display: none;
    }
  }
</style>

<script>
  /**
   * Enhanced image fallback system for news articles
   * Handles image loading errors and provides smooth fallback experience
   */

  class NewsImageFallback {
    private fallbackSrc = "/images/news-fallback.svg";
    private retryAttempts = new Map<string, number>();
    private maxRetries = 2;

    constructor() {
      this.initializeImageHandlers();
    }

    private initializeImageHandlers(): void {
      // Handle all news card images
      const newsImages = document.querySelectorAll(
        ".news__card-img"
      ) as NodeListOf<HTMLImageElement>;

      newsImages.forEach((img) => {
        this.setupImageHandlers(img);
      });
    }

    private setupImageHandlers(img: HTMLImageElement): void {
      // Store original src for retry attempts
      const originalSrc = img.src;

      img.addEventListener("error", () => {
        this.handleImageError(img, originalSrc);
      });

      img.addEventListener("load", () => {
        this.handleImageLoad(img);
      });

      // Check if image is already failed to load
      if (img.complete && img.naturalHeight === 0) {
        this.handleImageError(img, originalSrc);
      }
    }

    private handleImageError(img: HTMLImageElement, originalSrc: string): void {
      const attempts = this.retryAttempts.get(originalSrc) || 0;

      if (attempts < this.maxRetries && originalSrc !== this.fallbackSrc) {
        // Try to reload the original image
        this.retryAttempts.set(originalSrc, attempts + 1);

        setTimeout(
          () => {
            img.src = `${originalSrc}?retry=${attempts + 1}`;
          },
          1000 * (attempts + 1)
        ); // Progressive delay
      } else {
        // Use fallback image
        this.useFallback(img);
      }
    }

    private handleImageLoad(img: HTMLImageElement): void {
      // Image loaded successfully - ensure overlay is hidden
      const overlay = img.nextElementSibling as HTMLElement;
      if (overlay && overlay.classList.contains("news__card-image-overlay")) {
        overlay.style.display = "none";
      }

      // Mark as loaded to stop loading animation
      img.setAttribute("data-loaded", "true");

      // Reset retry counter
      this.retryAttempts.delete(img.src);
    }

    private useFallback(img: HTMLImageElement): void {
      img.src = this.fallbackSrc;
      img.classList.add("news__card-img--fallback");

      // Show overlay for fallback images
      const overlay = img.nextElementSibling as HTMLElement;
      if (overlay && overlay.classList.contains("news__card-image-overlay")) {
        overlay.style.display = "flex";
        overlay.style.opacity = "0.7";
      }

      // Add accessible indication
      img.setAttribute("data-fallback", "true");
    }
  }

  // Initialize when DOM is ready
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", () => {
      new NewsImageFallback();
    });
  } else {
    new NewsImageFallback();
  }

  // Re-initialize for dynamically loaded content
  document.addEventListener("news:updated", () => {
    new NewsImageFallback();
  });
</script>

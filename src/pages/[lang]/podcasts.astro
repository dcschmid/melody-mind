---
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import Layout from "@layouts/Layout.astro";
import Headline from "@components/Headline.astro";
import Paragraph from "@components/Paragraph.astro";
import PodcastEpisode from "@components/Podcast/PodcastEpisode.astro";
import type { PodcastData } from "../../types/podcast";
import enPodcastsJson from "../../data/podcasts/en.json" assert { type: "json" };
/**
 * Static path generation for internationalization
 * Required for Astro dynamic routes to work properly
 */
export const getStaticPaths = async (): Promise<{ params: { lang: string } }[]> => {
  const supportedLanguages = [
    "de",
    "en",
    "es",
    "fr",
    "it",
    "pt",
    "da",
    "nl",
    "sv",
    "fi",
    "cn",
    "ru",
    "jp",
    "uk",
  ] as const;

  return supportedLanguages.map((lang) => ({
    params: { lang },
  }));
};

/**
 * Enable static site generation for this page
 */
export const prerender = true;

/**
 * Language and translation setup
 */
const lang = String(getLangFromUrl(Astro.url));
const t = useTranslations(String(lang));

/**
 * Load English podcast data regardless of site language
 * Uses static data to avoid build issues
 */
const loadPodcastsForLanguage = async (_language: string): Promise<PodcastData[]> => {
  const podcasts = enPodcastsJson.podcasts;
  return Array.isArray(podcasts) ? podcasts : [];
};

// Load English podcast data regardless of current language
const episodes = await loadPodcastsForLanguage("en");

// Show a notice when site language is not English
const showEnglishOnlyNotice = lang !== "en";

// SEO and page metadata
const title = t("podcast.title");
const description = t("podcast.description");
const currentUrl = new URL(Astro.url.pathname, Astro.site);
const baseUrl = Astro.site?.toString().replace(/\/$/, "") || "";

/**
 * Generate WebPage schema for podcast overview
 */
const generatePodcastPageSchema = () => ({
  "@context": "https://schema.org",
  "@type": "WebPage",
  name: `MelodyMind - ${title}`,
  description,
  url: currentUrl.toString(),
  inLanguage: lang,
  isPartOf: {
    "@type": "WebSite",
    name: "MelodyMind",
    url: baseUrl,
  },
  mainEntity: {
    "@type": "PodcastSeries",
    name: "MelodyMind Podcast",
    description,
    url: currentUrl.toString(),
    numberOfEpisodes: episodes.length,
  },
});

const pageSchema = generatePodcastPageSchema();
---

<Layout {title} {description} type="website" image="/social-share.jpg">
  <Fragment slot="head">
    <script type="application/ld+json" set:html={JSON.stringify(pageSchema)} />

    <!-- RSS Feed Discovery (English-only) -->
    <link
      rel="alternate"
      type="application/rss+xml"
      title={`MelodyMind Podcast - English`}
      href={`/en/podcasts/rss.xml`}
    />

    <!-- Podcast Platform Meta Tags -->
    <meta name="apple-itunes-app" content="app-id=525463029" />
    <meta name="google-play-app" content="app-id=com.google.android.apps.podcasts" />

    <!-- Open Graph for Podcasts -->
    <meta property="og:type" content="music.playlist" />
    <meta property="music:creator" content="MelodyMind" />
  </Fragment>

  <div class="podcasts-page">
    <!-- Hero Section -->
    <header class="podcasts-hero" aria-labelledby="podcast-heading">
      <!-- Decorative background elements -->
      <div class="podcasts-hero__decoration" aria-hidden="true">
        <div class="podcasts-hero__decoration-item podcasts-hero__decoration-item--top-right"></div>
        <div class="podcasts-hero__decoration-item podcasts-hero__decoration-item--bottom-left">
        </div>
        <div class="podcasts-hero__decoration-item podcasts-hero__decoration-item--center-right">
        </div>
      </div>

      <div class="podcasts-hero__content">
        <Headline level="h1" className="podcasts-hero__title" id="podcast-heading" size="4xl">
          üéôÔ∏è {title}
        </Headline>

        <div class="podcasts-hero__divider"></div>

        <Paragraph className="podcasts-hero__description">
          {description}
        </Paragraph>

        {
          episodes.length > 0 && (
            <div class="podcasts-hero__stats">
              <div class="podcasts-stat">
                <div class="podcasts-stat__icon-wrapper">
                  <span class="podcasts-stat__icon">üìö</span>
                </div>
                <div class="podcasts-stat__content">
                  <span class="podcasts-stat__value">
                    {episodes.length}{" "}
                    {episodes.length === 1
                      ? t("podcasts.episode.singular")
                      : t("podcasts.episode.plural")}
                  </span>
                </div>
              </div>

              <div class="podcasts-stat">
                <div class="podcasts-stat__icon-wrapper">
                  <span class="podcasts-stat__icon">üåê</span>
                </div>
                <div class="podcasts-stat__content">
                  <span class="podcasts-stat__value">English</span>
                </div>
              </div>

              {/* RSS Subscribe Button in Stats (English-only) */}
              <a
                href={`/en/podcasts/rss.xml`}
                class="podcasts-stat podcasts-stat--rss"
                title={t("podcast.rss.subscribe.title")}
                aria-label={`${t("podcast.rss.subscribe")} - ${t("podcast.rss.subscribe.description")}`}
              >
                <div class="podcasts-stat__icon-wrapper">
                  <span class="podcasts-stat__icon">üì°</span>
                </div>
                <div class="podcasts-stat__content">
                  <span class="podcasts-stat__value">{t("podcast.rss.subscribe")}</span>
                </div>
              </a>
            </div>
          )
        }
      </div>
    </header>

    <!-- Episodes List -->
    <main class="podcasts-main">
      {
        showEnglishOnlyNotice && (
          <div class="podcasts-restriction" role="region" aria-label="English only notice">
            <div class="podcasts-restriction__icon">‚ÑπÔ∏è</div>
            <Headline level="h2" size="xl" className="podcasts-restriction__title">
              Note: Podcasts are currently available only in English.
            </Headline>
            <Paragraph className="podcasts-restriction__description">
              We‚Äôre working on adding more languages soon. Thanks for your understanding.
            </Paragraph>
          </div>
        )
      }

      {
        episodes.length === 0 ? (
          <div class="podcasts-empty">
            <div class="podcasts-empty__icon">üéôÔ∏è</div>
            <Headline level="h2" size="2xl" className="podcasts-empty__title">
              {t("podcasts.empty.title")}
            </Headline>
            <Paragraph className="podcasts-empty__text">{t("podcasts.empty.text")}</Paragraph>
          </div>
        ) : (
          <div class="podcasts-list">
            {episodes
              .filter((episode: PodcastData) => episode.isAvailable)
              .map((episode: PodcastData) => (
                <PodcastEpisode
                  podcast={episode}
                  lang={String(lang)}
                  className="podcasts-list__episode"
                />
              ))}
          </div>
        )
      }
    </main>
  </div>
</Layout>

<style lang="scss">
  /* ======================================
   * PODCAST PAGE STYLES - OPTIMIZED FOR STYLE GUARDIAN
   * BEM Methodology + Global Variables + Mobile-First
   * ====================================== */

  .podcasts-page {
    width: 100%;
    max-width: var(--container-xl);
    margin: 0 auto;
    padding: var(--space-xs); // Mobile: minimal horizontal spacing
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
    min-height: 100vh;
    box-sizing: border-box;
    contain: layout style paint;
  }

  /* ======================================
   * HERO SECTION
   * ====================================== */
  .podcasts-hero {
    position: relative;
    margin-bottom: var(--space-lg);
    overflow: hidden;
    border-radius: var(--radius-lg);
    background: linear-gradient(
      135deg,
      var(--color-primary-800) 0%,
      var(--color-primary-900) 50%,
      var(--color-neutral-900) 100%
    );
    padding: var(--space-md);
    box-shadow: var(--shadow-xl);
    border: var(--border-width-thin) solid var(--border-primary);
    contain: layout style paint;

    &__decoration {
      position: absolute;
      inset: 0;
      opacity: 0.1;
      pointer-events: none;
      contain: layout style paint;

      &-item {
        position: absolute;
        border-radius: var(--radius-full);
        background: var(--color-white);
        contain: layout style paint;

        &--top-right {
          top: calc(-1 * var(--space-xl));
          right: calc(-1 * var(--space-xl));
          width: var(--space-3xl);
          height: var(--space-3xl);
        }

        &--bottom-left {
          bottom: calc(-1 * var(--space-2xl));
          left: calc(-1 * var(--space-2xl));
          width: calc(var(--space-3xl) * 2);
          height: calc(var(--space-3xl) * 2);
        }

        &--center-right {
          top: 50%;
          right: calc(-1 * var(--space-md));
          width: var(--space-2xl);
          height: var(--space-2xl);
          transform: translateY(-50%);
        }
      }
    }

    &__content {
      position: relative;
      z-index: var(--z-fixed);
      text-align: center;
      color: var(--color-white);
      contain: layout style;
    }

    &__title {
      margin-bottom: var(--space-sm);
      color: var(--color-white);
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      font-size: var(--text-2xl);
      line-height: var(--leading-tight);
      contain: layout style;
    }

    &__divider {
      width: var(--space-2xl);
      height: var(--border-width-thick);
      background: var(--color-secondary-400);
      margin: var(--space-md) auto;
      border-radius: var(--radius-full);
      contain: layout style paint;
    }

    &__description {
      color: var(--color-neutral-100);
      font-size: var(--text-base);
      line-height: var(--leading-relaxed);
      max-width: var(--container-sm);
      margin: 0 auto var(--space-md);
      opacity: 0.9;
      contain: layout style;
    }

    &__stats {
      display: flex;
      justify-content: center;
      gap: var(--space-md);
      flex-wrap: wrap;
      margin-top: var(--space-lg);
      width: 100%;
      max-width: 500px;
      margin-left: auto;
      margin-right: auto;
      contain: layout style;
    }
  }

  /* ======================================
   * PODCAST STATS
   * ====================================== */
  .podcasts-stat {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    color: var(--color-neutral-200);
    background: rgba(255, 255, 255, 0.15);
    padding: var(--space-sm);
    border-radius: var(--radius-lg);
    backdrop-filter: blur(10px);
    border: var(--border-width-thin) solid rgba(255, 255, 255, 0.25);
    min-height: var(--touch-target-enhanced);
    transition: all var(--transition-normal);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    flex: 1;
    min-width: 140px;
    max-width: 220px;
    contain: layout style paint;

    &:hover {
      transform: translateY(var(--animation-y-offset-small));
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
      background: rgba(255, 255, 255, 0.2);
      border-color: rgba(255, 255, 255, 0.35);
    }

    &__icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 36px;
      height: 36px;
      background: rgba(255, 255, 255, 0.2);
      border-radius: var(--radius-full);
      margin-right: var(--space-xs);
      contain: layout style paint;
    }

    &__icon {
      font-size: var(--text-base);
      contain: layout style;
    }

    &__content {
      display: flex;
      flex-direction: column;
      contain: layout style;
    }

    &__label {
      font-size: var(--text-xs);
      text-transform: uppercase;
      letter-spacing: var(--letter-spacing-enhanced);
      opacity: 0.8;
      margin-bottom: var(--space-2xs);
      contain: layout style;
    }

    &__value {
      font-size: var(--text-sm);
      font-weight: var(--font-semibold);
      contain: layout style;
    }

    &__text {
      white-space: nowrap;
      contain: layout style;
    }

    &--rss {
      text-decoration: none;
      color: var(--color-neutral-200);
      transition: all var(--transition-base);

      &:hover {
        background: linear-gradient(135deg, rgba(255, 165, 0, 0.3), rgba(255, 140, 0, 0.4));
        border-color: rgba(255, 165, 0, 0.6);
        transform: translateY(var(--animation-y-offset-small));
        box-shadow: 0 6px 20px rgba(255, 165, 0, 0.3);

        .podcasts-stat__icon-wrapper {
          background: rgba(255, 165, 0, 0.4);
        }

        .podcasts-stat__value {
          color: var(--color-white);
        }
      }

      &:focus {
        outline: var(--focus-ring);
        outline-offset: var(--focus-ring-offset);
      }
    }
  }

  /* ======================================
   * MAIN CONTENT
   * ====================================== */
  .podcasts-main {
    flex: 1;
    width: 100%;
    contain: layout style;
  }

  .podcasts-list {
    display: flex;
    flex-direction: column;
    gap: 0;
    width: 100%;
    contain: layout style;

    &__episode {
      width: 100%;
      contain: layout style paint;
    }
  }

  /* ======================================
   * LANGUAGE RESTRICTION NOTICE
   * ====================================== */
  .podcasts-restriction {
    text-align: center;
    padding: var(--space-2xl) var(--space-lg);
    background: linear-gradient(135deg, var(--color-warning-50) 0%, var(--color-warning-100) 100%);
    border-radius: var(--radius-xl);
    border: var(--border-width-thick) solid var(--color-warning-200);
    color: var(--color-warning-800);
    contain: layout style paint;

    &__icon {
      font-size: var(--text-3xl);
      margin-bottom: var(--space-md);
      opacity: var(--opacity-medium);
      contain: layout style;
    }

    &__title {
      font-size: var(--text-lg);
      color: var(--color-warning-900);
      margin: 0 0 var(--space-md) 0;
      font-weight: var(--font-semibold);
      contain: layout style;
    }

    &__description {
      color: var(--color-warning-700);
      font-size: var(--text-sm);
      line-height: var(--leading-relaxed);
      max-width: var(--container-sm);
      margin: 0 auto var(--space-lg);
      contain: layout style;
    }

    &__actions {
      display: flex;
      justify-content: center;
      gap: var(--space-md);
      flex-wrap: wrap;
      contain: layout style;
    }

    &__button {
      display: inline-flex;
      align-items: center;
      gap: var(--space-sm);
      padding: var(--space-sm) var(--space-md);
      background: var(--color-white);
      color: var(--color-neutral-700);
      text-decoration: none;
      border-radius: var(--radius-lg);
      border: var(--border-width-thin) solid var(--color-neutral-300);
      font-weight: var(--font-semibold);
      font-size: var(--text-sm);
      min-height: var(--touch-target-enhanced);
      transition: all var(--transition-normal);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      contain: layout style paint;

      &:hover {
        transform: translateY(var(--animation-y-offset-small));
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        background: var(--color-neutral-50);
        border-color: var(--color-neutral-400);
      }

      &:focus {
        outline: var(--focus-ring);
        outline-offset: var(--focus-ring-offset);
      }

      &--german:hover {
        background: linear-gradient(135deg, #ffed4e 0%, #ffd700 100%);
        border-color: #ffd700;
        color: var(--color-neutral-800);
      }

      &--english:hover {
        background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
        border-color: #3b82f6;
        color: var(--color-blue-800);
      }
    }
  }

  /* ======================================
   * EMPTY STATE
   * ====================================== */
  .podcasts-empty {
    text-align: center;
    padding: var(--space-2xl) var(--space-lg);
    background: var(--bg-secondary);
    border-radius: var(--radius-xl);
    border: var(--border-width-thick) dashed var(--border-secondary);
    color: var(--text-secondary);
    contain: layout style paint;

    &__icon {
      font-size: var(--text-3xl);
      margin-bottom: var(--space-md);
      opacity: var(--opacity-low);
      contain: layout style;
    }

    &__title {
      font-size: var(--text-lg);
      color: var(--text-primary);
      margin: 0 0 var(--space-md) 0;
      font-weight: var(--font-semibold);
      contain: layout style;
    }

    &__text {
      color: var(--text-secondary);
      font-size: var(--text-sm);
      line-height: var(--leading-relaxed);
      max-width: var(--container-sm);
      margin: 0 auto;
      contain: layout style;
    }
  }
</style>

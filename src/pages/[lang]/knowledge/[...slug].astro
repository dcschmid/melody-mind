---
/**
 * @component KnowledgeArticlePage
 * @description Dynamic route for displaying knowledge articles in different languages.
 * The page supports multilingual content, structured data for SEO, and optimized
 * image display for improved performance.
 *
 * Key features:
 * - Display of knowledge content with optimized image presentation
 * - Structured data for better search engine indexing
 * - Support for multiple languages through Content Collections
 * - Table of contents for long articles
 * - Integration with music streaming platforms (Spotify, Deezer, Apple Music)
 * - Playable categories with links to the corresponding game mode
 *
 * @accessibility WCAG 2.2 AAA compliant with optimized color contrasts,
 *                semantic HTML elements, and ARIA attributes
 * @performance Optimized images with avif/webp formats and responsive sizes
 * @seo Complete structured data according to Schema.org standards
 */

// 1. Imports (using consistent @-alias paths for better maintainability)
import { getCollection, type CollectionEntry } from "astro:content";
import { languages, ui } from "../../../i18n/ui";
import Layout from "../../../layouts/Layout.astro";
import type { KnowledgeCollectionKey } from "../../../content/config";
import { Picture } from "astro:assets";
import Headline from "@components/Headline.astro";
import { Icon } from "astro-icon/components";
import ButtonLink from "@components/ButtonLink.astro";
import MusicButtons from "@components/MusicButtons.astro";
import TableOfContents from "@components/TableOfContents.astro";
import BackToTop from "@components/Shared/BackToTop.astro";
import { calculateReadingTime } from "@utils/readingTime";
import { extractKeywords, generateMetaDescription } from "@utils/seo";
import {
  generatePotentialActions,
  generateAudioObjects,
  getEducationalLevel,
  createBreadcrumbList,
} from "@utils/structured-data";

// 2. Rendering Strategy: SSG for better performance and SEO
export const prerender = true;

// 3. getStaticPaths implementation for dynamic routes
export async function getStaticPaths() {
  const allEntries = await Promise.all(
    Object.keys(languages).map(async (lang) => {
      const collectionName = `knowledge-${lang}` as KnowledgeCollectionKey;
      const entries = await getCollection(collectionName);
      return entries.map((entry) => {
        return {
          params: {
            lang,
            slug: entry.slug,
          },
          props: { entry },
        };
      });
    })
  );
  return allEntries.flat();
}

// 4. TypeScript Definitions
type KnowledgeEntry = CollectionEntry<`knowledge-${keyof typeof languages}`> & {
  data: {
    category?: {
      spotifyPlaylist?: string;
      deezerPlaylist?: string;
      appleMusicPlaylist?: string;
    };
    isPlayable?: boolean;
    difficulty?: string;
  };
};

// 5. Main Component Logic
const { entry }: { entry: KnowledgeEntry } = Astro.props;
const { lang = "en" } = Astro.params;

// Type-safe translation function with fallbacks
const translate = (key: string, fallback?: string): string => {
  const currentLangTranslations = ui[lang as keyof typeof ui];
  const englishTranslations = ui.en;

  if (currentLangTranslations && (currentLangTranslations as Record<string, string>)[key]) {
    return (currentLangTranslations as Record<string, string>)[key];
  }

  if ((englishTranslations as Record<string, string>)[key]) {
    return (englishTranslations as Record<string, string>)[key];
  }

  return fallback || key;
};

// 6. Content Processing
// Optimize content rendering by deferring until needed
const { Content, headings } = await entry.render();

// Format date with proper localization
const formattedDate = entry.data.createdAt
  ? new Intl.DateTimeFormat(lang, {
      year: "numeric",
      month: "long",
      day: "numeric",
    }).format(entry.data.createdAt)
  : null;

// Default image if none provided - use optimized path
const defaultImage = "/melody-mind.jpg";
const imageSource = typeof entry.data.image === "string" ? entry.data.image : defaultImage;

// Reading time text with proper localization and fallback
const readingTimeText = entry.body
  ? `${calculateReadingTime(entry.body)} ${translate("knowledge.reading.time", "min reading time")}`
  : null;

// Generate SEO content from the article
const title = entry.data.title;
const description = entry.data.description;

// Enhanced SEO content using utility functions
const pageContent = `${title} ${description} ${entry.body || ""}`;

// Generate optimized meta description and keywords
const optimizedDescription = generateMetaDescription(description) || description;
const keywords =
  extractKeywords(pageContent) ||
  entry.data.keywords?.join(", ") ||
  translate("meta.keywords", "music, trivia, knowledge");

// Additional structured data parameters for SEO
const pageType = "article"; // Articles should be of type 'article' instead of 'website'
const publishDate = entry.data.createdAt || new Date("2024-01-01");
const modifiedDate = entry.data.updatedAt || new Date();

// Determine if this article has a playable game category
const isPlayable = entry.data.isPlayable === true;

// Prepare game category link
const gameCategorySlug = entry.slug.split("/").pop();
const gameCategoryUrl = isPlayable ? `/${String(lang)}/${gameCategorySlug}` : null;

// Get translation for play button
const playButtonText = translate("knowledge.play.category", "Play this music category");

// Calculate word count
const wordCount = entry.body ? entry.body.split(/\s+/).filter(Boolean).length : 0;

// Reading time in ISO 8601 Duration Format (PT{X}M for X minutes)
const readingTimeMinutes = entry.body ? calculateReadingTime(entry.body) : 0;
const timeRequiredISO = `PT${readingTimeMinutes}M`;

// Determine educational level based on content difficulty
const educationalLevel = getEducationalLevel(entry.data.difficulty);

// Structured data for article - enhanced for better SEO
const articleSchemaData = {
  "@context": "https://schema.org",
  "@type": ["Article", "MusicGroup", "CreativeWork"],
  headline: entry.data.title,
  description: optimizedDescription,
  datePublished: entry.data.createdAt?.toISOString(),
  dateModified: entry.data.updatedAt?.toISOString() || entry.data.createdAt?.toISOString(),
  image: {
    "@type": "ImageObject",
    url: imageSource,
    width: 1200,
    height: 675,
    caption: `${entry.data.title} - Cover image`,
    contentUrl: imageSource,
    encodingFormat: "image/jpeg",
    representativeOfPage: true,
  },
  author: {
    "@type": "Organization",
    name: "Melody Mind",
  },
  publisher: {
    "@type": "Organization",
    name: "Melody Mind",
    logo: {
      "@type": "ImageObject",
      url: "/melody-mind.png",
      width: 512,
      height: 512,
      caption: "Melody Mind Logo",
      contentUrl: "/melody-mind.png",
      encodingFormat: "image/png",
    },
  },
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": Astro.url.href,
  },
  keywords: keywords,
  // New properties
  wordCount: wordCount,
  articleBody: entry.body || "",
  timeRequired: timeRequiredISO,
  // MusicGroup-specific properties
  genre: keywords.split(",")[0].trim(), // First keyword as genre
  musicReleaseFormat: "Digital",
  numTracks: 0, // Default value, as track information is not available
  musicBy: {
    "@type": "Organization",
    name: "Melody Mind",
  },
  // CreativeWork-specific properties
  teaches: keywords
    .split(",")
    .map((kw) => kw.trim())
    .join(", "),
  inLanguage: lang,
  isAccessibleForFree: true,
  audience: "Music enthusiasts and learners of all age groups",
  educationalLevel: educationalLevel,
  // Potential actions for playlist links
  potentialAction: generatePotentialActions(entry.data.category || {}, entry.data.title),
  // Structured AudioObject types for playlists
  audio: generateAudioObjects(
    entry.data.category || {},
    entry.data.title,
    entry.data.createdAt?.toISOString() || new Date().toISOString()
  ),
  // GameItem if isPlayable is true
  ...(isPlayable && gameCategoryUrl
    ? {
        gameItem: {
          "@type": "Game",
          name: `${entry.data.title} - Music Game`,
          url: new URL(gameCategoryUrl, Astro.url.origin).href,
          gamePlatform: "Web Browser",
          applicationCategory: "Game",
          genre: "Music Game",
        },
      }
    : {}),
  // BreadcrumbList Schema for the breadcrumb navigation
  breadcrumb: createBreadcrumbList(String(lang), entry.data.title, Astro.url, translate),
};
---

<Layout
  {title}
  description={optimizedDescription}
  image={imageSource}
  type={pageType}
  {publishDate}
  {modifiedDate}
  ogMusic={{
    creator: "Melody Mind",
    album: entry.data.title,
    musician: "Melody Mind",
  }}
>
  <script is:inline type="application/ld+json" set:html={JSON.stringify(articleSchemaData)} />

  <main class="article-page">
    <article class="article" aria-labelledby="article-title">
      <nav
        class="breadcrumb breadcrumb--print-hidden"
        aria-label={translate("knowledge.breadcrumb.label", "Breadcrumb")}
      >
        <ol class="breadcrumb__list">
          <li class="breadcrumb__item">
            <a
              href={`/${lang}`}
              class="breadcrumb__link"
              aria-label={translate("nav.home", "Home")}
            >
              <Icon name="home" class="breadcrumb__icon" aria-hidden="true" />
              <span class="sr-only">{translate("nav.home", "Home")}</span>
            </a>
          </li>
          <li class="breadcrumb__item" aria-hidden="true">
            <Icon name="chevron-right" class="breadcrumb__separator" />
          </li>
          <li class="breadcrumb__item">
            <a href={`/${String(lang)}/knowledge`} class="breadcrumb__link">
              {translate("knowledge.title", "Knowledge")}
            </a>
          </li>
          <li class="breadcrumb__item" aria-hidden="true">
            <Icon name="chevron-right" class="breadcrumb__separator" />
          </li>
          <li class="breadcrumb__current" aria-current="page">
            {entry.data.title}
          </li>
        </ol>
      </nav>

      <header class="article__header">
        <!-- Hero Image Container -->
        <div class="article__image-container">
          <Picture
            src={imageSource}
            width={1200}
            height={675}
            formats={["avif", "webp"]}
            class="article__image"
            loading="eager"
            fetchpriority="high"
            alt={`Cover image for article "${entry.data.title}" - Music knowledge on Melody Mind`}
            decoding="async"
            sizes="(min-width: 1280px) 1200px, (min-width: 768px) 100vw, 100vw"
            quality={90}
            widths={[640, 750, 1080, 1200]}
          />
        </div>

        <!-- Title and Meta Container -->
        <div class="article__meta-container">
          <Headline
            level="h1"
            title={entry.data.title}
            id="article-title"
            className="article__title"
          />

          <!-- Meta Information -->
          <div class="meta-info">
            {
              formattedDate && (
                <time datetime={entry.data.createdAt?.toISOString()} class="meta-info__item">
                  <Icon name="calendar" class="meta-info__icon" aria-hidden="true" />
                  <span class="meta-info__text">{formattedDate}</span>
                </time>
              )
            }

            {
              readingTimeText && (
                <span class="meta-info__item">
                  <Icon name="clock" class="meta-info__icon" aria-hidden="true" />
                  <span class="meta-info__text">{readingTimeText}</span>
                </span>
              )
            }

            {
              wordCount > 0 && (
                <span class="meta-info__item">
                  <Icon name="document-text" class="meta-info__icon" aria-hidden="true" />
                  <span class="meta-info__text">
                    {wordCount} {translate("knowledge.word.count", "words")}
                  </span>
                </span>
              )
            }
          </div>

          <!-- Music & Game Buttons -->
          <div class="action-buttons">
            {
              entry.data.category && (
                <MusicButtons category={entry.data.category} title={entry.data.title} />
              )
            }

            {
              isPlayable && gameCategoryUrl && (
                <ButtonLink
                  href={gameCategoryUrl}
                  className="play-button"
                  icon="game-controller"
                  aria-label={`${playButtonText}: ${entry.data.title}`}
                >
                  <span class="play-button__content">
                    <span class="play-button__text">{playButtonText}</span>
                  </span>
                </ButtonLink>
              )
            }
          </div>
        </div>
      </header>

      <!-- Table of Contents Dropdown -->
      <aside class="toc-wrapper" aria-label={translate("toc.nav.label", "Table of Contents")}>
        <TableOfContents {headings} {lang} />
      </aside>

      <div id="article-content" class="content-wrapper">
        <div
          role="region"
          aria-labelledby="article-title"
          aria-label="Main content"
          class="article-content"
        >
          <div>
            <Content />
          </div>
        </div>
      </div>

      <!-- Back navigation with improved accessibility -->
      <div class="back-navigation back-navigation--print-hidden">
        <ButtonLink
          href={`/${String(lang)}/knowledge`}
          className="back-link"
          icon="arrow-left"
          aria-label={translate("knowledge.back.to.list", "Back to knowledge list")}
        >
          <span class="back-link__text"
            >{translate("knowledge.back.to.list", "Back to knowledge list")}</span
          >
        </ButtonLink>
      </div>
    </article>
  </main>

  <!-- BackToTop component for improved navigation on long articles -->
  <BackToTop lang={String(lang)} />
</Layout>

<style is:global>
  /* Skip link for better keyboard navigation (WCAG AAA) */
  .skip-to-content {
    position: absolute;
    top: -40px;
    left: 6px;
    background: var(--interactive-primary);
    color: var(--btn-primary-text);
    padding: var(--space-md) var(--space-lg);
    text-decoration: none;
    font-weight: var(--font-bold);
    font-size: var(--text-lg);
    border-radius: var(--radius-md);
    z-index: var(--z-notification);
    transition: top var(--transition-fast);
  }

  .skip-to-content:focus {
    top: 6px;
    outline: 3px solid var(--focus-enhanced-outline-dark);
    outline-offset: 2px;
  }

  /* Main layout styles */
  .article-page {
    margin: 0 auto;
    max-width: var(--container-xl);
    padding: var(--space-xl) var(--space-lg);
  }

  /* Article container */
  .article {
    width: var(--width-full);
  }

  /* Breadcrumb navigation */
  .breadcrumb {
    margin-bottom: var(--space-xl);
  }

  .breadcrumb--print-hidden {
    display: block;
  }

  .breadcrumb__list {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-sm);
    list-style: none;
    padding: 0;
    margin: 0;
    font-size: var(--text-base);
  }

  .breadcrumb__item {
    display: flex;
    align-items: center;
  }

  .breadcrumb__link {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-xs) var(--space-sm);
    color: var(--text-secondary);
    text-decoration: none;
    border-radius: var(--radius-md);
    transition: var(--transition-normal);
    min-height: var(--min-touch-size);
    min-width: var(--min-touch-size);
  }

  .breadcrumb__link:hover {
    color: var(--interactive-primary);
    background-color: var(--bg-tertiary);
  }

  .breadcrumb__link:focus-visible {
    outline: var(--focus-enhanced-outline-dark);
    outline-offset: var(--focus-ring-offset);
    border-radius: var(--radius-sm);
  }

  .breadcrumb__icon {
    width: var(--icon-size-sm);
    height: var(--icon-size-sm);
  }

  .breadcrumb__separator {
    color: var(--text-tertiary);
    margin: 0 var(--space-xs);
    width: var(--icon-size-sm);
    height: var(--icon-size-sm);
  }

  .breadcrumb__current {
    max-width: var(--stat-width-md);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    background-color: var(--bg-tertiary);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-md);
    color: var(--text-primary);
  }

  /* Article header */
  .article__header {
    position: relative;
    margin-bottom: var(--space-2xl);
  }

  /* Cover image */
  .article__image-container {
    position: relative;
    margin-bottom: var(--space-xl);
    aspect-ratio: 16 / 9;
    overflow: hidden;
    border-radius: var(--radius-lg);
    box-shadow: var(--card-shadow);
    border: var(--border-width-thin) solid var(--border-primary);
    contain: layout style; /* Performance optimization */
  }

  .article__image {
    width: var(--width-full);
    height: var(--width-full);
    object-fit: cover;
    transition: var(--transition-normal);
  }

  /* Enhanced hover effect for better user experience */
  .article__image-container:hover .article__image {
    transform: scale(var(--animation-scale-hover-subtle));
  }

  /* Article meta section */
  .article__meta-container {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
  }

  /* Meta information */
  .meta-info {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-lg);
  }

  .meta-info__item {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    background-color: var(--card-bg);
    padding: var(--space-sm) var(--space-lg);
    border-radius: var(--radius-lg);
    color: var(--text-secondary);
    min-height: var(--min-touch-size);
    border: var(--border-width-thin) solid var(--border-primary);
    contain: layout style; /* Performance optimization */
  }

  .meta-info__icon {
    width: var(--icon-size-md);
    height: var(--icon-size-md);
    color: var(--interactive-primary);
  }

  .meta-info__text {
    font-size: var(--text-base);
    line-height: var(--leading-enhanced);
  }

  /* Action buttons */
  .action-buttons {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-lg);
  }

  /* Table of contents */
  .toc-wrapper {
    position: relative;
    z-index: var(--z-dropdown);
    margin-bottom: var(--space-xl);
  }

  /* Article content */
  .content-wrapper {
    position: relative;
    margin-top: var(--space-lg);
    contain: layout style; /* Performance optimization */
  }

  .article-content {
    color: var(--text-primary);
    line-height: var(--leading-enhanced);
    font-size: var(--text-xl); /* Increased from --text-lg for better readability */

    /* Enhanced text rendering for better readability */
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    /* WCAG AAA text spacing requirements */
    letter-spacing: var(--letter-spacing-enhanced);
    word-spacing: var(--word-spacing-enhanced);

    /* Improved paragraph spacing for better readability */
    margin: 0 auto; /* Center content for better focus */
  }

  .article-content h2,
  .article-content h3,
  .article-content h4,
  .article-content h5,
  .article-content h6 {
    color: var(--text-primary);
    font-weight: var(--font-bold);
    scroll-margin-top: 5rem;
    line-height: var(--leading-enhanced);
    margin-top: var(--space-xl);
    margin-bottom: var(--space-md);
  }

  .article-content h2 {
    font-size: var(--text-3xl); /* Increased from --text-2xl */
    margin-top: var(--space-2xl); /* Increased spacing for better section separation */
    margin-bottom: var(--space-lg);
  }

  .article-content h3 {
    font-size: var(--text-2xl); /* Increased from --text-xl */
    margin-top: var(--space-xl);
    margin-bottom: var(--space-md);
  }

  .article-content h4 {
    font-size: var(--text-xl); /* Increased from --text-lg */
    margin-top: var(--space-lg);
    margin-bottom: var(--space-md);
  }

  .article-content p {
    color: var(--text-primary);
    line-height: var(--leading-enhanced);
    margin-bottom: var(
      --space-lg
    ); /* Increased spacing between paragraphs for better readability */
    word-spacing: var(--word-spacing-enhanced);
    letter-spacing: var(--letter-spacing-enhanced);
    font-size: var(--text-xl); /* Increased paragraph text size for better readability */

    /* WCAG AAA: Enhanced text readability */
    hyphens: auto;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }

  .article-content a {
    color: var(--interactive-primary);
    text-decoration: underline;
    text-underline-offset: var(--text-underline-offset);
    text-decoration-thickness: var(--text-decoration-thickness);
    font-weight: var(--font-medium); /* Slightly bolder for better visibility */

    /* Enhanced focus and interaction area for better accessibility */
    padding: var(--space-xs) var(--space-sm);
    margin: -var(--space-xs) -var(--space-sm);
    border-radius: var(--radius-sm);
    transition: all var(--transition-normal);
  }

  .article-content a:hover {
    color: var(--interactive-primary-hover);
    background-color: var(--bg-tertiary);
    text-decoration-thickness: 3px; /* Thicker underline on hover */
  }

  .article-content a:focus-visible {
    outline: var(--focus-enhanced-outline-dark);
    outline-offset: var(--focus-ring-offset);
    background-color: var(--bg-tertiary);
    box-shadow: 0 0 0 3px var(--interactive-primary);
  }

  .article-content blockquote {
    border-left: var(--border-width-enhanced) solid var(--interactive-primary);
    padding-left: var(--space-lg); /* Increased padding for better visual separation */
    color: var(--text-primary);
    margin: var(--space-xl) 0; /* Increased margin for better spacing */
    background-color: var(--bg-tertiary);
    padding: var(--space-lg); /* Increased padding for better readability */
    border-radius: var(--radius-md);
    font-size: var(--text-xl); /* Increased blockquote text size */
    line-height: var(--leading-enhanced);
    font-style: italic;
  }

  .article-content ul,
  .article-content ol {
    list-style-position: outside;
    margin: var(--space-lg) 0; /* Increased margin for better spacing */
    padding-left: var(--space-xl); /* Increased padding for better indentation */
    font-size: var(--text-xl); /* Increased list text size */
  }

  .article-content li {
    color: var(--text-primary);
    margin-bottom: var(--space-md); /* Increased spacing between list items */
    line-height: var(--leading-enhanced);
    letter-spacing: var(--letter-spacing-enhanced);
    word-spacing: var(--word-spacing-enhanced);
  }

  .article-content li::marker {
    color: var(--interactive-primary);
  }

  /* Code blocks and preformatted text styling for better readability */
  .article-content pre,
  .article-content code {
    font-family: "Monaco", "Menlo", "Ubuntu Mono", monospace;
    font-size: var(--text-lg); /* Larger code text for better readability */
    line-height: var(--leading-enhanced);
    background-color: var(--bg-tertiary);
    border: var(--border-width-thin) solid var(--border-primary);
    border-radius: var(--radius-md);
  }

  .article-content pre {
    padding: var(--space-lg);
    margin: var(--space-xl) 0;
    overflow-x: auto;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  .article-content code {
    padding: var(--space-xs) var(--space-sm);
  }

  .article-content pre code {
    padding: 0;
    background: none;
    border: none;
  }

  /* Table styling for better readability */
  .article-content table {
    width: 100%;
    border-collapse: collapse;
    margin: var(--space-xl) 0;
    font-size: var(--text-lg);
    border: var(--border-width-thin) solid var(--border-primary);
    border-radius: var(--radius-md);
    overflow: hidden;
  }

  .article-content th,
  .article-content td {
    padding: var(--space-md) var(--space-lg);
    text-align: left;
    border-bottom: var(--border-width-thin) solid var(--border-primary);
    line-height: var(--leading-enhanced);
  }

  .article-content th {
    background-color: var(--bg-tertiary);
    font-weight: var(--font-bold);
    color: var(--text-primary);
    font-size: var(--text-lg);
  }

  .article-content td {
    color: var(--text-primary);
  }

  .article-content tr:nth-child(even) td {
    background-color: var(--bg-secondary);
  }

  .article-content tr:hover td {
    background-color: var(--bg-tertiary);
  }

  /* Image styling for better accessibility */
  .article-content img {
    max-width: 100%;
    height: auto;
    border-radius: var(--radius-md);
    border: var(--border-width-thin) solid var(--border-primary);
    margin: var(--space-lg) 0;
    display: block;
  }

  .article-content figure {
    margin: var(--space-xl) 0;
    text-align: center;
  }

  .article-content figcaption {
    margin-top: var(--space-sm);
    font-size: var(--text-base);
    color: var(--text-secondary);
    font-style: italic;
    line-height: var(--leading-enhanced);
  }

  /* Back navigation */
  .back-navigation {
    margin-top: var(--space-2xl);
    display: flex;
    justify-content: space-between;
    border-top: var(--border-width-thin) solid var(--border-primary);
    padding-top: var(--space-xl);
  }

  .back-navigation--print-hidden {
    display: block;
  }

  .back-link {
    display: flex;
    align-items: center;
    min-height: var(--min-touch-size);
    min-width: var(--min-touch-size);
    padding: var(--space-sm) var(--space-lg);
    border-radius: var(--radius-md);
    color: var(--text-secondary);
    text-decoration: none;
    transition: var(--transition-normal);
    background-color: var(--card-bg);
    border: var(--border-width-thin) solid var(--border-primary);
  }

  .back-link:hover {
    background-color: var(--bg-tertiary);
    color: var(--text-primary);
  }

  .back-link:focus-visible {
    outline: var(--focus-enhanced-outline-dark);
    outline-offset: var(--focus-ring-offset);
  }

  .back-link__icon {
    margin-right: var(--space-sm);
    width: var(--icon-size-md);
    height: var(--icon-size-md);
    transition: var(--transition-normal);
  }

  .back-link:hover .back-link__icon {
    transform: translateX(var(--animation-x-offset-small));
  }

  .back-link__text {
    font-size: var(--text-base);
    font-weight: var(--font-medium);
    line-height: var(--leading-enhanced);
  }

  /* Play button styles */
  .play-button {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    min-width: var(--stat-width-sm);
    min-height: var(--min-touch-size);
    padding: var(--space-sm) var(--space-lg);
    border-radius: var(--radius-lg);
    font-size: var(--text-base);
    font-weight: var(--font-medium);
    background: var(--btn-primary-bg);
    color: var(--btn-primary-text);
    border: none;
    transition: var(--transition-normal);
    text-decoration: none;
    line-height: var(--leading-enhanced);
  }

  .play-button:hover {
    background: var(--btn-primary-hover);
    color: var(--btn-primary-text);
  }

  .play-button:focus-visible {
    outline: var(--focus-enhanced-outline-dark);
    outline-offset: var(--focus-ring-offset);
  }

  .play-button__content {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
  }

  .play-button__icon {
    width: var(--icon-size-md);
    height: var(--icon-size-md);
  }

  .play-button__text {
    font-size: var(--text-base);
    line-height: var(--leading-enhanced);
  }

  /* WCAG AAA: Enhanced Text Spacing Support (User can increase to 200% spacing) */
  .enhanced-text-spacing .article-content,
  .enhanced-text-spacing .article-content * {
    letter-spacing: var(--text-spacing-letter-2x) !important;
    word-spacing: var(--text-spacing-word-enhanced) !important;
    line-height: var(--text-spacing-line-1-5x) !important;
  }

  .enhanced-text-spacing .article-content p,
  .enhanced-text-spacing .article-content li,
  .enhanced-text-spacing .article-content td,
  .enhanced-text-spacing .article-content th {
    margin-bottom: var(--text-spacing-paragraph-2x) !important;
  }

  /* Maintain functionality with enhanced text spacing */
  .enhanced-text-spacing .back-link,
  .enhanced-text-spacing .meta-info__item {
    padding: calc(var(--space-sm) * 1.5) calc(var(--space-lg) * 1.5) !important;
  }

  /* Focus management improvements for enhanced readability */
  .article-content *:focus {
    scroll-margin-top: var(--space-3xl);
    scroll-behavior: smooth;
  }

  /* Print optimizations for article content */
  @media print {
    .article-content {
      font-size: 12pt !important;
      line-height: 1.6 !important;
      color: black !important;
    }

    .article-content h2,
    .article-content h3,
    .article-content h4,
    .article-content h5,
    .article-content h6 {
      font-size: 14pt !important;
      color: black !important;
      page-break-after: avoid;
    }

    .article-content h2 {
      font-size: 16pt !important;
      page-break-before: always;
    }

    .article-content p,
    .article-content li {
      orphans: 3;
      widows: 3;
    }

    .article-content blockquote,
    .article-content pre,
    .article-content table {
      page-break-inside: avoid;
    }

    .article-content img {
      max-width: 100% !important;
      page-break-inside: avoid;
    }
  }

  /* Media queries using CSS custom properties */
  @media (min-width: var(--breakpoint-sm)) {
    .article-page {
      padding: var(--space-xl) var(--space-md);
    }

    .breadcrumb__current {
      max-width: unset;
    }

    /* Enhanced typography on larger screens */
    .article-content {
      font-size: var(--text-2xl); /* Even larger text on tablets and up */
    }

    .article-content p {
      font-size: var(--text-2xl);
      margin-bottom: var(--space-xl); /* More spacing on larger screens */
    }

    .article-content h2 {
      font-size: var(--text-4xl); /* Larger headings on tablets */
    }

    .article-content h3 {
      font-size: var(--text-3xl);
    }

    .article-content h4 {
      font-size: var(--text-2xl);
    }

    .article-content ul,
    .article-content ol {
      font-size: var(--text-2xl);
      margin: var(--space-xl) 0;
    }

    .article-content blockquote {
      font-size: var(--text-2xl);
      padding: var(--space-xl);
      margin: var(--space-2xl) 0;
    }
  }

  @media (min-width: var(--breakpoint-md)) {
    .article__header {
      margin-bottom: var(--space-3xl);
    }

    .article-page {
      padding: var(--space-xl) var(--space-lg);
    }

    /* Even larger typography on desktop for optimal readability */
    .article-content {
      font-size: var(--text-2xl);
      max-width: 75ch; /* Slightly wider on desktop for comfortable reading */
    }

    .article-content p {
      font-size: var(--text-2xl);
      margin-bottom: var(--space-2xl); /* More generous spacing on desktop */
    }
  }

  /* High contrast mode support for enhanced accessibility (WCAG AAA) */
  @media (prefers-contrast: high) {
    .article-content {
      color: var(--text-primary);
      background-color: var(--bg-primary);
      border: var(--border-width-thin) solid var(--border-primary);
    }

    .article-content h2,
    .article-content h3,
    .article-content h4,
    .article-content h5,
    .article-content h6 {
      color: var(--text-primary);
      font-weight: var(--font-bold);
    }

    .article-content a {
      color: var(--interactive-primary);
      text-decoration: underline;
      text-decoration-thickness: 3px; /* Thicker underlines in high contrast */
    }

    .article-content blockquote {
      border-left-width: calc(var(--border-width-enhanced) * 2);
      background-color: var(--bg-secondary);
      border: var(--border-width-thin) solid var(--border-primary);
    }
  }

  /* WCAG AAA: Support for enhanced text spacing user preferences */
  @media (any-hover: none) and (any-pointer: coarse) {
    /* Mobile/touch devices: Increase touch targets and spacing */
    .article-content a {
      min-height: var(--min-touch-size);
      display: inline-block;
      padding: var(--space-xs) var(--space-sm);
      margin: var(--space-xs) 0;
    }

    .article-content {
      font-size: var(--text-xl); /* Ensure mobile readability */
    }

    .article-content p {
      font-size: var(--text-xl);
      line-height: 2; /* Extra line height for mobile reading */
    }
  }

  /* Reduced motion support for accessibility */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: var(--transition-instant) !important;
      animation-iteration-count: 1 !important;
      transition-duration: var(--transition-instant) !important;
      scroll-behavior: auto !important;
    }

    .article__image,
    .back-link__icon {
      transform: none !important;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .breadcrumb__link,
    .back-link,
    .play-button {
      border: var(--border-width-enhanced) solid;
    }

    .article-content a {
      text-decoration-thickness: var(--border-width-enhanced);
    }

    .meta-info__item {
      border-width: var(--border-width-enhanced);
    }
  }

  /* Forced colors mode support (Windows High Contrast) */
  @media (forced-colors: active) {
    .breadcrumb__link,
    .back-link,
    .play-button {
      background-color: ButtonFace;
      border-color: ButtonBorder;
      color: ButtonText;
    }

    .meta-info__item {
      background-color: Field;
      border-color: FieldText;
      color: FieldText;
    }

    .article-content a {
      color: LinkText;
    }

    .article-content a:visited {
      color: VisitedText;
    }
  }

  /* Screen reader only utility */
  .sr-only {
    position: absolute;
    width: var(--sr-only-width);
    height: var(--sr-only-height);
    padding: 0;
    margin: var(--sr-only-margin);
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
    clip-path: var(--sr-only-clip-path);
  }

  /* Improved heading anchor links for better navigation */
  .article-content h2[id]::before,
  .article-content h3[id]::before,
  .article-content h4[id]::before {
    content: "";
    display: block;
    height: var(--space-3xl);
    margin-top: calc(var(--space-3xl) * -1);
    visibility: hidden;
    pointer-events: none;
  }
</style>

---
/**
 * @component LegalNoticePage
 * @description Dynamic legal notice page with responsive SCSS styling and modern TypeScript
 */

import { languages } from "../../i18n/ui";
import { getLangFromUrl } from "../../utils/i18n";
import Layout from "../../layouts/Layout.astro";

// Enable prerendering for static generation
export const prerender = true;

// Define TypeScript interfaces
interface StaticPath {
  params: {
    lang: string;
  };
}

interface LegalData {
  title: string;
  lastUpdated: string;
  sections: Array<{
    title: string;
    content: string;
  }>;
}

// Get static paths for all supported languages
export const getStaticPaths = async (): Promise<StaticPath[]> => {
  const paths: StaticPath[] = [];

  // Generate paths for all supported languages using modern ES6
  Object.keys(languages).forEach((lang) => {
    paths.push({
      params: { lang },
    });
  });

  return paths;
};

// Get current language
const lang = getLangFromUrl(Astro.url);

// Languages that have native legal pages
const nativeLanguages = ["en"];

// If this is not English, redirect to English legal notice
if (!nativeLanguages.includes(lang)) {
  return Astro.redirect("/en/legal-notice", 302);
}

// If this is English but accessed through dynamic route, redirect to static route
if (lang === "en") {
  return Astro.redirect("/en/legal-notice", 301);
}

// Legal notice data (this would normally come from a CMS or i18n files)
const legalData: LegalData = {
  title: "Legal Notice",
  lastUpdated: "2024-01-15",
  sections: [
    {
      title: "Terms of Service",
      content: "By using our service, you agree to these terms and conditions.",
    },
    {
      title: "Intellectual Property",
      content:
        "All content on this website is protected by copyright and other intellectual property laws.",
    },
    {
      title: "Limitation of Liability",
      content: "We are not liable for any damages arising from the use of our service.",
    },
  ],
};
---

<!-- This component handles redirects, so no HTML content is needed -->
<style lang="scss">
  /**
   * Legal Notice Page Styles
   * WCAG AAA 2.2 compliant with responsive design
   * Uses CSS variables from global.css for consistent theming
   */

  // SCSS Variables using global.css tokens
  $container-max-width: var(--container-lg);
  $content-max-width: var(--container-md);
  $section-spacing: var(--space-2xl);
  $text-spacing: var(--space-lg);
  $border-radius: var(--radius-xl);
  $shadow: var(--shadow-lg);
  $transition: var(--transition-normal);

  // Responsive breakpoints
  $breakpoint-sm: var(--breakpoint-sm);
  $breakpoint-md: var(--breakpoint-md);
  $breakpoint-lg: var(--breakpoint-lg);

  // Mixins for responsive design
  @mixin respond-to($breakpoint) {
    @if $breakpoint == sm {
      @media (min-width: $breakpoint-sm) {
        @content;
      }
    } @else if $breakpoint == md {
      @media (min-width: $breakpoint-md) {
        @content;
      }
    } @else if $breakpoint == lg {
      @media (min-width: $breakpoint-lg) {
        @content;
      }
    }
  }

  // Mixin for focus states
  @mixin focus-visible {
    &:focus-visible {
      outline: var(--focus-outline);
      outline-offset: var(--focus-ring-offset);
      box-shadow: var(--focus-ring);
    }
  }

  // Mixin for card styling
  @mixin card-style {
    background: var(--card-bg);
    border: var(--border-width-thin) solid var(--card-border);
    border-radius: $border-radius;
    box-shadow: $shadow;
    padding: var(--space-xl);
    transition: all $transition;

    &:hover {
      box-shadow: var(--card-shadow-hover);
      transform: translateY(calc(-1 * var(--space-xs)));
    }
  }

  // Mixin for section styling
  @mixin section-style {
    margin-bottom: $section-spacing;
    padding: var(--space-lg);
    background: var(--bg-secondary);
    border-radius: $border-radius;
    border: var(--border-width-thin) solid var(--border-primary);

    @include respond-to(md) {
      padding: var(--space-xl);
    }
  }

  // Main container
  .legal-notice-container {
    width: var(--width-full);
    max-width: $container-max-width;
    margin: 0 auto;
    padding: var(--space-lg) var(--space-md);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    gap: $section-spacing;

    @include respond-to(md) {
      padding: var(--space-xl) var(--space-lg);
    }

    @include respond-to(lg) {
      padding: var(--space-2xl) var(--space-xl);
    }
  }

  // Header section
  .legal-header {
    text-align: center;
    background: linear-gradient(
      135deg,
      var(--color-primary-600) 0%,
      var(--color-secondary-600) 100%
    );
    color: var(--text-primary);
    position: relative;
    overflow: hidden;
    @include section-style;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        45deg,
        rgba(255, 255, 255, 0.1) 0%,
        rgba(255, 255, 255, 0.05) 100%
      );
      pointer-events: none;
    }

    .header-content {
      position: relative;
      z-index: 1;
    }

    .header-title {
      font-size: var(--text-3xl);
      font-weight: var(--font-bold);
      margin-bottom: var(--space-md);
      line-height: var(--leading-tight);

      @include respond-to(md) {
        font-size: var(--text-4xl);
      }

      @include respond-to(lg) {
        font-size: var(--text-5xl);
      }
    }

    .header-subtitle {
      font-size: var(--text-lg);
      color: var(--text-secondary);
      line-height: var(--leading-relaxed);
      max-width: $content-max-width;
      margin: 0 auto;

      @include respond-to(md) {
        font-size: var(--text-xl);
      }
    }
  }

  // Content sections
  .legal-content {
    display: flex;
    flex-direction: column;
    gap: $text-spacing;
    max-width: $content-max-width;
    margin: 0 auto;
    width: var(--width-full);
  }

  .legal-section {
    @include section-style;

    .section-title {
      font-size: var(--text-xl);
      font-weight: var(--font-semibold);
      color: var(--text-primary);
      margin-bottom: var(--space-md);
      line-height: var(--leading-tight);

      @include respond-to(md) {
        font-size: var(--text-2xl);
      }
    }

    .section-content {
      color: var(--text-secondary);
      line-height: var(--leading-relaxed);
      font-size: var(--text-base);

      @include respond-to(md) {
        font-size: var(--text-lg);
      }

      p {
        margin-bottom: var(--space-md);

        &:last-child {
          margin-bottom: 0;
        }
      }

      ul,
      ol {
        margin: var(--space-md) 0;
        padding-left: var(--space-xl);

        li {
          margin-bottom: var(--space-sm);
          line-height: var(--leading-relaxed);
        }
      }

      a {
        color: var(--interactive-primary);
        text-decoration: underline;
        text-underline-offset: var(--space-xs);
        transition: color $transition;

        &:hover {
          color: var(--interactive-primary-hover);
        }

        @include focus-visible;
      }

      strong {
        font-weight: var(--font-semibold);
        color: var(--text-primary);
      }

      em {
        font-style: italic;
        color: var(--text-tertiary);
      }
    }
  }

  // Contact information
  .contact-info {
    @include card-style;
    background: var(--bg-tertiary);
    border-color: var(--interactive-primary);

    .contact-title {
      font-size: var(--text-lg);
      font-weight: var(--font-semibold);
      color: var(--text-primary);
      margin-bottom: var(--space-md);
      display: flex;
      align-items: center;
      gap: var(--space-sm);

      &::before {
        content: "ðŸ“§";
        font-size: var(--text-xl);
      }
    }

    .contact-details {
      display: flex;
      flex-direction: column;
      gap: var(--space-sm);

      @include respond-to(md) {
        flex-direction: row;
        align-items: center;
        gap: var(--space-md);
      }

      .contact-item {
        display: flex;
        align-items: center;
        gap: var(--space-sm);
        color: var(--text-secondary);
        font-size: var(--text-base);

        @include respond-to(md) {
          font-size: var(--text-lg);
        }

        .contact-label {
          font-weight: var(--font-medium);
          color: var(--text-primary);
          min-width: fit-content;
        }

        .contact-value {
          color: var(--interactive-primary);
          text-decoration: none;
          transition: color $transition;

          &:hover {
            color: var(--interactive-primary-hover);
          }

          @include focus-visible;
        }
      }
    }
  }

  // Back to home link
  .back-link {
    display: inline-flex;
    align-items: center;
    gap: var(--space-sm);
    color: var(--interactive-primary);
    text-decoration: none;
    font-weight: var(--font-medium);
    padding: var(--space-md) var(--space-lg);
    border-radius: var(--radius-lg);
    background: var(--bg-secondary);
    border: var(--border-width-thin) solid var(--border-primary);
    transition: all $transition;
    margin-top: var(--space-xl);

    &:hover {
      background: var(--interactive-primary);
      color: var(--text-primary);
      transform: translateY(calc(-1 * var(--space-xs)));
      box-shadow: var(--shadow-md);
    }

    @include focus-visible;

    .back-icon {
      width: var(--icon-size-sm);
      height: var(--icon-size-sm);
      transition: transform $transition;
    }

    &:hover .back-icon {
      transform: translateX(calc(-1 * var(--space-xs)));
    }
  }

  // Responsive adjustments
  @include respond-to(sm) {
    .legal-notice-container {
      padding: var(--space-xl) var(--space-lg);
    }
  }

  // Print styles
  @media print {
    .legal-notice-container {
      max-width: none;
      padding: 0;
    }

    .legal-header {
      background: none !important;
      color: var(--text-primary) !important;
    }

    .back-link {
      display: none;
    }
  }

  // High contrast mode support
  @media (prefers-contrast: high) {
    .legal-header {
      background: var(--bg-primary) !important;
      border: var(--border-width-thick) solid var(--border-primary);
    }

    .legal-section,
    .contact-info {
      border-width: var(--border-width-thick);
    }
  }

  // Reduced motion support
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }

    .back-link:hover {
      transform: none;
    }
  }
</style>

<script>
  /**
   * Legal Notice Page Script
   * Modern ES6+ implementation with enhanced accessibility
   */

  // Enhanced accessibility features
  const enhanceAccessibility = (): void => {
    // Add skip link functionality
    const skipLink = document.createElement("a");
    skipLink.href = "#main-content";
    skipLink.textContent = "Skip to main content";
    skipLink.className = "sr-only";
    skipLink.style.cssText = `
      position: absolute;
      top: var(--space-md);
      left: var(--space-md);
      z-index: var(--z-modal);
      padding: var(--space-sm) var(--space-md);
      background: var(--interactive-primary);
      color: var(--text-primary);
      text-decoration: none;
      border-radius: var(--radius-md);
      font-weight: var(--font-medium);
      transform: translateY(-100%);
      transition: transform var(--transition-normal);
    `;

    skipLink.addEventListener("focus", () => {
      skipLink.style.transform = "translateY(0)";
    });

    skipLink.addEventListener("blur", () => {
      skipLink.style.transform = "translateY(-100%)";
    });

    document.body.insertBefore(skipLink, document.body.firstChild);

    // Add main content landmark
    const mainContent = document.querySelector(".legal-content");
    if (mainContent && !mainContent.id) {
      mainContent.id = "main-content";
      mainContent.setAttribute("role", "main");
    }
  };

  // Enhanced keyboard navigation
  const enhanceKeyboardNavigation = (): (() => void) => {
    const handleKeyDown = (event: KeyboardEvent): void => {
      if (event.key === "Tab") {
        // Add focus ring styles dynamically
        document.body.classList.add("keyboard-navigation");
      }
    };

    const handleMouseDown = (): void => {
      document.body.classList.remove("keyboard-navigation");
    };

    document.addEventListener("keydown", handleKeyDown);
    document.addEventListener("mousedown", handleMouseDown);

    // Cleanup function
    return (): void => {
      document.removeEventListener("keydown", handleKeyDown);
      document.removeEventListener("mousedown", handleMouseDown);
    };
  };

  // Performance optimization
  const optimizePerformance = (): void => {
    // Use Intersection Observer for lazy loading if needed
    if ("IntersectionObserver" in window) {
      const observerOptions = {
        rootMargin: "50px",
        threshold: 0.1,
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
          }
        });
      }, observerOptions);

      // Observe sections for animation
      document.querySelectorAll(".legal-section").forEach((section) => {
        observer.observe(section);
      });
    }
  };

  // Initialize all enhancements
  const initializeEnhancements = (): void => {
    enhanceAccessibility();
    const cleanupKeyboardNav = enhanceKeyboardNavigation();
    optimizePerformance();

    // Cleanup on page unload
    window.addEventListener("beforeunload", () => {
      cleanupKeyboardNav();
    });
  };

  // Run when DOM is ready
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initializeEnhancements);
  } else {
    initializeEnhancements();
  }
</script>

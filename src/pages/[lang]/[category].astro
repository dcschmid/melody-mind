---
/**
 * Category Page Component
 * Displays a specific music category with its details and game options.
 */

import { Picture } from "astro:assets";
import CategoryImage from "@components/CategoryImage.astro";
import Layout from "@layouts/Layout.astro";
import ButtonLink from "@components/ButtonLink.astro";
import MusicButtons from "@components/MusicButtons.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import Headline from "@components/Headline.astro";
import Paragraph from "@components/Paragraph.astro";
import { Icon } from "astro-icon/components";
import { buildPageSeo } from "@utils/seo/buildPageSeo";
import { ensureSupportedLanguage } from "@constants/languages";
// import { getLanguageKeyedParams } from "@utils/i18n/getLanguagePaths"; // Uncomment when enabling SSG
// import { loadCategoriesForLanguage } from "../../utils/category/categoryLoader"; // Uncomment if enabling SSG
// categoryLoader is used dynamically below when resolving missing props at runtime

// Disable prerender to avoid building a large number of static pages at build time
// which can cause out-of-memory errors on constrained CI/build hosts.
export const prerender = false;

/**
 * Optional static generation template:
 * To enable partial SSG for selected categories, uncomment and adjust below.
 * Keep memory constraints in mind; limit the number of categories per language.
 */
/*
export async function getStaticPaths() {
  const MAX_PER_LANG = 50; // tune this based on build performance
  const categories: Array<{ slug: string; headline: string }> = [];
  for (const lang of (await import("@constants/languages")).SUPPORTED_LANGUAGES) {
    try {
  const { loadCategoriesForLanguage } = await import("../../utils/category/categoryLoader");
      const { categories: loaded } = await loadCategoriesForLanguage({
        language: lang,
      });
      const playable = loaded.filter((c: any) => c.isPlayable).slice(0, MAX_PER_LANG);
      // Accumulate with language annotated (not strictly necessary here)
      categories.push(...playable);
    } catch {
      // ignore failing language load
    }
  }
  // Build language keyed params (category param filled)
  // We call getLanguageKeyedParams with the unique set to avoid duplicates
  const unique = Array.from(new Map(categories.map(c => [c.slug, c])).values());
  return getLanguageKeyedParams(unique, (cat) => ({ params: { category: cat.slug }, props: { category: cat } }));
}
*/

// getStaticPaths intentionally removed. This page will be rendered at runtime
// which prevents building thousands of static category pages during CI builds.

const { category: propCategory, usedFallback: propUsedFallback } = Astro.props as {
  category?: any;
  lang?: string;
  usedFallback?: boolean;
};

// Resolve language as a string safely. Prefer prop `lang`, then URL, then fallback 'en'.
const rawLang = Astro.props?.lang ?? getLangFromUrl(Astro.url);
const lang = ensureSupportedLanguage(rawLang);
const t = useTranslations(lang);

let category = propCategory;
const usedFallback = Boolean(propUsedFallback);

// If category prop is missing, try to resolve it at runtime using the slug
if ((!category || !category.slug) && Astro.params?.category) {
  try {
    const { loadCategoryBySlug } = await import("../../utils/category/categoryLoader");
    const loaded = await loadCategoryBySlug(Astro.params.category, {
      language: lang,
    });
    if (loaded) {
      category = loaded;
    }
  } catch {
    // leave category undefined and render graceful fallback UI
  }
}

interface CategoryType {
  slug: string;
  headline: string;
  introSubline: string;
  imageUrl: string;
  text: string;
  spotifyPlaylist?: string;
  deezerPlaylist?: string;
  appleMusicPlaylist?: string;
  knowledgeUrl?: string;
}

const currentCategory = category as CategoryType;
const isSlugImage =
  currentCategory?.imageUrl &&
  !currentCategory.imageUrl.includes("/") &&
  !/\.[a-zA-Z]{2,5}$/.test(currentCategory.imageUrl);
const title = `${currentCategory?.headline} ${t("category.start")}`;
const description = currentCategory?.introSubline || "";
const pageContent = `${title} ${description} ${currentCategory?.text || ""}`;
const optimizedDescription = pageContent; // final trimming & sentence handling delegated to buildPageSeo
const keywordArray: string[] = [];
// SEO additions
const base = Astro.site?.toString().replace(/\/$/, "") || "https://melody-mind.de";
const canonical = `${base}/${lang}/${Astro.params.category}`;
const breadcrumbs = [
  { name: t("nav.home") || "Home", url: `${base}/${lang}` },
  { name: t("game.categories.title") || "Categories", url: `${base}/${lang}/gamehome` },
  { name: currentCategory?.headline || title, url: canonical },
];
const structuredDataExtra = [
  {
    "@type": "CollectionPage",
    name: currentCategory?.headline || title,
    description: optimizedDescription,
    url: canonical,
    inLanguage: lang,
    isPartOf: { "@type": "WebSite", name: "MelodyMind", url: base },
  },
];

// Unified SEO object
const pageSeo = buildPageSeo({
  title,
  description: optimizedDescription,
  url: canonical,
  // Using 'generic' until a specific 'category' kind is defined in PageContentKind
  contentKind: "generic",
  breadcrumbs,
  structuredData: structuredDataExtra,
  enrichedParts: [
    title,
    description,
    currentCategory?.headline,
    currentCategory?.introSubline,
    currentCategory?.text,
  ].filter(Boolean) as string[],
  fallbackKeywords: keywordArray, // empty; builder derives
  keywordLimit: 28,
  maxDescription: 155,
  image: currentCategory?.imageUrl,
  publishDate: new Date("2024-01-01"),
  modifiedDate: new Date(),
  index: true,
  follow: true,
  autoSocialImage: false,
});
---

<Layout {pageSeo} {breadcrumbs}>
  <div class="min-h-screen bg-gray-900 px-4 py-8 text-white">
    <div class="mx-auto max-w-7xl">
      <div class="sr-only" aria-live="polite" id="dynamic-announcements"></div>

      {
        usedFallback && (
          <div
            class="mb-6 rounded-lg border border-yellow-600/30 bg-yellow-900/20 p-4 text-yellow-200 shadow-sm"
            role="alert"
            aria-live="polite"
          >
            <div class="flex items-center gap-3">
              <Icon name="warning" class="h-5 w-5" aria-hidden="true" />
              <span>{t("notice.fallback_content")}</span>
            </div>
          </div>
        )
      }

      <!-- Header Section with Image -->
      <header class="mb-16 text-center">
        <div class="flex flex-col lg:grid lg:grid-cols-[1fr_0.8fr] lg:items-center lg:gap-16">
          <!-- Image Section -->
          <div class="mx-auto w-full max-w-md lg:max-w-none">
            {
              currentCategory?.imageUrl ? (
                <div class="relative aspect-[5/3] w-full overflow-hidden rounded-2xl border border-gray-600 shadow-2xl">
                  {isSlugImage ? (
                    <CategoryImage
                      slug={currentCategory.imageUrl}
                      alt={`${currentCategory.headline} ${t("category.image.alt")}`}
                      loading="eager"
                      fetchpriority="high"
                      class="h-full w-full"
                      priority
                    />
                  ) : (
                    <Picture
                      class="h-full w-full object-cover transition-transform duration-300 hover:scale-105"
                      src={currentCategory.imageUrl}
                      widths={[400, 600, 800, 1200]}
                      sizes="(max-width: 640px) 400px, (max-width: 1024px) 600px, (max-width: 1280px) 800px, 1200px"
                      formats={["avif", "webp", "jpg"]}
                      alt={`${currentCategory.headline} ${t("category.image.alt")}`}
                      loading="eager"
                      fetchpriority="high"
                      width={1000}
                      height={600}
                      decoding="async"
                    />
                  )}
                </div>
              ) : (
                <div
                  class="flex aspect-[5/3] w-full items-center justify-center rounded-2xl border-2 border-dashed border-gray-600 bg-gray-800 p-8 text-center text-gray-400"
                  role="img"
                  aria-label={t("category.no_image_available")}
                >
                  <div class="flex flex-col items-center gap-3">
                    <Icon name="image" class="h-12 w-12" aria-hidden="true" />
                    <span>{t("category.no_image_available")}</span>
                  </div>
                </div>
              )
            }
          </div>

          <!-- Text Section -->
          <div class="mt-8 flex flex-col items-center gap-6 lg:mt-0">
            <div
              class="relative flex h-16 w-16 scale-105 items-center justify-center rounded-full border-4 border-white bg-gradient-to-br from-blue-500 to-purple-600 shadow-2xl"
            >
              <div
                class="absolute inset-1 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 opacity-50"
              >
              </div>
              <Icon name="music-note" class="relative z-10 h-8 w-8 text-white" />
            </div>

            <Headline level="h1" textSize="3xl" textAlign="center">
              {currentCategory?.headline}
            </Headline>

            <Paragraph textSize="lg" textAlign="center">
              {currentCategory?.introSubline}
            </Paragraph>
          </div>
        </div>
      </header>

      <article
        class="mx-auto max-w-4xl space-y-12"
        data-category={currentCategory?.slug}
        id="main-content"
        tabindex="-1"
      >
        <!-- About Section -->
        <section
          class="relative flex w-full flex-col items-center gap-4 overflow-hidden rounded-2xl border border-gray-600 bg-gradient-to-br from-gray-800 to-gray-700 p-6 shadow-lg"
        >
          <div
            class="absolute top-0 right-0 left-0 h-1 bg-gradient-to-r from-purple-500 to-blue-500 opacity-80"
          >
          </div>

          <div
            class="relative mt-4 flex h-16 w-16 scale-105 items-center justify-center rounded-full border-4 border-white bg-gradient-to-br from-purple-500 to-purple-600 shadow-2xl"
          >
            <div
              class="absolute inset-1 rounded-full bg-gradient-to-br from-purple-400 to-purple-500 opacity-50"
            >
            </div>
            <Icon name="info-circle" class="relative z-10 h-8 w-8 text-white" />
          </div>

          <Headline level="h2" textSize="2xl" textAlign="center">
            {t("category.about.title")}
          </Headline>

          <Paragraph textSize="lg" textAlign="center">
            {currentCategory?.text}
          </Paragraph>

          {
            (currentCategory?.spotifyPlaylist ||
              currentCategory?.deezerPlaylist ||
              currentCategory?.appleMusicPlaylist) && (
              <div class="mt-4">
                <MusicButtons category={currentCategory} title={currentCategory?.headline || ""} />
              </div>
            )
          }

          {
            currentCategory?.knowledgeUrl && (
              <div class="mt-4">
                <ButtonLink
                  href={currentCategory.knowledgeUrl}
                  variant="secondary"
                  icon="book-open"
                  aria-label={`${t("knowledge.read.more")} über ${currentCategory?.headline}`}
                >
                  {t("knowledge.read.article")}
                </ButtonLink>
              </div>
            )
          }
        </section>

        <!-- Quiz Section -->
        <section
          id="quiz-section"
          class="relative flex w-full flex-col items-center gap-4 overflow-hidden rounded-2xl border border-gray-600 bg-gradient-to-br from-gray-800 to-gray-700 p-6 shadow-lg"
          aria-hidden="true"
        >
          <div
            class="absolute top-0 right-0 left-0 h-1 bg-gradient-to-r from-purple-500 to-blue-500 opacity-80"
          >
          </div>

          <div
            class="relative mt-4 flex h-16 w-16 scale-105 items-center justify-center rounded-full border-4 border-white bg-gradient-to-br from-purple-500 to-purple-600 shadow-2xl"
          >
            <div
              class="absolute inset-1 rounded-full bg-gradient-to-br from-purple-400 to-purple-500 opacity-50"
            >
            </div>
            <Icon name="music" class="relative z-10 h-8 w-8 text-white" />
          </div>

          <Headline level="h2" textSize="2xl" textAlign="center">
            {t("category.difficulty.heading")}
          </Headline>

          <Paragraph textSize="lg" textAlign="center">
            {t("knowledge.play.description")}
          </Paragraph>

          <div
            class="mt-8 flex w-full flex-col lg:flex-row lg:justify-center lg:gap-6"
            role="group"
          >
            <ButtonLink
              href={getRelativeLocaleUrl(lang, `game-${currentCategory?.slug ?? ""}/easy`)}
              aria-label={`${t("category.difficulty.easy")} ${t("difficulty.level")} - ${currentCategory?.headline}`}
              icon="play"
            >
              <span>{t("category.difficulty.easy")}</span>
            </ButtonLink>

            <ButtonLink
              href={getRelativeLocaleUrl(lang, `game-${currentCategory?.slug ?? ""}/medium`)}
              aria-label={`${t("category.difficulty.medium")} ${t("difficulty.level")} - ${currentCategory?.headline}`}
              icon="bolt"
            >
              <span>{t("category.difficulty.medium")}</span>
            </ButtonLink>

            <ButtonLink
              href={getRelativeLocaleUrl(lang, `game-${currentCategory?.slug ?? ""}/hard`)}
              aria-label={`${t("category.difficulty.hard")} ${t("difficulty.level")} - ${currentCategory?.headline}`}
              icon="fire"
            >
              {t("category.difficulty.hard")}
            </ButtonLink>
          </div>
        </section>

        <!-- Time Pressure Section -->
        <section
          id="time-pressure-section"
          class="relative flex w-full flex-col items-center gap-4 overflow-hidden rounded-2xl border border-yellow-600/30 bg-gradient-to-br from-yellow-900/20 to-red-900/20 p-6 shadow-lg"
          aria-hidden="true"
        >
          <div
            class="absolute top-0 right-0 left-0 h-1 bg-gradient-to-r from-yellow-500 to-red-500 opacity-80"
          >
          </div>

          <div
            class="relative mt-4 flex h-16 w-16 scale-105 items-center justify-center rounded-full border-4 border-white bg-gradient-to-br from-yellow-500 to-red-500 shadow-2xl"
          >
            <div
              class="absolute inset-1 rounded-full bg-gradient-to-br from-yellow-400 to-red-500 opacity-50"
            >
            </div>
            <Icon name="timer" class="relative z-10 h-8 w-8 text-white" />
          </div>

          <Headline level="h2" textSize="2xl" textAlign="center">
            {t("game.timepressure.title")}
          </Headline>

          <Paragraph textSize="lg" textAlign="center">
            {t("game.timepressure.description").replace("{category}", currentCategory?.headline)}
          </Paragraph>

          <div class="mt-8 flex w-full justify-center" role="group">
            <ButtonLink
              href={getRelativeLocaleUrl(lang, `time-pressure-${currentCategory?.slug ?? ""}`)}
              aria-label={`${t("game.timepressure.title")} - ${currentCategory?.headline}`}
              icon="zap"
              variant="primary"
            >
              <span>{t("game.start.now")}</span>
            </ButtonLink>
          </div>
        </section>

        <!-- Chronology Section -->
        <section
          id="chronology-section"
          class="relative flex w-full flex-col items-center gap-4 overflow-hidden rounded-2xl border border-gray-600 bg-gradient-to-br from-gray-800 to-gray-700 p-6 shadow-lg"
          aria-hidden="true"
        >
          <div
            class="absolute top-0 right-0 left-0 h-1 bg-gradient-to-r from-purple-500 to-blue-500 opacity-80"
          >
          </div>

          <div
            class="relative mt-4 flex h-16 w-16 scale-105 items-center justify-center rounded-full border-4 border-white bg-gradient-to-br from-blue-500 to-purple-600 shadow-2xl"
          >
            <div
              class="absolute inset-1 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 opacity-50"
            >
            </div>
            <Icon name="clock-history" class="relative z-10 h-8 w-8 text-white" />
          </div>

          <Headline level="h2" textSize="2xl" textAlign="center">
            {t("game.chronology.title")}
          </Headline>

          <Paragraph textSize="lg" textAlign="center">
            {t("game.chronology.description")}
          </Paragraph>

          <div
            class="mt-8 flex w-full flex-col lg:flex-row lg:justify-center lg:gap-6"
            role="group"
          >
            <ButtonLink
              href={getRelativeLocaleUrl(lang, `chronology-${currentCategory?.slug ?? ""}/easy`)}
              aria-label={`${t("game.chronology.title")} - ${t("category.difficulty.easy")} ${t("difficulty.level")} - ${currentCategory?.headline}`}
              icon="play"
            >
              {t("category.difficulty.easy")}
            </ButtonLink>

            <ButtonLink
              href={getRelativeLocaleUrl(lang, `chronology-${currentCategory?.slug ?? ""}/medium`)}
              aria-label={`${t("game.chronology.title")} - ${t("category.difficulty.medium")} ${t("difficulty.level")} - ${currentCategory?.headline}`}
              icon="bolt"
            >
              <span>{t("category.difficulty.medium")}</span>
            </ButtonLink>

            <ButtonLink
              href={getRelativeLocaleUrl(lang, `chronology-${currentCategory?.slug ?? ""}/hard`)}
              aria-label={`${t("game.chronology.title")} - ${t("category.difficulty.hard")} ${t("difficulty.level")} - ${currentCategory?.headline}`}
              icon="fire"
            >
              {t("category.difficulty.hard")}
            </ButtonLink>
          </div>
        </section>
      </article>
    </div>
  </div>
</Layout>

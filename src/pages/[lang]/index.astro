---
/**
 * MelodyMind Homepage Component
 *
 * This component renders the main landing page of the MelodyMind app.
 * It implements WCAG AAA (7:1 contrast ratio) accessibility standards
 * and uses performance optimizations for fast loading and rendering.
 */
import Layout from "@layouts/Layout.astro";
import { Image } from "astro:assets";
import { getLangFromUrl, useTranslations, getRelativeLocaleUrl } from "@utils/i18n";
import { extractKeywords, generateMetaDescription } from "@utils/seo";
import Headline from "@components/Headline.astro";
import Paragraph from "@components/Paragraph.astro";
import ButtonLink from "@components/ButtonLink.astro";

// Extract language from URL and set up translations
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(String(lang));

/**
 * Dynamic redirect based on browser language preference
 * Ensures users land on their preferred language version
 */
if (Astro.request.method === "GET" && !Astro.params.lang) {
  return Astro.redirect(getRelativeLocaleUrl(Astro.preferredLocale || "en", "/"));
}

// Basic page content setup
const title = t("login.welcome");
const description = t("login.description");

/**
 * Enhanced SEO content generation
 * Combines various text elements for better keyword density and relevance
 */
const pageContent = `${title} ${description} ${t("index.welcome.footnote")}`;

// Generate optimized meta description and keyword set
const optimizedDescription = generateMetaDescription(pageContent);
const keywords = extractKeywords(pageContent) || t("meta.keywords");

// Structured data parameters for enhanced SEO
const pageType = "website";
const publishDate = new Date("2024-01-01");
const modifiedDate = new Date();
---

<Layout
  {title}
  description={optimizedDescription}
  {keywords}
  image={`/og-images/social-share-home-${String(lang)}.jpg`}
  type={pageType}
  {publishDate}
  {modifiedDate}
>
  <main id="main-content" class="main-content" tabindex="-1">
    <div class="content-container">
      <div class="content-wrapper">
        {/* Logo with comprehensive image optimization and accessibility */}
        <div class="logo-container" aria-hidden="true">
          <Image
            src="/melody-mind.png"
            width={300}
            height={300}
            alt="Melody Mind Logo - Music Quiz App Logo"
            loading="eager"
            fetchpriority="high"
          />
        </div>

        {/* Semantic heading with proper hierarchy */}
        <Headline level="h1" {title} size="4xl" />

        {/* Description with enhanced contrast for AAA compliance */}
        <Paragraph align="center" textSize="lg">
          {description}
        </Paragraph>

        {/* Accessible button container with increased touch targets */}
        <div class="button-container">
          <ButtonLink href={`/${String(lang)}/gamehome`} aria-label={t("index.start.game.label")}>
            <span>{t("index.continue")}</span>
          </ButtonLink>
        </div>

        {/* Footer text with improved contrast ratio */}
        <div class="footer-section">
          <Paragraph textSize="base" ariaLive="polite" align="center">
            {t("index.welcome.footnote")}
          </Paragraph>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style lang="scss">
  /* ======================================
   * INDEX PAGE STYLES - OPTIMIZED FOR STYLE GUARDIAN
   * BEM Methodology + Global Variables + Mobile-First
   * ====================================== */

  .main-content {
    min-height: 100vh;
    color: var(--text-primary);
    contain: layout style paint;

    &:focus {
      outline: none;
    }
  }

  .content-container {
    margin: 0 auto;
    display: flex;
    width: var(--width-full);
    max-width: var(--container-lg);
    flex-direction: column;
    align-items: center;
    contain: layout style;
    text-align: center;
  }

  .content-wrapper {
    display: flex;
    width: var(--width-full);
    flex-direction: column;
    align-items: center;
    contain: layout style;
  }

  /* ======================================
   * BUTTON SECTION - SIMPLIFIED DESIGN
   * ====================================== */
  .button-container {
    display: flex;
    width: var(--width-full);
    flex-direction: column;
    align-items: center;
    contain: layout style;
    margin: 0 auto 0; // Mobile: compact margin
    max-width: var(--container-xs);
    gap: var(--space-sm);
  }

  /* ======================================
   * FOOTER SECTION - SIMPLIFIED DESIGN
   * ====================================== */
  .footer-section {
    max-width: var(--content-readable-width);
    contain: layout style;
    margin-top: var(--space-lg); // Mobile: compact margin
  }

  // Enhanced focus styles for all interactive elements
  a,
  button,
  [tabindex] {
    &:focus-visible {
      outline: var(--focus-ring);
      outline-offset: var(--focus-ring-offset);
    }
  }
</style>

<script>
  /**
   * Simplified client-side enhancements
   * Focus on essential functionality without over-engineering
   */

  // Simple animation manager
  class SimpleAnimationManager {
    private observer: IntersectionObserver | null = null;

    constructor() {
      this.initializeObserver();
    }

    private initializeObserver(): void {
      const config = {
        rootMargin: "0px",
        threshold: 0.1,
      };

      this.observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-in");
            this.observer?.unobserve(entry.target);
          }
        });
      }, config);
    }

    public initialize(): void {
      const animatableElements = document.querySelectorAll(".animate-on-view");
      animatableElements.forEach((element) => {
        this.observer?.observe(element);
      });
    }

    public destroy(): void {
      if (this.observer) {
        this.observer.disconnect();
        this.observer = null;
      }
    }
  }

  // Enhanced accessibility
  const enhanceAccessibility = (): void => {
    // Skip to main content functionality
    const skipLink = document.querySelector('[href="#main-content"]') as HTMLAnchorElement;

    if (skipLink) {
      skipLink.addEventListener("click", (event) => {
        event.preventDefault();
        const mainContent = document.getElementById("main-content");
        mainContent?.focus();
        mainContent?.setAttribute("aria-live", "polite");
      });
    }

    // Enhanced keyboard navigation
    document.addEventListener("keydown", (event) => {
      if (event.key === "Escape") {
        const focusedElement = document.activeElement as HTMLElement;
        focusedElement?.blur();
      }
    });
  };

  // Initialize when DOM is ready
  const initializePage = (): void => {
    const animationManager = new SimpleAnimationManager();

    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", () => {
        animationManager.initialize();
        enhanceAccessibility();
      });
    } else {
      animationManager.initialize();
      enhanceAccessibility();
    }

    // Cleanup on page unload
    window.addEventListener("beforeunload", () => {
      animationManager.destroy();
    });
  };

  // Initialize
  initializePage();
</script>

---
/**
 * @component ChronologyGamePage
 * @description Moderne Chronologie-Spielseite für das MelodyMind-Projekt
 *
 * Funktionen:
 * - Schwierigkeitsgrade (Easy: 4 Alben, Medium: 5 Alben, Hard: 6 Alben)
 * - Intuitive Buttons zum Verschieben der Elemente
 * - Vollständige Tastatursteuerung
 * - Punkteberechnung basierend auf korrekter Reihenfolge
 * - Lösungsoverlay nach jeder Runde
 * - Endoverlay mit Gesamtergebnis
 * - Modernes, ansprechendes Design mit CSS-Variablen
 * - Datenbank-Speicherung der Spielergebnisse
 */

// 1. Imports
import Layout from "@layouts/Layout.astro";
import EndOverlay from "@components/Overlays/EndOverlay.astro";
import LoadingSpinner from "@components/Game/LoadingSpinner.astro";
import ChronologyFeedbackOverlay from "@components/Overlays/ChronologyFeedbackOverlay.astro";
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { Icon } from "astro-icon/components";
import { requireAuth } from "../../../middleware/auth.js";

// Server-side rendering for cookie-based authentication
export const prerender = false;

/**
 * Generiert statische Pfade für alle unterstützten Sprachen, Kategorien und Schwierigkeitsgrade
 */
export async function getStaticPaths() {
  const supportedLanguages = [
    "de",
    "en",
    "es",
    "fr",
    "it",
    "pt",
    "da",
    "nl",
    "sv",
    "fi",
    "cn",
    "ru",
    "jp",
    "uk",
  ] as const;
  const difficultyLevels = ["easy", "medium", "hard"] as const;
  const paths = [];

  for (const lang of supportedLanguages) {
    let categories;
    try {
      categories = await import(`@json/${lang}_categories.json`);
    } catch {
      categories = await import(`@json/en_categories.json`);
    }

    for (const categoryData of categories.default) {
      for (const difficulty of difficultyLevels) {
        paths.push({
          params: { lang, category: categoryData.slug, difficulty },
          props: { categoryData, lang },
        });
      }
    }
  }

  return paths;
}

// 2. Props und Parameter verarbeitung
interface Props {
  categoryData: { headline: string; slug: string };
  lang: string;
}

const { categoryData } = Astro.props;
const lang = getLangFromUrl(Astro.url) as string;
const t = useTranslations(lang);
const { category, difficulty } = Astro.params;

// Debug logging
console.log("Chronology page - categoryData:", categoryData);
console.log("Chronology page - category:", category);
console.log("Chronology page - difficulty:", difficulty);

// 3. Authentifizierung prüfen
// Check if Astro.request is available (for SSR compatibility)
let authResult: { authenticated: boolean; user?: { id: string; email: string } } = {
  authenticated: false,
  user: undefined,
};
if (Astro.request) {
  authResult = await requireAuth(Astro.request);
}
const user = { id: authResult.user?.id || "guest" };

// 4. Meta-Daten für SEO
const metaDescription = `${t("game.chronology.title")} - ${categoryData?.headline} (${t(`difficulty.${difficulty}`)})`;
---

<Layout
  title={`${t("game.chronology.title")} - ${categoryData?.headline}`}
  description={metaDescription}
  showHeader={false}
  showCoins={false}
>
  <!-- Feedback- und End-Overlays -->
  <ChronologyFeedbackOverlay />
  <EndOverlay
    id="endgame-popup"
    data-score="0"
    data-category={category || ""}
    data-difficulty={difficulty || ""}
    data-mode="chronology"
  />

  <!-- Loading Spinner -->
  <LoadingSpinner />

  <!-- Spielbereich -->
  <main
    id="chronology-container"
    class="chronology-game"
    data-category={category}
    data-difficulty={difficulty}
    data-user-id={user.id}
    data-category-name={categoryData?.headline || category || ""}
    aria-label={t("game.chronology.aria.main")}
  >
    <!-- Game Header -->
    <header class="game-header">
      <!-- Game Info Badges -->
      <div class="game-info" role="banner" aria-label={t("game.chronology.info.aria")}>
        <div class="badge">
          <Icon name="trophy" class="badge__icon" />
          <span class="badge__text" id="score-display">0</span>
        </div>
        <div class="badge">
          <Icon name="target" class="badge__icon" />
          <span class="badge__text">
            <span id="round-display">1</span>/10
          </span>
        </div>
        <div class="badge">
          <Icon name="gauge" class="badge__icon" />
          <span class="badge__text">{t(`difficulty.${difficulty}`)}</span>
        </div>
      </div>
    </header>

    <!-- Game Content -->
    <div class="game-content">
      <h1 class="game-title">{t("game.chronology.sort.albums")}</h1>
      <p class="game-description">{t("game.chronology.instructions")}</p>

      <!-- Chronology Container -->
      <div id="chronology-items-container" class="chronology-container">
        <div class="loading-placeholder">
          <Icon name="loader" class="loading-icon" />
          <p>{t("loading.albums")}</p>
        </div>
      </div>

      <!-- Game Controls -->
      <div class="game-controls">
        <!-- Move Buttons -->
        <div class="move-buttons">
          <button
            id="move-up-btn"
            type="button"
            class="move-button"
            disabled
            aria-label={t("game.move.up.aria")}
          >
            <Icon name="chevron-up" class="move-button__icon" />
            {t("game.move.up")}
          </button>
          <button
            id="move-down-btn"
            type="button"
            class="move-button"
            disabled
            aria-label={t("game.move.down.aria")}
          >
            <Icon name="chevron-down" class="move-button__icon" />
            {t("game.move.down")}
          </button>
        </div>

        <!-- Submit Button -->
        <button
          id="submit-btn"
          type="button"
          class="submit-button"
          disabled
          aria-label={t("game.submit.answer.aria")}
        >
          <Icon name="check" class="submit-button__icon" />
          {t("game.submit.answer")}
        </button>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Import chronology game engine
  import "../../../utils/game/chronologyGameEngine.ts";
</script>

<style lang="scss" is:global>
  /**
   * Chronology Game Styles
   * Modern SCSS implementation with responsive design
   * Uses CSS variables from global.css for consistent theming
   */

  // SCSS Variables using global.css tokens
  $transition-smooth: var(--transition-normal);
  $border-selected: var(--border-width-thick) solid var(--interactive-primary);
  $border-default: var(--border-width-thick) solid var(--border-primary);
  $hover-transform: translateY(var(--animation-y-offset-small));
  $shadow-hover: var(--card-shadow-hover);
  $focus-ring: var(--focus-ring);

  // Note: Using hardcoded em values in media queries since CSS variables don't work in @media rules
  // Mobile portrait: 0-479px (< 30em)
  // Mobile landscape: 480-639px (30em - 39.9375em)
  // Small tablet: 640-767px (40em - 47.9375em)
  // Tablet: 768-1023px (48em - 63.9375em)
  // Desktop: 1024-1279px (64em - 79.9375em)
  // Large desktop: 1280px+ (80em+)

  // Mixins for common patterns
  @mixin flex-center($direction: row) {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: $direction;
  }

  @mixin button-base {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    border-radius: var(--radius-lg);
    font-weight: var(--font-medium);
    cursor: pointer;
    transition: $transition-smooth;
    justify-content: center;
    border: none;
    outline: none;

    &:not(:disabled):hover {
      transform: $hover-transform;
      box-shadow: $shadow-hover;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    &:focus-visible {
      outline: 3px solid var(--interactive-primary);
      outline-offset: 2px;
    }
  }

  @mixin focus-styles {
    &:focus {
      outline: none;
      border-color: var(--interactive-primary);
      box-shadow: $focus-ring;
    }

    &:focus-visible {
      outline: 3px solid var(--interactive-primary);
      outline-offset: 2px;
    }
  }

  // Enhanced responsive design mixins using hardcoded breakpoints
  @mixin respond-to-mobile {
    @media (max-width: 29.9375em) {
      @content;
    }
  }

  @mixin respond-to-mobile-landscape {
    @media (min-width: 30em) and (max-width: 39.9375em) {
      @content;
    }
  }

  @mixin respond-to-tablet {
    @media (max-width: 47.9375em) {
      @content;
    }
  }

  @mixin respond-to-desktop {
    @media (min-width: 64em) {
      @content;
    }
  }

  // Keyframes
  @keyframes spin {
    from {
      transform: rotate(var(--rotation-0));
    }
    to {
      transform: rotate(360deg);
    }
  }

  // Enhanced animations using global.css variables
  @keyframes fadeIn {
    from {
      opacity: var(--animation-opacity-start);
      transform: translateY(var(--animation-y-offset));
    }
    to {
      opacity: var(--animation-opacity-full);
      transform: translateY(0);
    }
  }

  // Enhanced main game container with comprehensive responsive design
  .chronology-game {
    min-height: 100vh;
    background: var(--bg-primary);
    color: var(--text-primary);
    padding: var(--space-lg);
    max-width: var(--container-xl);
    margin: 0 auto;
    animation: fadeIn var(--animation-duration-normal) ease-out;
    contain: layout style;

    // Mobile portrait (< 480px) - very compact
    @media (max-width: 39.9375em) {
      padding: var(--space-sm) var(--space-xs);
      min-height: 100dvh; // Use dynamic viewport height on mobile
    }

    // Mobile landscape (480px - 640px) - balanced layout
    @media (max-width: 47.9375em) and (orientation: landscape) {
      padding: var(--space-md) var(--space-sm);
    }

    // Small tablet (640px - 768px) - enhanced spacing
    @media (min-width: 40em) and (max-width: 47.9375em) {
      padding: var(--space-lg) var(--space-md);
    }

    // Tablet (768px - 1024px) - optimal spacing
    @media (min-width: 48em) and (max-width: 63.9375em) {
      padding: var(--space-xl);
      max-width: var(--container-lg);
    }

    // Desktop (1024px+) - premium experience
    @media (min-width: 48em) {
      padding: var(--space-2xl);
      max-width: var(--container-xl);
    }
  }

  // Game Header Section
  .game-header {
    margin-bottom: var(--space-lg);
    text-align: center;

    @media (max-width: 39.9375em) {
      margin-bottom: var(--space-md);
    }
  }

  .game-info {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-md);
    margin-top: var(--space-md);
    flex-wrap: wrap;

    // Mobile portrait - stacked layout
    @media (max-width: 39.9375em) {
      flex-direction: column;
      align-items: center;
      gap: var(--space-xs);
      margin-top: var(--space-sm);
    }

    // Small tablet and up to large mobile
    @media (min-width: 40em) and (max-width: 47.9375em) {
      flex-direction: row;
      justify-content: center;
      gap: var(--space-sm);
    }

    // Desktop - optimal spacing
    @media (min-width: 48em) {
      gap: var(--space-lg);
    }
  }

  .badge {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-sm);
    background: var(--bg-secondary);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-lg);
    border: var(--border-width-thin) solid var(--border-secondary);
    transition: $transition-smooth;
    min-width: var(--stat-width-sm);
    contain: layout style;

    &:hover {
      background: var(--bg-tertiary);
      transform: translateY(calc(-1 * var(--space-micro)));
      box-shadow: var(--shadow-md);
    }

    &__icon {
      width: var(--icon-size-sm);
      height: var(--icon-size-sm);
      color: var(--interactive-primary);
      flex-shrink: 0;
    }

    &__text {
      font-weight: var(--font-medium);
      font-size: var(--text-sm);
      white-space: nowrap;
      min-width: var(--coin-number-min-width);
    }

    // Mobile portrait - compact badges
    @media (max-width: 39.9375em) {
      padding: var(--space-xs) var(--space-sm);
      min-width: calc(var(--stat-width-sm) * 0.75);
      gap: var(--space-xs);

      &__icon {
        width: var(--text-sm);
        height: var(--text-sm);
      }

      &__text {
        font-size: var(--text-xs);
      }
    }

    // Desktop - enhanced badges
    @media (min-width: 48em) {
      min-width: var(--stat-width-md);
      padding: var(--space-md) var(--space-lg);
    }
  }

  // Enhanced game content section with responsive max-widths
  .game-content {
    max-width: var(--container-md);
    margin: 0 auto;
    width: var(--width-full);
    contain: layout;

    // Mobile portrait - full width
    @media (max-width: 39.9375em) {
      max-width: var(--width-full);
      margin: 0;
    }

    // Desktop - optimal reading width
    @media (min-width: 48em) {
      max-width: var(--container-lg);
    }
  }

  .game-title {
    font-size: var(--text-2xl);
    font-weight: var(--font-bold);
    text-align: center;
    margin-bottom: var(--space-sm);
    background: var(--btn-primary-bg);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: var(--leading-tight);

    // Mobile portrait - very compact
    @media (max-width: 39.9375em) {
      font-size: var(--text-lg);
      line-height: var(--leading-normal);
      margin-bottom: var(--space-xs);
    }

    // Mobile landscape - balanced
    @media (max-width: 47.9375em) and (orientation: landscape) {
      font-size: var(--text-xl);
      margin-bottom: var(--space-sm);
    }

    // Small tablet - enhanced
    @media (min-width: 40em) and (max-width: 47.9375em) {
      font-size: var(--text-2xl);
    }

    // Desktop - optimal typography
    @media (min-width: 48em) {
      font-size: var(--text-3xl);
      margin-bottom: var(--space-md);
      line-height: var(--leading-tight);
    }
  }

  .game-description {
    text-align: center;
    color: var(--text-secondary);
    margin-bottom: var(--space-xl);
    line-height: var(--leading-enhanced);
    max-width: var(--content-readable-width);
    margin-left: auto;
    margin-right: auto;
    font-size: var(--text-base);

    // Mobile portrait - compact description
    @media (max-width: 39.9375em) {
      margin-bottom: var(--space-md);
      font-size: var(--text-xs);
      line-height: var(--leading-relaxed);
      max-width: var(--width-full);
      padding: 0 var(--space-sm);
    }

    // Mobile landscape - improved readability
    @media (max-width: 47.9375em) and (orientation: landscape) {
      font-size: var(--text-sm);
      margin-bottom: var(--space-lg);
    }

    // Tablet - optimal reading
    @media (min-width: 40em) and (max-width: 47.9375em) {
      font-size: var(--text-sm);
      margin-bottom: var(--space-lg);
      max-width: var(--motivation-text-max-width);
    }

    // Desktop - enhanced typography
    @media (min-width: 48em) {
      font-size: var(--text-lg);
      margin-bottom: var(--space-2xl);
    }
  }

  // Enhanced chronology container with comprehensive responsive design
  .chronology-container {
    background: var(--card-bg);
    border-radius: var(--radius-xl);
    padding: var(--space-lg);
    margin-bottom: var(--space-lg);
    border: var(--border-width-thin) solid var(--card-border);
    min-height: var(--container-intrinsic-height-card);
    position: relative;
    box-shadow: var(--card-shadow);
    contain: layout style;

    // Mobile portrait - very compact container
    @media (max-width: 39.9375em) {
      padding: var(--space-sm);
      min-height: calc(var(--container-intrinsic-height-card) * 0.75);
      margin-bottom: var(--space-md);
      border-radius: var(--radius-lg);
    }

    // Mobile landscape - balanced spacing
    @media (max-width: 47.9375em) and (orientation: landscape) {
      padding: var(--space-md);
      min-height: calc(var(--container-intrinsic-height-card) * 0.875);
    }

    // Tablet - optimal container size
    @media (min-width: 40em) and (max-width: 47.9375em) {
      padding: var(--space-lg);
      min-height: calc(var(--container-intrinsic-height-card) * 0.9);
    }

    // Desktop - premium container experience
    @media (min-width: 48em) {
      padding: var(--space-xl);
      margin-bottom: var(--space-2xl);
      border-radius: var(--radius-2xl);
      box-shadow: var(--shadow-lg);
    }
  }

  .loading-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: var(--container-intrinsic-height-component);
    color: var(--text-secondary);
    text-align: center;
    contain: layout style;

    p {
      margin-top: var(--space-md);
      font-size: var(--text-sm);
    }

    // Mobile portrait - compact loading
    @media (max-width: 39.9375em) {
      height: calc(var(--container-intrinsic-height-component) * 0.5);

      p {
        font-size: var(--text-xs);
        margin-top: var(--space-sm);
      }
    }

    // Desktop - enhanced loading experience
    @media (min-width: 48em) {
      height: calc(var(--container-intrinsic-height-component) * 0.75);

      p {
        font-size: var(--text-base);
        margin-top: var(--space-lg);
      }
    }
  }

  .loading-icon {
    width: var(--icon-size-lg);
    height: var(--icon-size-lg);
    margin-bottom: var(--space-md);
    animation: spin var(--animation-pulse-duration) linear infinite;
    color: var(--interactive-primary);

    // Mobile portrait - smaller icon
    @media (max-width: 39.9375em) {
      width: var(--icon-size-md);
      height: var(--icon-size-md);
      margin-bottom: var(--space-sm);
    }

    // Desktop - larger icon
    @media (min-width: 48em) {
      width: var(--icon-size-xl);
      height: var(--icon-size-xl);
    }
  }

  // Enhanced chronology items with comprehensive responsive design
  .chronology-item {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    background: var(--card-bg);
    border: $border-default;
    border-radius: var(--radius-lg);
    padding: var(--space-md);
    margin-bottom: var(--space-md);
    cursor: pointer;
    transition: $transition-smooth;
    position: relative;
    box-shadow: var(--card-shadow);
    contain: layout style;
    min-height: var(--touch-target-enhanced);

    &:last-child {
      margin-bottom: 0;
    }

    &:hover {
      border-color: var(--interactive-primary);
      transform: $hover-transform;
      box-shadow: $shadow-hover;
    }

    @include focus-styles;

    &--selected {
      border-color: var(--interactive-primary);
      background: var(--bg-tertiary);
      box-shadow: $shadow-hover;

      .chronology-item__position {
        background: var(--interactive-secondary);
        transform: scale(var(--animation-scale-hover-subtle));
      }
    }

    // Mobile portrait - compact items
    @media (max-width: 39.9375em) {
      padding: var(--space-sm);
      gap: var(--space-sm);
      margin-bottom: var(--space-sm);
      border-radius: var(--radius-md);
      min-height: calc(var(--touch-target-enhanced) + var(--space-sm));
    }

    // Desktop - enhanced items
    @media (min-width: 48em) {
      padding: var(--space-lg);
      gap: var(--space-lg);
      border-radius: var(--radius-xl);
    }

    &__position {
      display: flex;
      align-items: center;
      justify-content: center;
      width: var(--min-touch-size);
      height: var(--min-touch-size);
      background: var(--interactive-primary);
      color: var(--color-white);
      border-radius: var(--radius-full);
      font-weight: var(--font-bold);
      font-size: var(--text-lg);
      flex-shrink: 0;
      transition: $transition-smooth;
      border: var(--border-width-thin) solid transparent;

      // Mobile portrait - compact position indicator
      @media (max-width: 39.9375em) {
        width: calc(var(--min-touch-size) * 0.75);
        height: calc(var(--min-touch-size) * 0.75);
        font-size: var(--text-base);
      }

      // Desktop - enhanced position indicator
      @media (min-width: 48em) {
        width: calc(var(--min-touch-size) * 1.125);
        height: calc(var(--min-touch-size) * 1.125);
        font-size: var(--text-xl);
      }
    }

    &__content {
      flex: 1;
      min-width: 0;
    }

    &__title {
      font-weight: var(--font-semibold);
      font-size: var(--text-lg);
      margin-bottom: var(--space-micro);
      color: var(--text-primary);
      line-height: var(--leading-tight);

      // Mobile portrait - compact title
      @media (max-width: 39.9375em) {
        font-size: var(--text-sm);
        margin-bottom: var(--space-micro);
      }

      // Tablet - balanced title
      @media (min-width: 40em) and (max-width: 47.9375em) {
        font-size: var(--text-base);
      }

      // Desktop - enhanced title
      @media (min-width: 48em) {
        font-size: var(--text-xl);
        margin-bottom: var(--space-xs);
      }
    }

    &__artist {
      color: var(--text-secondary);
      font-size: var(--text-base);
      line-height: var(--leading-normal);
      font-weight: var(--font-normal);

      // Mobile portrait - compact artist name
      @media (max-width: 39.9375em) {
        font-size: var(--text-xs);
        line-height: var(--leading-tight);
      }

      // Tablet - balanced artist name
      @media (min-width: 40em) and (max-width: 47.9375em) {
        font-size: var(--text-sm);
      }

      // Desktop - enhanced artist name
      @media (min-width: 48em) {
        font-size: var(--text-lg);
      }
    }

    // Responsive layout adjustments
    @media (min-width: 40em) and (max-width: 47.9375em) {
      flex-direction: column;
      text-align: center;
      gap: var(--space-sm);

      &__content {
        order: -1;
        margin-bottom: var(--space-sm);
      }

      &__position {
        align-self: center;
      }
    }

    // Mobile portrait - very compact layout
    @media (max-width: 39.9375em) {
      gap: var(--space-xs);

      &__content {
        margin-bottom: var(--space-xs);
      }
    }
  }

  // Enhanced game controls with comprehensive responsive design
  .game-controls {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: var(--space-lg);
    width: var(--width-full);
    max-width: var(--container-sm);
    margin: 0 auto;
    padding: var(--space-2xl);
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.05) 100%
    );
    backdrop-filter: blur(var(--backdrop-blur)) saturate(180%);
    border-radius: var(--radius-2xl);
    border: var(--border-width-thin) solid rgba(255, 255, 255, 0.2);
    box-shadow:
      var(--shadow-xl),
      var(--shadow-md),
      inset 0 var(--border-width-thin) 0 rgba(255, 255, 255, 0.2);
    contain: layout style;

    // Mobile portrait - very compact controls
    @media (max-width: 39.9375em) {
      gap: var(--space-md);
      padding: var(--space-xl) var(--space-lg);
      border-radius: var(--radius-xl);
      margin: var(--space-lg) auto;
      max-width: min(var(--width-full), var(--grid-min-width-xl));
    }

    // Mobile landscape - balanced controls
    @media (max-width: 47.9375em) and (orientation: landscape) {
      gap: var(--space-lg);
      padding: var(--space-xl);
      max-width: var(--container-query-lg);
    }

    // Tablet - optimal controls layout
    @media (min-width: 40em) and (max-width: 47.9375em) {
      gap: var(--space-xl);
      max-width: var(--container-query-md);
      padding: var(--space-2xl) var(--space-3xl);
    }

    // Desktop - premium controls experience
    @media (min-width: 48em) {
      max-width: var(--container-sm);
      padding: var(--space-3xl);
      gap: var(--space-2xl);
      border-radius: var(--radius-3xl);
    }
  }

  .move-buttons {
    display: flex;
    gap: var(--space-md);
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    width: var(--width-full);

    // Mobile portrait - stacked layout for better usability
    @media (max-width: 39.9375em) {
      flex-direction: column;
      width: var(--width-full);
      gap: var(--space-sm);
      margin-bottom: var(--space-md);
    }

    // Tablet - keep stacked for better touch targets
    @media (min-width: 40em) and (max-width: 47.9375em) {
      flex-direction: column;
      width: var(--width-full);
      gap: var(--space-sm);
    }

    // Desktop - can use horizontal layout if preferred
    @media (min-width: 48em) {
      flex-direction: row;
      gap: var(--space-lg);
      justify-content: center;
    }
  }

  .move-button {
    @include button-base;
    background: var(--bg-secondary);
    border: var(--border-width-thick) solid var(--border-secondary);
    color: var(--text-primary);
    padding: var(--space-md) var(--space-lg);
    min-width: var(--grid-min-width-sm);
    text-align: center;
    min-height: var(--touch-target-enhanced);
    font-size: var(--text-base);

    &:not(:disabled):hover {
      background: var(--interactive-primary);
      color: var(--color-white);
      transform: translateY(var(--animation-y-offset-small)) scale(var(--scale-focus));
    }

    &:not(:disabled):active {
      transform: translateY(0) scale(var(--scale-active));
    }

    &:disabled {
      background: var(--bg-tertiary);
      color: var(--text-disabled);
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
    }

    &__icon {
      width: var(--icon-size-md);
      height: var(--icon-size-md);
      flex-shrink: 0;
    }

    // Mobile portrait - enhanced touch targets with better accessibility
    @media (max-width: 39.9375em) {
      width: var(--width-full);
      min-width: auto;
      min-height: calc(var(--touch-target-enhanced) + var(--space-sm));
      padding: var(--space-lg) var(--space-md);
      font-size: var(--text-sm);
      flex-direction: column;
      gap: var(--space-xs);

      &__icon {
        width: var(--icon-size-sm);
        height: var(--icon-size-sm);
      }
    }

    // Tablet - balanced button layout
    @media (min-width: 40em) and (max-width: 47.9375em) {
      width: var(--width-full);
      min-width: auto;
      padding: var(--space-md) var(--space-lg);
      flex-direction: row;
    }

    // Desktop - optimal button experience
    @media (min-width: 48em) {
      min-width: var(--grid-min-width-md);
      padding: var(--space-lg) var(--space-xl);
      font-size: var(--text-lg);

      &__icon {
        width: var(--icon-size-lg);
        height: var(--icon-size-lg);
      }
    }
  }

  .submit-button {
    @include button-base;
    background: var(--btn-primary-bg);
    border: none;
    color: var(--btn-primary-text);
    padding: var(--space-md) var(--space-xl);
    font-weight: var(--font-semibold);
    font-size: var(--text-lg);
    min-width: var(--grid-min-width-lg);
    text-align: center;
    min-height: var(--touch-target-enhanced);
    box-shadow: var(--shadow-md);

    &:not(:disabled):hover {
      background: var(--btn-primary-hover);
      transform: translateY(var(--animation-y-offset-small)) scale(var(--scale-focus));
      box-shadow: var(--card-shadow-hover);
    }

    &:not(:disabled):active {
      transform: translateY(0) scale(var(--scale-active));
      box-shadow: var(--shadow-sm);
    }

    &:disabled {
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
      transform: none;
    }

    &__icon {
      width: var(--icon-size-lg);
      height: var(--icon-size-lg);
      flex-shrink: 0;
    }

    // Mobile portrait - enhanced touch target with full width
    @media (max-width: 39.9375em) {
      width: var(--width-full);
      min-width: auto;
      min-height: calc(var(--touch-target-enhanced) + var(--space-md));
      padding: var(--space-xl) var(--space-lg);
      font-size: var(--text-base);
      margin-top: var(--space-md);

      &__icon {
        width: var(--icon-size-md);
        height: var(--icon-size-md);
      }
    }

    // Tablet - full width for better usability
    @media (min-width: 40em) and (max-width: 47.9375em) {
      width: var(--width-full);
      min-width: auto;
      padding: var(--space-lg) var(--space-xl);
      font-size: var(--text-lg);
    }

    // Desktop - optimal submit button
    @media (min-width: 48em) {
      min-width: var(--grid-min-width-xl);
      padding: var(--space-xl) var(--space-2xl);
      font-size: var(--text-xl);

      &__icon {
        width: var(--icon-size-xl);
        height: var(--icon-size-xl);
      }
    }
  }

  // Enhanced accessibility support
  @media (prefers-reduced-motion: reduce) {
    .chronology-item,
    .move-button,
    .submit-button,
    .badge {
      transition: var(--transition-instant) !important;

      &:hover {
        transform: none !important;
      }
    }

    .loading-icon {
      animation: none !important;
    }

    .chronology-game {
      animation: none !important;
    }

    @keyframes fadeIn {
      from,
      to {
        opacity: var(--animation-opacity-full);
        transform: translateY(0);
      }
    }
  }

  // Enhanced high contrast mode support
  @media (prefers-contrast: high) {
    .chronology-item {
      border-width: var(--border-width-enhanced);
      background: var(--bg-primary);

      &:focus {
        border-width: calc(var(--border-width-enhanced) + 1px);
        box-shadow: 0 0 0 var(--focus-ring-offset) var(--interactive-primary);
      }

      &--selected {
        background: var(--bg-secondary);
        border-color: var(--text-primary);
      }
    }

    .move-button,
    .submit-button {
      border-width: var(--border-width-enhanced);
      font-weight: var(--font-bold);
    }

    .badge {
      border-width: var(--border-width-thick);
      background: var(--bg-primary);
    }
  }

  // Dark mode optimizations
  @media (prefers-color-scheme: dark) {
    .chronology-container {
      background: var(--bg-secondary);
      border-color: var(--border-secondary);
    }

    .chronology-item {
      background: var(--card-bg);
      border-color: var(--border-primary);
    }
  }

  // Enhanced print styles using global.css variables
  @media print {
    .game-controls,
    .loading-placeholder {
      display: none;
    }

    .chronology-game {
      background: var(--print-bg) !important;
      color: var(--print-text) !important;
      padding: var(--space-md) !important;
      max-width: var(--width-full) !important;
      min-height: auto !important;
      box-shadow: none !important;
    }

    .chronology-container {
      background: var(--print-bg) !important;
      border: var(--print-border) !important;
      box-shadow: none !important;
      page-break-inside: avoid;
    }

    .chronology-item {
      background: var(--print-bg) !important;
      border: var(--print-border) !important;
      box-shadow: none !important;
      page-break-inside: avoid;
      margin-bottom: var(--space-sm) !important;
    }

    .badge {
      background: var(--print-bg) !important;
      border: var(--print-border) !important;
      color: var(--print-text) !important;
      box-shadow: none !important;
    }
  }

  // ======================================
  // ENHANCED RESPONSIVE FEATURES
  // ======================================

  /* Container queries for enhanced responsive behavior */
  .chronology-game {
    container-type: inline-size;

    .game-content {
      container-type: inline-size;

      // Container query for very small containers
      @container (max-width: 20rem) {
        .game-title {
          font-size: var(--text-base);
        }

        .game-description {
          font-size: var(--text-xs);
        }
      }

      // Container query for medium containers
      @container (max-width: 40rem) {
        .chronology-container {
          padding: var(--space-md);
          border-radius: var(--radius-lg);
        }
      }
    }
  }

  /* Enhanced touch and pointer support */
  @media (pointer: coarse) {
    .chronology-item,
    .move-button,
    .submit-button {
      // Enhance touch targets for touch devices
      min-height: calc(var(--touch-target-enhanced) + var(--space-sm));
    }

    .badge {
      padding: var(--space-md) var(--space-lg);
    }
  }

  @media (pointer: fine) {
    .chronology-item:hover {
      box-shadow: var(--card-shadow-hover);
    }

    .badge:hover {
      transform: translateY(var(--animation-y-offset-small))
        scale(var(--animation-scale-hover-subtle));
    }
  }

  /* Landscape orientation support for mobile devices */
  @media (max-width: 47.9375em) and (orientation: landscape) {
    .chronology-game {
      padding: var(--space-sm);
      min-height: 100lvh; // Use logical viewport height for landscape
    }

    .game-header {
      margin-bottom: var(--space-sm);
    }

    .game-info {
      flex-direction: row;
      gap: var(--space-sm);
      margin-top: var(--space-sm);
    }

    .chronology-container {
      min-height: calc(var(--container-intrinsic-height-card) * 0.6);
      padding: var(--space-md);
    }

    .game-controls {
      padding: var(--space-lg);
      gap: var(--space-md);
    }
  }

  /* Forced colors mode support (Windows High Contrast) */
  @media (forced-colors: active) {
    .chronology-item {
      border: var(--border-width-thick) solid ButtonBorder;
      background: ButtonFace;
      forced-color-adjust: none;

      &--selected {
        border-color: Highlight;
        background: HighlightText;
      }
    }

    .move-button,
    .submit-button {
      border: var(--border-width-thick) solid ButtonBorder;
      background: ButtonFace;
      color: ButtonText;
      forced-color-adjust: none;
    }

    .submit-button {
      background: Highlight;
      color: HighlightText;
    }

    .badge {
      border: var(--border-width-thin) solid ButtonBorder;
      background: ButtonFace;
      color: ButtonText;
    }

    .chronology-container {
      border: var(--border-width-thick) solid ButtonBorder;
      background: Canvas;
    }
  }
</style>

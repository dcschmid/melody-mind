---
/**
 * @component ChronologyGamePage
 * @description Moderne Chronologie-Spielseite für das MelodyMind-Projekt
 *
 * Funktionen:
 * - Schwierigkeitsgrade (Easy: 4 Alben, Medium: 5 Alben, Hard: 6 Alben)
 * - Intuitive Buttons zum Verschieben der Elemente
 * - Vollständige Tastatursteuerung
 * - Punkteberechnung basierend auf korrekter Reihenfolge
 * - Lösungsoverlay nach jeder Runde
 * - Endoverlay mit Gesamtergebnis
 * - Modernes, ansprechendes Design mit CSS-Variablen
 * - Datenbank-Speicherung der Spielergebnisse
 */

// 1. Imports
import Layout from "@layouts/Layout.astro";
import EndOverlay from "@components/Overlays/EndOverlay.astro";
import LoadingSpinner from "@components/Game/LoadingSpinner.astro";
import ChronologyFeedbackOverlay from "@components/Overlays/ChronologyFeedbackOverlay.astro";
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { Icon } from "astro-icon/components";
import { requireAuth } from "../../../middleware/auth.js";

// Server-side rendering for cookie-based authentication
export const prerender = false;

/**
 * Generiert statische Pfade für alle unterstützten Sprachen, Kategorien und Schwierigkeitsgrade
 */
export async function getStaticPaths() {
  const supportedLanguages = [
    "de",
    "en",
    "es",
    "fr",
    "it",
    "pt",
    "da",
    "nl",
    "sv",
    "fi",
    "cn",
    "ru",
    "jp",
    "uk",
  ] as const;
  const difficultyLevels = ["easy", "medium", "hard"] as const;
  const paths = [];

  for (const lang of supportedLanguages) {
    let categories;
    try {
      categories = await import(`@json/${lang}_categories.json`);
    } catch {
      categories = await import(`@json/en_categories.json`);
    }

    for (const categoryData of categories.default) {
      for (const difficulty of difficultyLevels) {
        paths.push({
          params: { lang, category: categoryData.slug, difficulty },
          props: { categoryData, lang },
        });
      }
    }
  }

  return paths;
}

// 2. Props und Parameter verarbeitung
interface Props {
  categoryData: { headline: string; slug: string };
  lang: string;
}

const { categoryData } = Astro.props;
const lang = getLangFromUrl(Astro.url) as string;
const t = useTranslations(lang);
const { category, difficulty } = Astro.params;

// Debug logging
console.log("Chronology page - categoryData:", categoryData);
console.log("Chronology page - category:", category);
console.log("Chronology page - difficulty:", difficulty);

// 3. Authentifizierung prüfen
const authResult = await requireAuth(Astro.request);
const user = { id: authResult.user?.id || "guest" };

// 4. Meta-Daten für SEO
const metaDescription = `${t("game.chronology.title")} - ${categoryData?.headline} (${t(`difficulty.${difficulty}`)})`;
---

<Layout
  title={`${t("game.chronology.title")} - ${categoryData?.headline}`}
  description={metaDescription}
  showHeader={false}
  showCoins={false}
>
  <!-- Feedback- und End-Overlays -->
  <ChronologyFeedbackOverlay />
  <EndOverlay
    id="endgame-popup"
    data-score="0"
    data-category={categoryData?.headline || category || ""}
    data-difficulty={difficulty || ""}
    data-mode="chronology"
  />

  <!-- Loading Spinner -->
  <LoadingSpinner />

  <!-- Spielbereich -->
  <main
    id="chronology-container"
    class="chronology-game"
    data-category={category}
    data-difficulty={difficulty}
    data-user-id={user.id}
    data-category-name={categoryData?.headline || category || ""}
    aria-label={t("game.chronology.aria.main")}
  >
    <!-- Game Header -->
    <header class="game-header">
      <!-- Game Info Badges -->
      <div class="game-info" role="banner" aria-label={t("game.chronology.info.aria")}>
        <div class="badge">
          <Icon name="trophy" class="badge__icon" />
          <span class="badge__text" id="score-display">0</span>
        </div>
        <div class="badge">
          <Icon name="target" class="badge__icon" />
          <span class="badge__text">
            <span id="round-display">1</span>/10
          </span>
        </div>
        <div class="badge">
          <Icon name="gauge" class="badge__icon" />
          <span class="badge__text">{t(`difficulty.${difficulty}`)}</span>
        </div>
      </div>
    </header>

    <!-- Game Content -->
    <div class="game-content">
      <h1 class="game-title">{t("game.chronology.sort.albums")}</h1>
      <p class="game-description">{t("game.chronology.instructions")}</p>

      <!-- Chronology Container -->
      <div id="chronology-items-container" class="chronology-container">
        <div class="loading-placeholder">
          <Icon name="loader" class="loading-icon" />
          <p>{t("loading.albums")}</p>
        </div>
      </div>

      <!-- Game Controls -->
      <div class="game-controls">
        <!-- Move Buttons -->
        <div class="move-buttons">
          <button
            id="move-up-btn"
            type="button"
            class="move-button"
            disabled
            aria-label={t("game.move.up.aria")}
          >
            <Icon name="chevron-up" class="move-button__icon" />
            {t("game.move.up")}
          </button>
          <button
            id="move-down-btn"
            type="button"
            class="move-button"
            disabled
            aria-label={t("game.move.down.aria")}
          >
            <Icon name="chevron-down" class="move-button__icon" />
            {t("game.move.down")}
          </button>
        </div>

        <!-- Submit Button -->
        <button
          id="submit-btn"
          type="button"
          class="submit-button"
          disabled
          aria-label={t("game.submit.answer.aria")}
        >
          <Icon name="check" class="submit-button__icon" />
          {t("game.submit.answer")}
        </button>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Import chronology game engine
  import "../../../utils/game/chronologyGameEngine.ts";
</script>

<style lang="scss" is:global>
  /**
   * Chronology Game Styles
   * Modern SCSS implementation with responsive design
   * Uses CSS variables from global.css for consistent theming
   */

  // SCSS Variables and Mixins
  $transition-smooth: all 0.2s ease;
  $border-selected: 2px solid var(--interactive-primary);
  $border-default: 2px solid var(--border-primary);
  $hover-transform: translateY(-2px);
  $shadow-hover: var(--card-shadow-hover);
  $focus-ring: var(--focus-ring);

  // Responsive breakpoints
  $breakpoint-tablet: 768px;
  $breakpoint-mobile: 480px;

  // Mixins for common patterns
  @mixin flex-center($direction: row) {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: $direction;
  }

  @mixin button-base {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    border-radius: var(--radius-lg);
    font-weight: var(--font-medium);
    cursor: pointer;
    transition: $transition-smooth;
    justify-content: center;
    border: none;
    outline: none;

    &:not(:disabled):hover {
      transform: $hover-transform;
      box-shadow: $shadow-hover;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    &:focus-visible {
      outline: 3px solid var(--interactive-primary);
      outline-offset: 2px;
    }
  }

  @mixin focus-styles {
    &:focus {
      outline: none;
      border-color: var(--interactive-primary);
      box-shadow: $focus-ring;
    }

    &:focus-visible {
      outline: 3px solid var(--interactive-primary);
      outline-offset: 2px;
    }
  }

  @mixin responsive($breakpoint) {
    @media (max-width: $breakpoint) {
      @content;
    }
  }

  // Keyframes
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  // Main game container
  .chronology-game {
    min-height: 100vh;
    background: var(--bg-primary);
    color: var(--text-primary);
    padding: var(--space-lg);
    max-width: 1200px;
    margin: 0 auto;
    animation: fadeIn 0.3s ease-out;

    @include responsive($breakpoint-tablet) {
      padding: var(--space-md);
    }

    @include responsive($breakpoint-mobile) {
      padding: var(--space-sm);
    }
  }

  // Game Header Section
  .game-header {
    margin-bottom: var(--space-lg);
    text-align: center;

    @include responsive($breakpoint-mobile) {
      margin-bottom: var(--space-md);
    }
  }

  .game-info {
    @include flex-center;
    gap: var(--space-md);
    margin-top: var(--space-md);
    flex-wrap: wrap;

    @include responsive($breakpoint-tablet) {
      flex-direction: column;
      align-items: center;
      gap: var(--space-sm);
    }
  }

  .badge {
    @include flex-center;
    gap: var(--space-sm);
    background: var(--bg-secondary);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-lg);
    border: 1px solid var(--border-secondary);
    transition: $transition-smooth;
    min-width: 80px;

    &:hover {
      background: var(--bg-tertiary);
      transform: translateY(-1px);
    }

    &__icon {
      width: 16px;
      height: 16px;
      color: var(--interactive-primary);
      flex-shrink: 0;
    }

    &__text {
      font-weight: var(--font-medium);
      font-size: var(--text-sm);
      white-space: nowrap;
    }

    @include responsive($breakpoint-mobile) {
      padding: var(--space-xs) var(--space-sm);
      min-width: 60px;

      &__text {
        font-size: var(--text-xs);
      }
    }
  }

  // Game Content Section
  .game-content {
    max-width: 800px;
    margin: 0 auto;
  }

  .game-title {
    font-size: var(--text-2xl);
    font-weight: var(--font-bold);
    text-align: center;
    margin-bottom: var(--space-sm);
    background: var(--btn-primary-bg);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: var(--leading-tight);

    @include responsive($breakpoint-tablet) {
      font-size: var(--text-xl);
    }

    @include responsive($breakpoint-mobile) {
      font-size: var(--text-lg);
      margin-bottom: var(--space-xs);
    }
  }

  .game-description {
    text-align: center;
    color: var(--text-secondary);
    margin-bottom: var(--space-xl);
    line-height: var(--leading-enhanced);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;

    @include responsive($breakpoint-tablet) {
      margin-bottom: var(--space-lg);
      font-size: var(--text-sm);
    }

    @include responsive($breakpoint-mobile) {
      margin-bottom: var(--space-md);
      font-size: var(--text-xs);
    }
  }

  // Chronology Container
  .chronology-container {
    background: var(--bg-secondary);
    border-radius: var(--radius-xl);
    padding: var(--space-lg);
    margin-bottom: var(--space-lg);
    border: 1px solid var(--border-secondary);
    min-height: 400px;
    position: relative;
    box-shadow: var(--card-shadow);

    @include responsive($breakpoint-tablet) {
      padding: var(--space-md);
      min-height: 350px;
    }

    @include responsive($breakpoint-mobile) {
      padding: var(--space-sm);
      min-height: 300px;
      margin-bottom: var(--space-md);
    }
  }

  .loading-placeholder {
    @include flex-center(column);
    height: 200px;
    color: var(--text-secondary);
    text-align: center;

    p {
      margin-top: var(--space-md);
      font-size: var(--text-sm);
    }

    @include responsive($breakpoint-mobile) {
      height: 150px;

      p {
        font-size: var(--text-xs);
      }
    }
  }

  .loading-icon {
    width: 32px;
    height: 32px;
    margin-bottom: var(--space-md);
    animation: spin 1s linear infinite;
    color: var(--interactive-primary);

    @include responsive($breakpoint-mobile) {
      width: 24px;
      height: 24px;
      margin-bottom: var(--space-sm);
    }
  }

  // Chronology Items
  .chronology-item {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    background: var(--card-bg);
    border: $border-default;
    border-radius: var(--radius-lg);
    padding: var(--space-md);
    margin-bottom: var(--space-md);
    cursor: pointer;
    transition: $transition-smooth;
    position: relative;
    box-shadow: var(--card-shadow);

    &:last-child {
      margin-bottom: 0;
    }

    &:hover {
      border-color: var(--interactive-primary);
      transform: $hover-transform;
      box-shadow: $shadow-hover;
    }

    @include focus-styles;

    &--selected {
      border-color: var(--interactive-primary);
      background: var(--bg-tertiary);
      box-shadow: $shadow-hover;

      .chronology-item__position {
        background: var(--interactive-secondary);
      }
    }

    &__position {
      @include flex-center;
      width: 40px;
      height: 40px;
      background: var(--interactive-primary);
      color: white;
      border-radius: 50%;
      font-weight: var(--font-bold);
      font-size: var(--text-lg);
      flex-shrink: 0;
      transition: $transition-smooth;

      @include responsive($breakpoint-mobile) {
        width: 32px;
        height: 32px;
        font-size: var(--text-base);
      }
    }

    &__content {
      flex: 1;
      min-width: 0;
    }

    &__title {
      font-weight: var(--font-semibold);
      font-size: var(--text-lg);
      margin-bottom: 2px;
      color: var(--text-primary);
      line-height: var(--leading-tight);

      @include responsive($breakpoint-tablet) {
        font-size: var(--text-base);
      }

      @include responsive($breakpoint-mobile) {
        font-size: var(--text-sm);
      }
    }

    &__artist {
      color: var(--text-secondary);
      font-size: var(--text-base);
      line-height: var(--leading-normal);

      @include responsive($breakpoint-tablet) {
        font-size: var(--text-sm);
      }

      @include responsive($breakpoint-mobile) {
        font-size: var(--text-xs);
      }
    }

    @include responsive($breakpoint-tablet) {
      flex-direction: column;
      text-align: center;
      gap: var(--space-sm);
      padding: var(--space-sm);

      &__content {
        order: -1;
      }
    }

    @include responsive($breakpoint-mobile) {
      padding: var(--space-xs);
      gap: var(--space-xs);
    }
  }

  // Game Controls
  .game-controls {
    @include flex-center(column);
    gap: var(--space-md);

    @include responsive($breakpoint-mobile) {
      gap: var(--space-sm);
    }
  }

  .move-buttons {
    display: flex;
    gap: var(--space-md);

    @include responsive($breakpoint-tablet) {
      flex-direction: column;
      width: 100%;
      gap: var(--space-sm);
    }
  }

  .move-button {
    @include button-base;
    background: var(--bg-secondary);
    border: 2px solid var(--border-secondary);
    color: var(--text-primary);
    padding: var(--space-md) var(--space-lg);
    min-width: 120px;

    &:not(:disabled):hover {
      background: var(--interactive-primary);
      color: white;
    }

    &:disabled {
      background: var(--bg-tertiary);
      color: var(--text-tertiary);
    }

    &__icon {
      width: 18px;
      height: 18px;
      flex-shrink: 0;
    }

    @include responsive($breakpoint-tablet) {
      width: 100%;
      min-width: auto;
      padding: var(--space-sm) var(--space-md);
    }

    @include responsive($breakpoint-mobile) {
      padding: var(--space-xs) var(--space-sm);
      font-size: var(--text-sm);

      &__icon {
        width: 16px;
        height: 16px;
      }
    }
  }

  .submit-button {
    @include button-base;
    background: var(--btn-primary-bg);
    border: none;
    color: white;
    padding: var(--space-md) var(--space-xl);
    font-weight: var(--font-semibold);
    font-size: var(--text-lg);
    min-width: 180px;

    &__icon {
      width: 20px;
      height: 20px;
      flex-shrink: 0;
    }

    @include responsive($breakpoint-tablet) {
      width: 100%;
      min-width: auto;
      padding: var(--space-sm) var(--space-lg);
    }

    @include responsive($breakpoint-mobile) {
      padding: var(--space-xs) var(--space-md);
      font-size: var(--text-base);

      &__icon {
        width: 18px;
        height: 18px;
      }
    }
  }

  // Accessibility Enhancements
  @media (prefers-reduced-motion: reduce) {
    .chronology-item,
    .move-button,
    .submit-button,
    .badge {
      transition: none;
    }

    .loading-icon {
      animation: none;
    }
  }

  // High contrast mode support
  @media (prefers-contrast: high) {
    .chronology-item {
      border-width: 3px;

      &:focus {
        border-width: 4px;
        box-shadow: 0 0 0 2px var(--interactive-primary);
      }
    }

    .move-button,
    .submit-button {
      border-width: 3px;
    }
  }

  // Dark mode optimizations
  @media (prefers-color-scheme: dark) {
    .chronology-container {
      background: var(--bg-secondary);
      border-color: var(--border-secondary);
    }

    .chronology-item {
      background: var(--card-bg);
      border-color: var(--border-primary);
    }
  }

  // Print styles
  @media print {
    .game-controls,
    .loading-placeholder {
      display: none;
    }

    .chronology-game {
      background: white;
      color: black;
    }
  }
</style>
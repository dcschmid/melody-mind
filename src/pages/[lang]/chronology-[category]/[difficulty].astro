---
/**
 * @component ChronologyGamePage
 * @description Moderne Chronologie-Spielseite für das MelodyMind-Projekt
 *
 * Funktionen:
 * - Schwierigkeitsgrade (Easy: 4 Alben, Medium: 5 Alben, Hard: 6 Alben)
 * - Intuitive Buttons zum Verschieben der Elemente
 * - Vollständige Tastatursteuerung
 * - Punkteberechnung basierend auf korrekter Reihenfolge
 * - Lösungsoverlay nach jeder Runde
 * - Endoverlay mit Gesamtergebnis
 * - Modernes, ansprechendes Design mit CSS-Variablen
 * - Datenbank-Speicherung der Spielergebnisse
 */

// 1. Imports
import Layout from "@layouts/Layout.astro";
import EndOverlay from "@components/Overlays/EndOverlay.astro";
import ChronologyFeedbackOverlay from "@components/Overlays/ChronologyFeedbackOverlay.astro";
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { Icon } from "astro-icon/components";

import Headline from "@components/Headline.astro";
import Paragraph from "@components/Paragraph.astro";

// Server-side rendering for cookie-based authentication
export const prerender = false;

/**
 * Generiert statische Pfade für alle unterstützten Sprachen, Kategorien und Schwierigkeitsgrade
 */
export async function getStaticPaths() {
  const supportedLanguages = [
    "de",
    "en",
    "es",
    "fr",
    "it",
    "pt",
    "da",
    "nl",
    "sv",
    "fi",
    "cn",
    "ru",
    "jp",
    "uk",
  ] as const;
  const difficultyLevels = ["easy", "medium", "hard"] as const;
  const paths = [];

  for (const lang of supportedLanguages) {
    // Load categories based on language with proper fallback mechanism
    let categories;
    try {
      categories = await import(`@json/${lang}_categories.json`);
    } catch {
      // Fallback to default language if the specific language file doesn't exist
      categories = await import(`@json/en_categories.json`);
    }

    for (const categoryData of categories.default) {
      for (const difficulty of difficultyLevels) {
        paths.push({
          params: { lang, category: categoryData.slug, difficulty },
          props: { categoryData, lang },
        });
      }
    }
  }

  return paths;
}

// 2. Props und Parameter verarbeitung
interface Props {
  categoryData: { headline: string; slug: string };
  lang: string;
}

const { categoryData } = Astro.props;
const lang = getLangFromUrl(Astro.url) as string;
const t = useTranslations(lang);
const { category, difficulty } = Astro.params;

// 3. Authentifizierung prüfen
// Check if Astro.request is available (for SSR compatibility)
let authResult: { authenticated: boolean; user?: { id: string; email: string } } = {
  authenticated: false,
  user: undefined,
};

const guestId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
authResult = {
  authenticated: true,
  user: { id: guestId, email: "guest@melodymind.app" },
};
const user = { id: authResult.user?.id || "guest" };

// 4. Meta-Daten für SEO
const metaDescription = `${t("game.chronology.title")} - ${categoryData?.headline} (${t(`difficulty.${difficulty}`)})`;
---

<Layout
  title={`${t("game.chronology.title")} - ${categoryData?.headline}`}
  description={metaDescription}
  showHeader={false}
  showCoins={false}
>
  <!-- Feedback- und End-Overlays -->
  <ChronologyFeedbackOverlay />
  <EndOverlay
    id="endgame-popup"
    data-score="0"
    data-category={category || ""}
    data-difficulty={difficulty || ""}
    data-mode="chronology"
  />

  <!-- Spielbereich -->
  <main
    id="chronology-container"
    class="mx-auto min-h-screen max-w-7xl bg-slate-900 p-4 text-white"
    data-category={category}
    data-difficulty={difficulty}
    data-user-id={user.id}
    data-category-name={categoryData?.headline || category || ""}
    aria-label={t("game.chronology.aria.main")}
  >
    <!-- Game Header -->
    <header class="mb-6 text-center">
      <!-- Game Info Badges -->
      <div
        class="mt-3 flex flex-wrap items-center justify-center gap-3"
        role="banner"
        aria-label={t("game.chronology.info.aria")}
      >
        <div
          class="flex min-w-24 items-center justify-center gap-3 rounded-lg border border-slate-600 bg-slate-700 px-3 py-2 transition-all duration-200"
        >
          <Icon name="trophy" class="h-5 w-5 flex-shrink-0 text-blue-500" />
          <span class="min-w-16 text-base font-medium whitespace-nowrap" id="score-display">0</span>
        </div>
        <div
          class="flex min-w-24 items-center justify-center gap-3 rounded-lg border border-slate-600 bg-slate-700 px-3 py-2 transition-all duration-200"
        >
          <Icon name="target" class="h-5 w-5 flex-shrink-0 text-blue-500" />
          <span class="min-w-16 text-base font-medium whitespace-nowrap">
            <span id="round-display">1</span>/10
          </span>
        </div>
        <div
          class="flex min-w-24 items-center justify-center gap-3 rounded-lg border border-slate-600 bg-slate-700 px-3 py-2 transition-all duration-200"
        >
          <Icon name="gauge" class="h-5 w-5 flex-shrink-0 text-blue-500" />
          <span class="min-w-16 text-base font-medium whitespace-nowrap"
            >{t(`difficulty.${difficulty}`)}</span
          >
        </div>
      </div>
    </header>

    <!-- Game Content -->
    <div class="mx-auto w-full max-w-4xl">
      <Headline
        level="h1"
        textSize="xl"
        textAlign="center"
        className="mb-6 text-center text-3xl font-bold text-white"
        >{t("game.chronology.sort.albums")}</Headline
      >
      <Paragraph textSize="lg" textAlign="center" className="mb-8 text-center text-lg text-gray-300"
        >{t("game.chronology.instructions")}</Paragraph
      >

      <!-- Chronology Container -->
      <div
        id="chronology-items-container"
        class="relative mb-6 min-h-96 rounded-2xl border border-slate-600/30 bg-slate-800/50 p-6 shadow-xl backdrop-blur-sm"
      >
        <div class="flex h-80 flex-col items-center justify-center text-center text-gray-400">
          <div
            class="mb-4 h-12 w-12 animate-spin rounded-full border-4 border-blue-500 border-t-transparent"
          >
          </div>
          <Paragraph className="text-gray-400">{t("loading.albums")}</Paragraph>
        </div>
      </div>

      <!-- Game Controls -->
      <div
        class="mx-auto flex w-full max-w-2xl flex-col items-center justify-center gap-8 rounded-3xl border border-slate-600/50 bg-gradient-to-br from-slate-800/80 to-slate-900/80 p-8 shadow-2xl backdrop-blur-md"
      >
        <!-- Move Buttons -->
        <div class="flex w-full items-center justify-center gap-4">
          <button
            id="move-up-btn"
            type="button"
            class="group flex min-h-14 min-w-36 cursor-pointer items-center justify-center gap-3 rounded-xl border-2 border-slate-600 bg-gradient-to-r from-slate-700 to-slate-800 px-6 py-4 text-center text-base font-semibold text-white transition-all duration-300 hover:-translate-y-1 hover:scale-105 hover:border-blue-500 hover:from-blue-600 hover:to-blue-700 hover:text-white hover:shadow-xl focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-slate-900 focus:outline-none disabled:cursor-not-allowed disabled:from-slate-800 disabled:to-slate-900 disabled:text-gray-500 disabled:opacity-50 disabled:hover:transform-none disabled:hover:shadow-none"
            disabled
            aria-label={t("game.move.up.aria")}
          >
            <Icon
              name="chevron-up"
              class="h-6 w-6 flex-shrink-0 transition-transform duration-200 group-hover:scale-110"
            />
            {t("game.move.up")}
          </button>
          <button
            id="move-down-btn"
            type="button"
            class="group flex min-h-14 min-w-36 cursor-pointer items-center justify-center gap-3 rounded-xl border-2 border-slate-600 bg-gradient-to-r from-slate-700 to-slate-800 px-6 py-4 text-center text-base font-semibold text-white transition-all duration-300 hover:-translate-y-1 hover:scale-105 hover:border-blue-500 hover:from-blue-600 hover:to-blue-700 hover:text-white hover:shadow-xl focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-slate-900 focus:outline-none disabled:cursor-not-allowed disabled:from-slate-800 disabled:to-slate-900 disabled:text-gray-500 disabled:opacity-50 disabled:hover:transform-none disabled:hover:shadow-none"
            disabled
            aria-label={t("game.move.down.aria")}
          >
            <Icon
              name="chevron-down"
              class="h-6 w-6 flex-shrink-0 transition-transform duration-200 group-hover:scale-110"
            />
            {t("game.move.down")}
          </button>
        </div>

        <!-- Submit Button -->
        <button
          id="submit-btn"
          type="button"
          class="group flex min-h-16 min-w-48 cursor-pointer items-center justify-center gap-4 rounded-2xl border-none bg-gradient-to-r from-blue-600 via-blue-700 to-blue-800 px-8 py-5 text-center text-lg font-bold text-white shadow-2xl transition-all duration-300 hover:-translate-y-2 hover:scale-105 hover:from-blue-700 hover:via-blue-800 hover:to-blue-900 hover:shadow-blue-500/25 focus:ring-4 focus:ring-blue-500/50 focus:ring-offset-2 focus:ring-offset-slate-900 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:transform-none disabled:hover:shadow-none"
          disabled
          aria-label={t("game.submit.answer.aria")}
        >
          <Icon
            name="check"
            class="h-7 w-7 flex-shrink-0 transition-transform duration-200 group-hover:scale-110"
          />
          {t("game.submit.answer")}
        </button>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Import chronology game engine
  import "../../../utils/game/chronologyGameEngine.ts";
</script>

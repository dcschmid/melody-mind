---
import { Picture } from "astro:assets";
import { Icon } from "astro-icon/components";

import Layout from "../../../layouts/Layout.astro";
import Button from "../../../components/Shared/Button.astro";
import TriviaFinishOverlay from "../../../components/Trivia/TriviaFinishOverlay.astro";
import categories from "../../../json/categories.json";

const { category, round } = Astro.params;

const currentCategory = categories.find((cat) => cat.slug === category);
const currentRound = currentCategory?.rounds.find((rnd) => rnd.slug === round);

const centerButtonText = round === "round-one" || round === "round-two" ? "nächste Runde" : "Spiel beenden";
const centerButtonUrl =
  round === "round-one"
    ? `/${currentCategory?.slug}/round-two`
    : round === "round-two"
      ? `/${currentCategory?.slug}/round-three`
      : `#`;

const centerButtonID = round === "round-three" ? "openOverlay" : "";
---

<Layout title=`${currentCategory?.name} - ${currentRound?.headline} - Trivia Lösung` showUserLink={false}>
  <div slot="left-headercol"></div>

  <TriviaFinishOverlay url={currentCategory?.videoPage} />

  <div class="solution" data-category={category} data-round={round?.replace("#", "")}>
    <div class="cover">
      <Picture
        src={currentRound?.triviaCoverUrl as string}
        width={240}
        height={240}
        formats={["avif", "webp"]}
        alt=""
      />
      <Icon class="shareIcon" name="share" width={48} height={48} />
    </div>
    <div class="headline">{currentRound?.triviaHeadline}</div>
    <div class="text">{currentRound?.triviaText}</div>
  </div>

  <div class="centerButton">
    <Button id={centerButtonID} buttonText={centerButtonText} url={centerButtonUrl} />
  </div>
</Layout>

<style>
  .solution {
    display: flex;
    padding: var(--spacing-spacing-s) var(--spacing-spacing-s) var(--spacing-spacing-md) var(--spacing-spacing-s);
    flex-direction: column;
    gap: var(--spacing-spacing-md);
    border-radius: var(--radius-radius-rounded);
    background: var(--colour-BG-secondary);
  }

  .cover {
    margin: 0 auto;
    position: relative;
  }

  .shareIcon {
    position: absolute;
    bottom: -15px;
    right: -25px;
    color: var(--colour-text-primary);
  }

  .headline {
    color: var(--colour-text-primary);
    font-size: 18px;
    font-style: normal;
    font-weight: 700;
    line-height: 120%;
  }

  .text {
    color: var(--colour-text-primary);
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
  }

  .centerButton {
    display: flex;
    justify-content: center;
    margin-top: var(--spacing-spacing-xl);
  }
</style>
<script>
  import JSConfetti from "js-confetti";
  import { clearLocalStorageAfterLastRound } from "../../../utils/clearLocalStorageAfterLastRound";

  const jsConfetti = new JSConfetti();
  const overlayFinish = document.getElementById("overlayFinish") as HTMLElement;
  const openOverlay = document.getElementById("openOverlay") as HTMLElement;
  const currentPoints = parseInt(localStorage.getItem("currentPoints") || "0", 10);
  const userPoints = parseInt(localStorage.getItem("userPoints") || "0", 10);
  const calcfinalScore = currentPoints * 2;
  localStorage.setItem("userPoints", String(userPoints + calcfinalScore));

  const triviaElement = document.querySelector(".solution") as HTMLElement;

  const categoryValue = triviaElement.getAttribute("data-category"); // Get the category value from data attribute
  const roundValue = triviaElement.getAttribute("data-round"); // Get the round value from data attribute

  window.addEventListener("load", function (_event: Event): void {
    // Find the element inside overlayFinish to display the currentPoints
    const pointsElement = overlayFinish.querySelector(".points");
    if (pointsElement) {
      pointsElement.textContent = `+ ${currentPoints} Pt`;
    }

    const userPointsElement = overlayFinish.querySelector(".totalPoints");
    if (userPointsElement) {
      userPointsElement.textContent = `${calcfinalScore} Pt`;
    }

    openOverlay.addEventListener("click", function (_event: Event): void {
      overlayFinish.style.visibility = "visible";
      jsConfetti.addConfetti().then(() => jsConfetti.clearCanvas());

      if (roundValue === "round-three") clearLocalStorageAfterLastRound(categoryValue as string);
    });
  });
</script>

---
import { Picture } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Button from "@components/Shared/Button.astro";
import IntroText from "@components/Shared/IntroText.astro";
import categories from "@json/categories.json";

interface Category {
  slug: string;
  headline: string;
  introSubline: string;
  imageUrl: string;
  text: string;
}

/**
 * Get the user object from the Astro context
 */
const user = Astro.locals.user;

/**
 * If the user is not logged in, redirect them to the login page.
 */
if (!user) {
  /**
   * Redirect the user to the login page.
   */
  return Astro.redirect("/");
}

/**
 * Get the category parameter from the Astro context.
 * The category parameter is required and determines which category
 * the user wants to play.
 */
const { category } = Astro.params;

/**
 * Find the category object in the categories array that matches the category parameter.
 * If the category is not found, redirect the user to a 404 page.
 */
const currentCategory = categories.find(
  (cat: Category) => cat.slug === category,
);

if (!currentCategory) {
  /**
   * Redirect the user to a 404 page if the category is not found.
   */
  return Astro.redirect("/404");
}
---

<Layout title={`${currentCategory?.headline} Start`}>
  <IntroText
    headline={`${currentCategory?.headline} gewählt!`}
    subline={currentCategory?.introSubline}
  />

  <article
    class="category"
    data-category={currentCategory?.slug}
    aria-labelledby="difficulty-heading"
  >
    <div
      class="cover"
      role="img"
      aria-label={`${currentCategory?.headline} Cover-Bild`}
    >
      <Picture
        class="coverImage"
        src={currentCategory?.imageUrl}
        width={280}
        height={280}
        formats={["avif", "webp"]}
        alt=""
        loading="eager"
      />
    </div>

    <p class="text">
      {currentCategory?.text}
    </p>

    <div class="difficultySection">
      <h2 id="difficulty-heading" class="buttonHeadline">
        Wähle deinen Schwierigkeitsgrad
      </h2>
      <div class="buttonGroup" role="group" aria-label="Schwierigkeitsgrade">
        <Button
          buttonText="Leicht"
          url={`${currentCategory?.slug}/easy`}
          aria-label="Starte Spiel im leichten Modus"
        />
        <Button
          buttonText="Mittel"
          url={`${currentCategory?.slug}/medium`}
          aria-label="Starte Spiel im mittleren Modus"
        />
        <Button
          buttonText="Schwer"
          url={`${currentCategory?.slug}/hard`}
          aria-label="Starte Spiel im schweren Modus"
        />
      </div>
    </div>
  </article>
</Layout>

<style lang="scss">
  .categoryPage {
    max-width: var(--max-line-length);
    margin: 0 auto;
    padding: var(--padding-medium);
  }

  .category {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--padding-medium);
    width: 100%;
    padding: var(--padding-large);
    background-color: var(--secondary-color);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);

    @media (prefers-reduced-motion: no-preference) {
      transition: transform var(--transition-speed) ease-in-out;
    }
  }

  .cover {
    margin: 0 auto;
    position: relative;
  }

  .coverImage {
    width: 100%;
    height: auto;
    max-width: 280px;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);

    @media (prefers-reduced-motion: no-preference) {
      transition:
        transform var(--transition-speed) ease-in-out,
        box-shadow var(--transition-speed) ease-in-out;
    }

    &:hover {
      transform: scale(1.05);
      box-shadow: 0 12px 24px rgb(0 0 0 / 30%);
    }
  }

  .text {
    max-width: 700px;
    margin: 0 auto;
    font-family: var(--font-family);
    font-size: var(--body-font-size);
    line-height: var(--line-height-body);
    letter-spacing: var(--spacing-text);
    text-align: center;
    color: var(--text-color);
    hyphens: auto;
  }

  .difficultySection {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--padding-medium);
    width: 100%;
  }

  .buttonHeadline {
    font-family: var(--font-family);
    font-size: var(--header-font-size);
    font-weight: 700;
    line-height: var(--line-height-body);
    text-align: center;
    color: var(--text-color);
  }

  .buttonGroup {
    display: flex;
    gap: var(--padding-medium);
    justify-content: center;
    flex-wrap: wrap;

    // Verbesserte Touch-Targets
    padding: calc(var(--padding-small) / 2);

    @media (max-width: 480px) {
      flex-direction: column;
      width: 100%;
      max-width: 300px;
    }
  }

  // Responsive Anpassungen
  @media (max-width: 768px) {
    .category {
      padding: var(--padding-medium);
    }

    .coverImage {
      max-width: 200px;
    }
  }

  @media (max-width: 480px) {
    .coverImage {
      max-width: 150px;
    }

    .buttonHeadline {
      font-size: calc(var(--header-font-size) * 0.8);
    }
  }

  // High Contrast Mode Anpassungen
  @media (forced-colors: active) {
    .category {
      border: 2px solid CanvasText;
    }

    .buttonGroup button {
      border: 2px solid ButtonText;
    }
  }
</style>

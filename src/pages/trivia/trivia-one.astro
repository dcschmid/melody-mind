---
import Layout from "../../layouts/Layout.astro";
import { For } from "@astropub/flow";
import TriviaItem from "../../components/Trivia/TriviaItem.astro";
import TriviaStartOverlay from "../../components/Trivia/TriviaStartOverlay.astro";
import TimeupsOverlay from "../../components/Overlays/TimeupsOverlay.astro";
import TriviaLostOverlay from "../../components/Trivia/TriviaLostOverlay.astro";
import { triviaOneData } from "../../data/triviaOneData";
import TriviaWonOverlay from "../../components/Trivia/TriviaWonOverlay.astro";
import IntroText from "../../components/Shared/IntroText.astro";
import Timer from "../../components/Round/Timer.astro";
import TriviaWonLPOverlay from "../../components/Trivia/TriviaWonLPOverlay.astro";
import { shuffleArray } from "../../utils/share/shuffleArray";

const randomizedTriviaData = shuffleArray(triviaOneData);
---

<Layout title="Trivia Runde 1" showUserLink={false}>
  <div slot="left-headercol"></div>

  <TriviaStartOverlay question="Welches Album wurde vom Rolling Stone zum siebtbesten Album aller Zeiten gekürt?" />

  <TimeupsOverlay url="/trivia/trivia-one-solution" />

  <TriviaLostOverlay url="/trivia/trivia-one-solution" />

  <TriviaWonOverlay url="/trivia/trivia-one-solution" />

  <TriviaWonLPOverlay url="/trivia/trivia-one-solution" />

  <IntroText
    headline="Runde 1 / 3 – Trivia Frage"
    subline="Welches Album wurde vom Rolling Stone als siebtbestes aller Zeiten gewählt?"
    whiteText=""
    isSmallHeadline={true}
    isWhiteSubline={true}
  />

  <div class="trivia">
    <For of={randomizedTriviaData}>
      {
        (item: any) => (
          <div class={item.type}>
            <TriviaItem band={item.band} album={item.album} image={item.coverSrc} />
          </div>
        )
      }
    </For>
  </div>

  <Timer minutes="00" seconds="15" showFinishButton={false} />
</Layout>

<style>
  .trivia {
    display: flex;
    flex-wrap: wrap;
    padding: var(--spacing-1) var(--spacing-spacing-xl) var(--spacing-15) var(--spacing-spacing-xl);
    align-items: center;
    justify-content: center;
    gap: var(--spacing-spacing-xl);
  }
</style>

<script>
  // Import functions from the utils directory
  import { handleWonClick } from "../../utils/trivia/handleWonClick";
  import { initLostOverlay } from "../../utils/trivia/initLostOverlay";
  import { startTimer } from "../../utils/trivia/startTimer";

  // Get DOM elements
  const overlayTimeUp = document.getElementById("timupsOverlay") as HTMLElement;
  const overlayStart = document.getElementById("overlayStart") as HTMLElement;
  const overlayLost = document.getElementById("overlayLost") as HTMLElement;
  const overlayWon = document.getElementById("overlayWon") as HTMLElement;
  const gameButton = document.getElementById("gameButton") as HTMLElement;

  // Set the initial time remaining and timer interval
  let timeRemaining = 15;
  let timerInterval: number | null = null;

  /**
   * Add an event listener to the window load event
   * This function is called when the page has finished loading
   * It initializes the trivia game and sets the initial state of the overlays
   */
  window.addEventListener("load", function (_event: Event): void {
    // Hide the timer overlay and show the start overlay
    overlayTimeUp.style.visibility = "hidden";
    overlayLost!.style.visibility = "hidden";
    overlayWon!.style.visibility = "hidden";
    overlayStart.style.visibility = "visible";

    // Add a click event listener to the game button
    gameButton.addEventListener("click", () => startTimer(timerInterval!, timeRemaining, overlayStart, overlayTimeUp));

    // Add a click event listener to the "won" button
    // When the "won" button is clicked, call the handleWonClick function with the timer interval and the current points
    document
      .querySelector(".trivia .won")!
      .addEventListener("click", () =>
        handleWonClick(timerInterval, "PointsRound1", "allCorrectRound1", "triviaRound1Won")
      );

    // Initialize the lost overlay
    initLostOverlay(timerInterval, "triviaRound1Won");
  });
</script>

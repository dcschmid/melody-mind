---
import { Icon } from "astro-icon/components";
import { For } from "@astropub/flow";

import Layout from "../../layouts/Layout.astro";
import TriviaItem from "../../components/TriviaItem.astro";
import Button from "../../components/Shared/Button.astro";

function shuffleArray(array: any) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

const triviaData = [
  {
    band: "The B-52's",
    album: "Cosmic Thing",
    coverSrc: "/bandcover/b52.jpg",
    type: "won",
  },
  {
    band: "Coldplay",
    album: "Ghost Stories",
    coverSrc: "/bandcover/coldplay.jpg",
    type: "lost",
  },
  {
    band: "Blondie",
    album: "Parallel Lines",
    coverSrc: "/bandcover/blondie.jpg",
    type: "lost",
  },
  {
    band: "Kim Carnes",
    album: "Mistaken Identity",
    coverSrc: "/bandcover/kimCarnes.jpg",
    type: "lost",
  },
];

const randomizedTriviaData = shuffleArray(triviaData);
---

<Layout title="Trivia Runde 2" showUserLink={false}>
  <div slot="left-headercol"></div>

  <div id="overlayStart" class="overlay">
    <div class="overlayStart-content">
      <Icon name="star-golden" width={80} height={80} />
      <div class="headline">Trivia Frage</div>
      <div class="subline">verdoppeln Sie Ihren Punktestand!</div>
      <div class="question">
        Das Design Studio welchen Plattencovers hat außerdem auch das Logo des Musiksenders MTV gestaltet?
      </div>
      <div class="centerButton">
        <Button id="gameButton" buttonText="weiter" url="#" />
      </div>
    </div>
  </div>

  <div id="overlayTimeUp" class="overlay">
    <div class="overlayTimeUp-content">
      <Icon name="clock" width={200} height={200} />
      <div class="headline">00:00</div>
      <div class="subline">Zeit ist abgelaufen!</div>
      <div class="centerButton">
        <Button buttonText="weiter" url="/trivia/trivia-two-solution" />
      </div>
    </div>
  </div>

  <div id="overlayLost" class="overlay">
    <div class="overlayLost-content">
      <Icon name="lost" width={80} height={80} />
      <div class="headline">Leider falsch</div>
      <div class="subline">Punktestand bleibt</div>
      <div class="point"></div>
      <div class="centerButton">
        <Button buttonText="Auflösung" url="/trivia/trivia-two-solution" />
      </div>
    </div>
  </div>

  <div id="overlayWon" class="overlay">
    <div class="overlayWon-content">
      <Icon name="golden-coins" width={80} height={80} />
      <div class="headline">Glückwunsch!</div>
      <div class="subline">Punktestand verdoppelt!</div>
      <div class="point"></div>
      <div class="centerButton">
        <Button buttonText="Auflösung" url="/trivia/trivia-two-solution" />
      </div>
    </div>
  </div>

  <div class="introText">
    <div class="headline">Runde 2 / 3 – Trivia Frage</div>
    <div class="subline">
      Das Design Studio welchen Plattencovers hat außerdem auch das Logo des Musiksenders MTV gestaltet?
    </div>
  </div>

  <div class="trivia">
    <For of={randomizedTriviaData}>
      {
        (item: any) => (
          <div class={item.type}>
            <TriviaItem band={item.band} album={item.album} image={item.coverSrc} />
          </div>
        )
      }
    </For>
  </div>

  <div class="timer">
    <Icon name="clock" width={48} height={48} />
    <span id="minutes">00</span>:<span id="seconds">10</span>
  </div>
</Layout>

<style>
  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    visibility: hidden;
  }

  .overlayStart-content,
  .overlayTimeUp-content,
  .overlayLost-content,
  .overlayWon-content {
    display: flex;
    width: 366px;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-3);
  }

  .headline {
    color: var(--colour-text-primary);
    font-style: normal;
    font-weight: 900;
    line-height: 120%;
  }

  .subline {
    color: var(--colour-text-secondary);
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
    text-align: center;
  }

  .point {
    color: var(--colour-text-primary);
    font-size: 40px;
    font-style: normal;
    font-weight: 900;
    line-height: normal;
    letter-spacing: 2px;
  }

  .centerButton {
    display: flex;
    justify-content: center;
    margin-top: var(--spacing-spacing-md);
  }

  .overlayStart-content .headline,
  .overlayLost-content .headline,
  .overlayWon-content .headline {
    font-size: 48px;
  }

  .overlayStart-content .subline,
  .overlayLost-content .subline,
  .overlayWon-content .subline {
    font-size: 14px;
  }

  .overlayStart-content .question {
    color: var(--colour-text-primary);
    font-size: 24px;
    font-weight: 400;
    line-height: 130%;
    text-align: center;
  }

  .overlayTimeUp-content .headline {
    font-size: 24px;
    letter-spacing: 0.36px;
  }

  .overlayTimeUp-content .subline {
    font-size: 16px;
    justify-content: center;
    display: inline-flex;
  }

  .introText {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-2);
    margin-bottom: var(--spacing-spacing-md);
  }

  .introText .headline {
    color: var(--colour-text-secondary);
    font-size: 14px;
    font-weight: 700;
  }

  .introText .subline {
    width: 366px;
    color: var(--colour-text-primary);
    font-size: 16px;
  }

  .centerText {
    color: var(--colour-text-secondary);
    text-align: center;
    font-size: 24px;
    font-style: normal;
    font-weight: 400;
    line-height: 130%;
  }

  .trivia {
    display: flex;
    flex-wrap: wrap;
    padding: var(--spacing-1) var(--spacing-spacing-xl) var(--spacing-15) var(--spacing-spacing-xl);
    align-items: center;
    justify-content: center;
    gap: var(--spacing-spacing-xl);
  }

  .timer {
    padding: 24px 0 23px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 40px;
    font-weight: 900;
    letter-spacing: 2px;
    color: var(--colour-text-primary);
  }
</style>

<script>
  import JSConfetti from "js-confetti";
  import { calculateTheCurrentPoints } from "../../utils/calculateTheCurrentPoints";

  const jsConfetti = new JSConfetti();

  const overlayTimeUp = document.getElementById("overlayTimeUp") as HTMLElement;
  const overlayStart = document.getElementById("overlayStart") as HTMLElement;
  const overlayLost = document.getElementById("overlayLost") as HTMLElement;
  const overlayWon = document.getElementById("overlayWon") as HTMLElement;
  const gameButton = document.getElementById("gameButton") as HTMLElement;
  const minutesElement = document.getElementById("minutes") as HTMLElement;
  const secondsElement = document.getElementById("seconds") as HTMLElement;

  let timeRemaining = 10;
  let timerInterval: number | null = null;

  /**
   * Updates the timer display and checks if the timer has reached zero.
   * If the timer has reached zero, it hides the timer overlay.
   */
  function updateTime() {
    // Convert the time remaining to a string, padded with leading zeros to 4 digits
    const timeStr = `${timeRemaining}`.padStart(4, "0");

    // Extract the minutes and seconds from the time string
    const minutes = timeStr.slice(0, 2);
    const seconds = timeStr.slice(2);

    // Update the display with the formatted minutes and seconds
    minutesElement.textContent = minutes;
    secondsElement.textContent = seconds;

    // If the timer has reached zero, hide the timer overlay
    if (--timeRemaining < 0) {
      clearInterval(timerInterval!);
      overlayTimeUp.style.visibility = "visible";
    }
  }

  /**
   * Starts the timer by setting an interval to call the updateTime function every second.
   * Hides the overlayStart element.
   */
  function startTimer() {
    // Set an interval to call the updateTime function every second
    timerInterval = window.setInterval(updateTime, 1000);

    // Hide the overlayStart element
    overlayStart.style.visibility = "hidden";
  }

  /**
   * Initializes the lost overlay by adding a click event listener to each element with the class 'lost'.
   * When a lost item is clicked, it shows the overlayLost overlay, clears the timer interval,
   * and updates the points displayed in the overlayLost.
   */
  function initLostOverlay() {
    // Select all elements with the class 'lost'
    const lostItems = document.querySelectorAll(".lost");

    lostItems.forEach((item) => {
      /**
       * Event listener for when a lost item is clicked.
       * Shows the overlayLost overlay, clears the timer interval,
       * and updates the points displayed in the overlayLost.
       *
       * @param {Event} event - The click event
       */
      item.addEventListener("click", (_event) => {
        calculateTheCurrentPoints();

        // Show the overlayLost overlay
        overlayLost!.style.visibility = "visible";

        // Clear the timer interval
        clearInterval(timerInterval!);

        // Update the points in the overlayLost
        const pointDiv = overlayLost!.querySelector(".point");

        // Get the current points from localStorage, defaulting to 0 if not set
        const currentPoints = localStorage.getItem("currentPoints") || "0";

        // Set the text content of the pointDiv to the current points
        pointDiv!.textContent = `${currentPoints} Pt`;
      });
    });
  }

  /**
   * Handles the click event when the "Won" button is clicked.
   * Opens the overlayWon overlay, retrieves the current points from localStorage,
   * displays the current points in the div with the className 'points' in the overlay,
   * and doubles the current points and updates localStorage.
   */
  function handleWonClick() {
    clearInterval(timerInterval!);
    const pointsRound2 = parseInt(localStorage.getItem("PointsRound2") || "0", 10);

    // Open the overlayWon overlay
    overlayTimeUp.style.visibility = "hidden";

    // Open the overlayWon overlay
    overlayWon!.style.visibility = "visible";
    jsConfetti.addConfetti().then(() => jsConfetti.clearCanvas());

    // Show the currentPoints in the div with the className 'points' in the overlay
    const pointsDiv = overlayWon!.querySelector(".point");
    pointsDiv!.textContent = `+ ${pointsRound2} Pt`;

    calculateTheCurrentPoints();
  }

  window.addEventListener("load", function (_event: Event): void {
    overlayTimeUp.style.visibility = "hidden";
    overlayLost!.style.visibility = "hidden";
    overlayWon!.style.visibility = "hidden";
    overlayStart.style.visibility = "visible";

    gameButton.addEventListener("click", startTimer);

    document.querySelector(".trivia .won")!.addEventListener("click", handleWonClick);

    initLostOverlay();
  });
</script>

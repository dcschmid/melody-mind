---
/**
 * @component Layout
 * @description The main layout component used throughout the MelodyMind application
 * This layout implements WCAG 2.2 AAA accessibility standards
 * including reduced motion support, proper document structure, optimized resource loading,
 * and mobile-friendly viewport configurations.
 *
 * @param {string} title - Page title displayed in browser tab and meta tags
 * @param {string} [description] - Page meta description for SEO and social sharing
 * @param {string} [keywords] - Page meta keywords for SEO optimization
 * @param {string} [image] - Social sharing image URL for Open Graph
 * @param {"website"|"article"|"music"|"game"} [type="website"] - Page content type for structured data
 * @param {Date} [publishDate] - Content publish date for SEO and structured data
 * @param {Date} [modifiedDate] - Content modification date for SEO optimization
 * @param {boolean} [showHeader=true] - Whether to display the header navigation component
 * @param {boolean} [showHeaderIcons=true] - Whether to show icons in the header navigation
 * @param {boolean} [showCoins=false] - Whether to display the coin counter overlay
 * @param {Object} [ogMusic] - Music-specific OpenGraph meta tags for enhanced social sharing
 * @param {string} [ogMusic.creator] - Music creator/artist name
 * @param {string} [ogMusic.album] - Album name for music content
 * @param {string} [ogMusic.musician] - Musician name for music content
 *
 * @example Basic usage
 * ```astro
 * <Layout title="Home Page" description="Welcome to MelodyMind">
 *   <h1>Welcome to our music quiz game!</h1>
 * </Layout>
 * ```
 *
 * @example Game page with coins
 * ```astro
 * <Layout
 *   title="Music Quiz - Rock Category"
 *   description="Test your rock music knowledge"
 *   type="game"
 *   showCoins={true}
 *   showHeader={false}
 * >
 *   <GameInterface />
 * </Layout>
 * ```
 *
 * @example Music content page
 * ```astro
 * <Layout
 *   title="Album Review"
 *   type="music"
 *   ogMusic={{ creator: "The Beatles", album: "Abbey Road" }}
 *   publishDate={new Date("2024-01-15")}
 * >
 *   <ArticleContent />
 * </Layout>
 * ```
 */
import { When } from "@astropub/flow";
import { Head } from "astro-capo";

// Primary accessible font: Atkinson Hyperlegible will be loaded from local files via @font-face
// Removed @fontsource imports to avoid duplicate network/font loading â€” local files are served from /public/fonts

import Navigation from "@components/Header/Navigation.astro";
import SEO from "@components/SEO.astro";
import SkipLink from "@components/Shared/SkipLink.astro";
import Footer from "@components/Footer.astro";

// 4. Utility imports
import { getLangFromUrl } from "@utils/i18n";

import "../styles/global.css";
interface Props {
  /**
   * The page title displayed in browser tab and meta tags
   * @type {string}
   * @required
   * @example "MelodyMind - Music Quiz Game"
   */
  title: string;

  /**
   * Page meta description for SEO and social sharing optimization
   * @type {string}
   * @optional
   * @maxLength 160 characters for optimal SEO performance
   * @example "Test your music knowledge with our engaging trivia game featuring multiple genres and difficulty levels."
   */
  description?: string;

  /**
   * Page meta keywords for SEO optimization (legacy support)
   * @type {string}
   * @optional
   * @example "music quiz, trivia game, rock music, pop music"
   */
  keywords?: string;

  /**
   * Social sharing image URL for Open Graph and Twitter Cards
   * @type {string}
   * @optional
   * @format Absolute or relative URL path
   * @requirements 1200x630px recommended for optimal social sharing
   * @example "/og-images/quiz-preview.jpg"
   */
  image?: string;

  /**
   * Page content type for structured data and Open Graph metadata
   * @type {"website" | "article" | "music" | "game"}
   * @optional
   * @default "website"
   * @example "game" for quiz pages, "music" for artist content
   */
  type?: "website" | "article" | "music" | "game";

  /**
   * Content publish date for SEO and structured data markup
   * @type {Date}
   * @optional
   * @format JavaScript Date object
   * @example new Date("2024-01-15T10:00:00Z")
   */
  publishDate?: Date;

  /**
   * Content modification date for SEO optimization and freshness signals
   * @type {Date}
   * @optional
   * @format JavaScript Date object
   * @example new Date("2024-01-20T15:30:00Z")
   */
  modifiedDate?: Date;

  /**
   * Whether to display the header navigation component
   * @type {boolean}
   * @optional
   * @default true
   * @accessibility Header provides main navigation landmark for screen readers
   * @example false for full-screen game interfaces
   */
  showHeader?: boolean;

  /**
   * Whether to show icons in the header navigation
   * @type {boolean}
   * @optional
   * @default true
   * @accessibility Icons enhance visual navigation when paired with text
   * @performance Icons are optimized SVG sprites for fast loading
   */
  showHeaderIcons?: boolean;

  /**
   * Whether to display the coin counter overlay component
   * @type {boolean}
   * @optional
   * @default false
   * @useCase Used in game contexts where coin tracking is needed
   * @accessibility Positioned as overlay with proper touch targets (44x44px minimum)
   * @example true for active quiz gameplay pages
   */
  showCoins?: boolean;

  /**
   * Music-specific OpenGraph meta tags for enhanced social sharing
   * @type {Object}
   * @optional
   * @useCase Used when type is "music" to provide rich metadata for social platforms
   * @properties creator, album, musician strings for detailed music metadata
   */
  ogMusic?: {
    /**
     * Music creator/artist name for OpenGraph music metadata
     * @type {string}
     * @example "The Beatles"
     */
    creator?: string;
    /**
     * Album name for music content OpenGraph metadata
     * @type {string}
     * @example "Abbey Road"
     */
    album?: string;
    /**
     * Musician name for music content OpenGraph metadata
     * @type {string}
     * @example "Paul McCartney"
     */
    musician?: string;
  };
}

const {
  title,
  description,
  keywords,
  image,
  type = "website",
  publishDate,
  modifiedDate,
  showHeader = true,
  showHeaderIcons = true,
  showCoins = false,
  ogMusic,
} = Astro.props;

const lang = getLangFromUrl(Astro.url);

// Performance optimization: Critical resource preloading following Astro standards
// NOTE: preload must target the exact resource (script.js) instead of the domain root
// Avoid preloading the CDN script because the CDN currently returns HTML/CORS issues;
// we will load it dynamically with a safe fallback instead.
const preloadedResources = [
  { href: "/styles/global.css", as: "style" as const, crossorigin: "anonymous" as const },
];

// Font preloading optimization with @fontsource integration
// @fontsource automatically handles font loading with display:swap
// We enhance this with strategic preloading for better Core Web Vitals
const fontPreloads = [
  // Critical: Primary body font - highest priority for FCP
  {
    href: "/fonts/atkinson-hyperlegible-regular.woff2",
    as: "font" as const,
    type: "font/woff2",
    crossorigin: "anonymous",
  },
];

// DNS prefetching for external domains to reduce connection time and improve performance
const dnsPrefetch = [{ href: "https://cdn.usefathom.com" }];
---

<!doctype html>
<html
  lang={String(lang)}
  class="font-primary scroll-behavior-auto mx-auto box-border w-full max-w-7xl overflow-x-hidden bg-neutral-950 antialiased"
  dir="ltr"
>
  <Head>
    <!-- Character set and viewport configuration for mobile optimization -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <!-- Title and description are handled by SEO component to avoid duplication -->

    <!-- Color scheme and theme color for browser UI using CSS variables -->
    <meta name="color-scheme" content="dark light" />
    <meta
      name="theme-color"
      content="var(--color-neutral-950)"
      media="(prefers-color-scheme: dark)"
    />
    <meta name="theme-color" content="var(--color-white)" media="(prefers-color-scheme: light)" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <!-- Resource hints for performance -->
    {dnsPrefetch.map((resource) => <link rel="dns-prefetch" href={resource.href} />)}

    {
      preloadedResources.map((resource) => (
        <link
          rel="preload"
          href={resource.href}
          as={resource.as}
          crossorigin={resource.crossorigin}
        />
      ))
    }

    <!-- Font preloading for critical fonts -->
    {
      fontPreloads.map((font) => (
        <link
          rel="preload"
          href={font.href}
          as={font.as}
          type={font.type}
          crossorigin={font.crossorigin}
        />
      ))
    }

    <!-- Local @font-face declarations: serve fonts from /fonts with font-display: swap for better LCP and no external fetch -->
    <style>
      @font-face {
        font-family: "Atkinson Hyperlegible";
        src: url("/fonts/atkinson-hyperlegible-regular.woff2") format("woff2");
        font-weight: 400;
        font-style: normal;
        font-display: swap;
      }
    </style>

    <!-- Structured data and SEO -->
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="google-site-verification" content="ImN0-TS4_aAOFIXaGxvsGSmqsgHxI94WARi8bW7fm9M" />
    <SEO {title} {description} {keywords} {image} {type} {publishDate} {modifiedDate} {ogMusic} />

    <!-- Analytics with performance and privacy optimizations -->
    <script
      src="https://cdn.usefathom.com/script.js"
      data-site="RKHOWTTO"
      data-spa="auto"
      data-auto="false"
      defer
      crossorigin="anonymous"
      type="text/javascript"></script>
  </Head>
  <body
    class="margin-auto text-primary text-wrap-pretty min-h-screen w-full overflow-x-hidden p-4 text-lg leading-normal"
    data-theme="dark"
  >
    {/* Skip link for keyboard navigation */}
    <SkipLink />

    {/* Conditional header/navigation based on page type */}
    <When test={showHeader && !showCoins}>
      <header role="banner" class="layout__header">
        <Navigation {showHeaderIcons} />
      </header>
    </When>

    {/* Main content area */}
    <main id="main-content" class="my-8" tabindex="-1" role="main">
      <slot />
    </main>

    {/* Footer area */}
    <Footer />

    <!-- Minimal layout initialization + safe dynamic Fathom loader with stub fallback -->
    <!-- External loader to avoid inline TypeScript/ESLint checks in Astro -->
    <script src="/scripts/layout-fathom-loader.js" defer></script>
  </body>
</html>

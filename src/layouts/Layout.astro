---
import { Icon } from "astro-icon/components";
import { When } from "@astropub/flow";
import { Image } from "astro:assets";

interface Props {
  title: string;
  showHeader?: boolean;
  showUserLink?: boolean;
}

const { title, showHeader = true, showUserLink = true } = Astro.props;
---

<!doctype html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <When test1={showHeader}>
      <header>
        <div class="slot">
          <slot name="left-headercol" />
        </div>
        <div class="logo">
          <a href="/gamehome"
            ><Image alt="" src="/cover-rush.jpg" width={120} height={69} /></a
          >
        </div>
        <div class="iconGroup">
          <When test={showUserLink}>
            <Icon name="settings-grey" width={24} height={22.24} />
            <a href="/user"
              ><Icon name="user-white" width={24} height={22.24} /></a
            >
            <form method="post" action="/api/logout">
              <button
                ><Icon
                  name="logout"
                  width={24}
                  height={24}
                  title="Abmelden"
                /></button
              >
            </form>
          </When>
          <When test={!showUserLink}>
            <Icon name="settings-grey" width={24} height={22.24} />
            <Icon name="user" width={24} height={22.24} />
          </When>
        </div>
      </header>
    </When>

    <main>
      <slot />
    </main>

    <style lang="scss" is:global>
      :root {
        --background-color: #1f0e16;
        --primary-color: #ffd700;
        --accent-color-1: #ff4500;
        --accent-color-2: #4da6ff;
        --accent-color-3: #32cd32;
        --accent-color-4: #ff6f61;
        --text-color: #fff;
        --colour-disabled: #250606;
        --colour-text-secondary: #aeaeae;

        /* Radiusvariablen */
        --radius-circle: 128px;
        --radius-rounded: 8px;
        --spacing-15: 12px;
        --spacing-1: 8px;
        --spacing-2: 16px;
        --spacing-3: 24px;
        --spacing-lg: 32px;
        --spacing-md: 24px;
        --spacing-s: 12px;
        --spacing-xl: 40px;
        --spacing-xs: 8px;
        --spacing-xxs: 4px;
      }

      html {
        font-family: system-ui, sans-serif;
        background: var(--background-color);
      }

      body {
        padding: 0;
        width: 480px;
        max-width: 100%;
        margin: 0 auto;
      }

      header {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: top;
        margin: var(--spacing-md) 0;
      }

      .slot {
        width: 33.33333%;
      }

      .logo {
        width: 33.33333%;
        text-align: center;
      }

      .iconGroup {
        display: flex;
        align-items: top;
        gap: var(--spacing-md);
        width: 33.33333%;
        justify-content: flex-end;
      }

      main {
        color: var(--text-color);
        font-size: 1rem;
        line-height: 1.6;
      }

      .hasMargin {
        margin: 0 var(--spacing-s);
      }

      .resultItem {
        position: relative;
        display: flex;
        width: 126px;
        flex-direction: column;
      }

      .resultCover {
        width: 126px;
        height: 126px;
      }

      .resultBand {
        color: var(--primary-color);
        font-size: 14px;
        font-style: normal;
        font-weight: 700;
        line-height: 120%;
      }

      .resultAlbum {
        font-size: 14px;
        font-style: normal;
        font-weight: 400;
        line-height: 150%;
      }

      .resultPlace {
        position: absolute;
        top: -14px;
        right: -14px;
        display: flex;
        border-radius: var(--radius-circle);
        background: var(--accent-color-3);
        color: var(--text-color);
        text-align: center;
        font-size: 1.125rem;
        font-style: normal;
        font-weight: 700;
        line-height: 120%;
        justify-content: center;
        align-items: center;
        gap: var(--spacing-xxs);
        width: 2rem;
        height: 2rem;
      }

      .resultError {
        background: var(--accent-color-1);
        color: var(--text-color);
      }

      .resultData {
        font-size: 16px;
        font-style: normal;
        font-weight: 400;
        line-height: 35.28px;
        color: var(--text-color);
      }

      button {
        cursor: pointer;
        border: none;
        background: none;
        padding: 0;
        margin: 0;
      }
    </style>
  </body>
</html>

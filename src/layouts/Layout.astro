---
import { When } from "@astropub/flow";

import "@fontsource/source-sans-pro/400.css";
import "@fontsource/source-sans-pro/700.css";
import "@fontsource/source-sans-pro/900.css";
import ShowCoins from "@components/Shared/ShowCoins.astro";
import Navigation from "@components/Header/Navigation.astro";
import SEO from "@components/SEO.astro";
import SkipLink from "@components/Shared/SkipLink.astro";
import { getLangFromUrl } from "@utils/i18n";
import "../styles/global.css";

interface Props {
  title: string;
  description?: string;
  keywords?: string;
  image?: string;
  showHeader?: boolean;
  showHeaderIcons?: boolean;
  showCoins?: boolean;
}

const {
  title,
  description,
  keywords,
  image,
  showHeader = true,
  showHeaderIcons = true,
  showCoins = false,
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
---

<!doctype html>
<html lang={lang} class="box-border m-2">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="color-scheme" content="light dark" />

    <SEO 
      title={title}
      description={description}
      keywords={keywords}
      image={image}
    />

    <script
      src="https://cdn.usefathom.com/script.js"
      data-site="RKHOWTTO"
      defer
      is:inline></script>
  </head>
  <body
    class="w-full max-w-6xl mx-auto px-3 text-base leading-7 text-color tracking-wide bg-[--background-color] text-wrap"
  >
    <SkipLink />

    <When test={showHeader && !showCoins}>
      <Navigation showHeaderIcons={showHeaderIcons} />
    </When>

    <When test={showCoins}>
      <ShowCoins />
    </When>

    <main
      id="main-content"
      class="max-w-full mx-auto py-6 px-0 text-base leading-relaxed text-pretty md:max-w-prose"
    >
      <slot />
    </main>

    <!-- Mit Tailwind v4 kompatible globale Stile -->
    <style is:global>
      .sr-only {
        @apply absolute w-px h-px -m-px overflow-hidden;

        border-width: 0;
        white-space: nowrap;
        clip: rect(0, 0, 0, 0);
      }

      .button {
        @apply cursor-pointer flex items-center justify-center 
               border-0 no-underline bg-[--highlight-color] 
               transition-all duration-300 hover:scale-105 hover:bg-[--button-hover-color]
               focus-visible:scale-100 focus-visible:outline
               focus-visible:outline-[--focus-outline-color] focus-visible:outline-offset-2;
      }

      .button.hidden {
        @apply overflow-hidden opacity-0;
      }

      body[data-menu-open="true"] {
        @apply overflow-hidden;
      }
    </style>
  </body>
</html>

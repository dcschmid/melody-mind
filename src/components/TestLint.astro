---
// Ein Test für ESLint mit Astro und WCAG AAA-Regeln
const title = "ESLint Testkomponente mit WCAG AAA";
const hasError = false;
const score = 500;
---

<div class="p-4 bg-purple-100 rounded-lg shadow-md max-w-md mx-auto">
  <h1 class="text-2xl font-bold mb-4 text-purple-900">WCAG AAA Test</h1>

  <!-- Test für informative-alt-text Regel - sollte zu kurz sein -->
  <img
    src="/images/test.jpg"
    alt="Testbild"
    class="w-full h-auto rounded mb-4"
  />

  <!-- Korrektes Beispiel für informative-alt-text -->
  <img
    src="/images/musician.jpg"
    alt="Ein Gitarrist spielt während eines Rockkonzerts auf einer hell beleuchteten Bühne"
    class="w-full h-auto rounded mb-4"
  />

  <!-- Test für color-contrast Regel - sollte zu schwachen Kontrast haben -->
  <p class="text-gray-400 bg-white mb-2">
    Dieser Text hat einen sehr schwachen Kontrast.
  </p>

  <!-- Korrektes Beispiel für color-contrast -->
  <p class="text-gray-900 bg-white mb-2">
    Dieser Text hat ausreichenden Kontrast für WCAG AAA.
  </p>

  {hasError && <p class="text-red-700">Es ist ein Fehler aufgetreten.</p>}

  <div class="flex items-center justify-between">
    <span class="font-medium">Punktzahl: {score}</span>
    <button
      type="button"
      aria-label="Weiter zum nächsten Level"
      class="bg-purple-800 hover:bg-purple-900 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2 text-white px-4 py-2 rounded transition-colors"
    >
      Weiter
    </button>
  </div>

  <!-- Test für aria-enhanced Regel - fehlen tabIndex und Keyboard Handlers -->
  <div
    role="button"
    aria-label="Problematischer Button"
    class="bg-blue-700 text-white p-2 mt-4 rounded"
  >
    Unvollständiger Button
  </div>

  <!-- Korrektes Beispiel für aria-enhanced -->
  <div
    role="button"
    tabIndex={0}
    aria-label="Korrekter Button mit Tastaturfunktionalität"
    onClick={() => console.log("Clicked")}
    onKeyDown={(e) => e.key === "Enter" && console.log("Enter pressed")}
    class="bg-blue-700 text-white p-2 mt-4 rounded cursor-pointer"
  >
    Korrekter Button
  </div>

  <!-- Test für heading-structure Regel - überspringt h2 -->
  <h1 class="text-xl font-bold mt-4">Hauptüberschrift</h1>
  <h3 class="text-lg font-medium mt-2">Unterabschnitt (h2 fehlt)</h3>
</div>

<style>
  /* Bessere Spezifität mit Klassen */
  .test-component {
    font-family: "Arial", sans-serif;
  }
</style>

<script>
  // Test für focus-management Regel - fokussiert ohne Ankündigung
  document.addEventListener("DOMContentLoaded", () => {
    const button = document.querySelector('div[role="button"]');
    if (button) {
      button.focus(); // Sollte eine Warnung auslösen
    }

    // Korrekte Fokus-Verwaltung würde so aussehen:
    // announceToScreenReader("Button erhält Fokus");
    // button.focus();

    console.warn("Test-Element gefunden - sollte eine Warnung auslösen");
  });

  /**
   * Eine Beispielfunktion für JSDoc-Tests
   * @returns {boolean} Immer true
   */
  function testFunction(): boolean {
    return true;
  }
</script>

---
/**
 * @component FeedbackOverlay
 * @description A modal overlay that displays feedback after each game round, showing
 * album information, media preview, and streaming links. This component is optimized for
 * WCAG AAA accessibility standards and high performance.
 *
 */
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { Icon } from "astro-icon/components";
import Headline from "@components/Headline.astro";

export interface Props {
  buttonId?: string;
}

const { buttonId = "next-round-button" } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div
  id="overlay"
  class="fixed inset-0 z-50 flex hidden items-center justify-center bg-black/80 p-4 transition-all duration-300"
  role="dialog"
  aria-labelledby="overlay-title"
  aria-describedby="feedback"
  aria-modal="true"
  tabindex="-1"
>
  <!-- Overlay backdrop for click-to-close functionality -->
  <div id="overlay-backdrop" class="absolute inset-0 bg-transparent" aria-hidden="true"></div>

  <div
    class="overlay__content relative z-10 max-h-[calc(100vh-2rem)] w-full max-w-4xl overflow-y-auto rounded-2xl border border-gray-600 bg-gray-800 p-6 shadow-2xl"
    role="document"
    tabindex="-1"
  >
    <div class="overlay__header mb-8 flex items-center justify-between gap-4">
      <Headline level="h2" textSize="2xl" textAlign="center" className="flex-1">
        {t("game.feedback.resolution")}
      </Headline>

      <!-- Close button for enhanced accessibility -->
      <button
        id="close-overlay-button"
        class="flex h-12 min-h-12 w-12 min-w-12 flex-shrink-0 cursor-pointer items-center justify-center rounded-full border border-gray-600 bg-gray-700 text-gray-300 transition-all duration-300 hover:scale-105 hover:border-purple-500 hover:bg-purple-600 hover:text-white hover:shadow-lg focus:border-purple-400 focus:ring-4 focus:ring-purple-500/60 focus:outline-none active:scale-95 active:shadow-sm"
        aria-label={t("general.close")}
      >
        <Icon name="close" width={24} height={24} aria-hidden="true" />
      </button>
    </div>

    <!-- Status announcer for screen readers -->
    <div id="feedback-status-announcer" aria-live="assertive" aria-atomic="true" class="sr-only">
    </div>

    <!-- Keyboard shortcuts documentation for screen readers -->
    <div class="sr-only" id="keyboard-shortcuts">
      <Headline level="h4" textSize="base">{t("general.keyboard.shortcuts")}</Headline>
      <ul>
        <li>{t("general.keyboard.escape")}: {t("general.close")}</li>
        <li>{t("general.keyboard.enter")}: {t("game.feedback.next.round")}</li>
        <li>{t("general.keyboard.tab")}: {t("general.navigate.elements")}</li>
      </ul>
    </div>

    <!-- Feedback message - This is what the game engine populates -->
    <div
      id="feedback"
      class="feedback rounded-xl border border-transparent p-6 text-center text-lg font-medium transition-all duration-300"
      aria-live="polite"
    >
    </div>

    <div
      class="album-info my-8 flex min-h-48 items-center justify-center"
      aria-label={t("game.feedback.media.section")}
    >
      <div
        class="w-full rounded-xl bg-gray-700/50 p-8 text-center transition-all duration-300"
        role="contentinfo"
      >
        <div class="mb-8 border-b border-gray-600 pb-6">
          <h3 class="mb-4 text-2xl font-bold break-words text-white" id="overlay-artist">
            {t("game.overlay.artist")}
          </h3>
          <h4 class="mb-4 text-xl font-semibold break-words text-purple-300" id="overlay-album">
            {t("game.overlay.album")}
          </h4>
          <p class="text-lg break-words text-gray-300" id="overlay-year"></p>
        </div>
        <div class="mt-8">
          <div
            id="overlay-funfact"
            class="fun-fact m-0 w-full rounded-xl border border-gray-600 bg-gray-600/50 p-6 text-lg leading-relaxed break-words text-gray-300 transition-all duration-300 hover:-translate-y-1 hover:border-purple-500 hover:bg-gray-600"
          >
          </div>
        </div>
      </div>
    </div>

    <button
      id={buttonId}
      class="mx-auto block min-h-12 min-w-56 cursor-pointer rounded-xl border border-purple-500 bg-purple-600 px-6 py-3 text-base font-semibold text-white shadow-md transition-all duration-300 hover:-translate-y-1 hover:border-purple-400 hover:bg-purple-700 hover:shadow-lg focus:border-purple-400 focus:ring-4 focus:ring-purple-500/60 focus:outline-none active:translate-y-0 active:scale-95 active:shadow-sm"
      aria-label={t("game.feedback.next.round")}
    >
      <span class="flex items-center justify-center gap-2">
        {t("game.feedback.next.round")}
        <Icon name="arrow-right" width={20} height={20} aria-hidden="true" />
      </span>
    </button>
  </div>
</div>

<script>
  import { initFeedbackOverlayAuto } from "../../utils/components/feedbackOverlayUtils";

  // Initialize feedback overlay functionality only for Quiz Game
  // Time Pressure Game handles its own button events
  if (window.location.pathname.includes("game-")) {
    document.addEventListener("DOMContentLoaded", () => {
      initFeedbackOverlayAuto();
    });
  }
</script>

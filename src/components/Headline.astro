---
/**
 * Headline Component - Simple & Clean
 *
 * A clean heading component with different levels and basic styling.
 * Using Tailwind CSS 4 with tailwind-variants for maintainability.
 *
 * @component
 * @example
 * ```astro
 * <Headline level="h1" variant="primary">
 *   Welcome to MelodyMind
 * </Headline>
 * ```
 */
import { tv } from "tailwind-variants";

interface Props {
  /** Text content of the heading (can also use slot content instead) */
  title?: string;
  /** HTML heading level (h1-h6) for proper document hierarchy */
  level?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
  /** Additional CSS classes to apply */
  className?: string;
  /** Optional ID for direct linking and document structure */
  ariaLabel?: string;
  /** Style variant for visual appearance */
  variant?: "default" | "primary";
  /** Text alignment option */
  textAlign?: "left" | "center" | "right";
}

const {
  title,
  level = "h1",
  className = "",
  ariaLabel,
  variant = "default",
  textAlign = "left",
} = Astro.props;

// Dynamic heading tag based on level prop
const Tag = level;

// Tailwind Variants configuration for the headline component
const headlineVariants = tv({
  base: [
    // Base typography
    "font-primary mb-md leading-tight font-bold",
    // Enhanced text wrapping
    "text-balance break-words",
  ].join(" "),

  variants: {
    level: {
      h1: "text-6xl font-bold",
      h2: "text-5xl font-semibold",
      h3: "text-4xl font-semibold",
      h4: "text-3xl font-medium",
      h5: "text-2xl font-medium",
      h6: "text-xl font-medium",
    },

    variant: {
      default: "text-text-primary",
      primary: [
        "text-interactive-primary",
        "from-primary-500 to-secondary-500 bg-gradient-to-br",
        "bg-clip-text text-transparent",
      ].join(" "),
    },

    textAlign: {
      left: "text-left",
      center: "text-center",
      right: "text-right",
    },
  },

  defaultVariants: {
    level: "h1",
    size: undefined,
    variant: "default",
    textAlign: "left",
  },
});

// Generate classes using tailwind-variants
const classes = headlineVariants({
  level,
  variant,
  textAlign,
  className,
});

// Simple attributes
const attributes: Record<string, any> = {
  class: classes,
};
---

<Tag {...attributes}>{title || <slot />}</Tag>

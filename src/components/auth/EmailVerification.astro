---
/**
 * EmailVerification Component for MelodyMind
 *
 * This component displays a confirmation page for email verification.
 * It is shown when a user clicks the confirmation link in their email.
 * The component is optimized according to WCAG AAA standards.
 *
 * @component
 * @example
 * ```astro
 * <EmailVerification token="verification-token" />
 * ```
 */

// 1. Imports
import { getLangFromUrl, useTranslations } from "@utils/i18n";

// 2. Component props
interface Props {
  /** Verification token from the URL */
  token: string;
}

const { token } = Astro.props;
const lang = String(getLangFromUrl(Astro.url));
const t = useTranslations(String(lang));
---

<div
  class="auth-form-container"
  aria-live="polite"
  id="verification-container"
  data-verification-token={token}
>
  <!-- Loading state -->
  <div id="loadingState" class="py-8 text-center" role="status">
    <div
      class="mb-4 inline-block h-12 w-12 animate-spin rounded-full border-t-2 border-b-2 border-purple-500"
      aria-hidden="true"
    >
    </div>
    <p class="text-lg">{t("loading.content")}</p>
  </div>

  <div id="successState" class="hidden py-8 text-center">
    <div
      class="mb-4 inline-flex h-16 w-16 items-center justify-center rounded-full border-2 border-green-500 bg-green-900/30"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        class="h-8 w-8 text-green-400"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path>
      </svg>
    </div>
    <h1 id="verification-heading" class="mb-4 text-2xl font-bold">
      {t("auth.email_verification.title")}
    </h1>
    <p class="mb-6 text-lg">{t("auth.email_verification.message")}</p>
    <a
      href={`/${String(lang)}/auth/login`}
      class="inline-block rounded-md bg-purple-600 px-6 py-3 text-white shadow-sm transition-colors hover:bg-purple-700 focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-zinc-900 focus:outline-none"
    >
      {t("auth.email_verification.login")}
    </a>
  </div>

  <div id="errorState" class="hidden py-8 text-center">
    <div
      class="mb-4 inline-flex h-16 w-16 items-center justify-center rounded-full border-2 border-red-500 bg-red-900/30"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        class="h-8 w-8 text-red-400"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"></path>
      </svg>
    </div>
    <h1 class="mb-4 text-2xl font-bold" aria-live="assertive">
      {t("auth.email_verification.title")}
    </h1>
    <p class="mb-6 text-lg">{t("auth.email_verification.error")}</p>
    <a
      href={`/${String(lang)}/auth/login`}
      class="inline-block rounded-md bg-purple-600 px-6 py-3 text-white shadow-sm transition-colors hover:bg-purple-700 focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-zinc-900 focus:outline-none"
    >
      {t("auth.email_verification.login")}
    </a>
  </div>
</div>

<script is:inline>
  /**
   * Display the appropriate state for email verification
   *
   * @param {string} state - The state to display: 'loading', 'success', or 'error'
   */
  function showState(state) {
    document.getElementById("loadingState").classList.add("hidden");
    document.getElementById("successState").classList.add("hidden");
    document.getElementById("errorState").classList.add("hidden");

    document.getElementById(`${state}State`).classList.remove("hidden");
  }

  /**
   * Verify the email address with the provided token
   *
   * This function makes an API call to the server to verify the email token.
   * It handles the response and updates the UI accordingly.
   */
  async function verifyEmail() {
    try {
      // Get token from a data attribute with more specific selector
      const container = document.getElementById("verification-container");
      const token = container?.getAttribute("data-verification-token");

      if (!token) {
        showState("error");
        return;
      }

      // API call to verify email with multilingual route
      const currentLang = document.documentElement.lang || "de";
      const response = await fetch(
        `/${currentLang}/api/auth/verify-email?token=${encodeURIComponent(token)}`
      );

      if (response.ok) {
        // Successful verification
        showState("success");
      } else {
        // Error during verification
        showState("error");
      }
    } catch {
      // Network error or other issues
      showState("error");
    }
  }

  // Verify email address when the page loads
  document.addEventListener("DOMContentLoaded", verifyEmail);
</script>

<style>
  /* Improved contrast ratios for WCAG AAA */
  .auth-form-container {
    background-color: #27272a;
    border-radius: 0.5rem;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    max-width: 32rem;
    margin: 0 auto;
  }

  /* Enhanced focus styles for keyboard navigation */
  a:focus {
    outline: 3px solid #f0abfc;
    outline-offset: 3px;
  }

  /* Animation for loading state */
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>

---
/**
 * EmailVerification Component for MelodyMind
 *
 * This component displays a confirmation page for email verification.
 * It is shown when a user clicks the confirmation link in their email.
 * The component is optimized according to WCAG AAA standards.
 *
 * @component
 * @example
 * ```astro
 * <EmailVerification token="verification-token" />
 * ```
 */

// 1. Imports
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { Icon } from "astro-icon/components";

// 2. Component props
interface Props {
  /** Verification token from the URL */
  token: string;
}

const { token } = Astro.props;
const lang = String(getLangFromUrl(Astro.url));
const t = useTranslations(String(lang));
---

<div
  class="email-verification"
  aria-live="polite"
  id="verification-container"
  data-verification-token={token}
>
  <!-- Loading state -->
  <div
    id="loadingState"
    class="email-verification__state"
    role="status"
    aria-label={t("auth.email_verification.loading_label")}
  >
    <div class="email-verification__spinner" aria-hidden="true" role="presentation"></div>
    <p class="email-verification__text" id="loading-message" aria-live="polite">
      {t("auth.email_verification.loading_label")}
    </p>
  </div>

  <div
    id="successState"
    class="email-verification__state email-verification__state--hidden"
    role="status"
    aria-labelledby="verification-heading"
  >
    <div
      class="email-verification__icon email-verification__icon--success"
      role="img"
      aria-label={t("auth.email_verification.success_icon_label")}
    >
      <Icon name="check" class="email-verification__svg" aria-hidden="true" />
    </div>
    <h1 id="verification-heading" class="email-verification__title" tabindex="-1">
      {t("auth.email_verification.title")}
    </h1>
    <p class="email-verification__message" id="success-message" aria-live="polite">
      {t("auth.email_verification.message")}
    </p>
    <a
      href={`/${String(lang)}/auth/login`}
      class="email-verification__button"
      role="button"
      aria-describedby="success-message"
    >
      {t("auth.email_verification.login")}
    </a>
  </div>

  <div
    id="errorState"
    class="email-verification__state email-verification__state--hidden"
    role="alert"
    aria-labelledby="error-heading"
  >
    <div
      class="email-verification__icon email-verification__icon--error"
      role="img"
      aria-label={t("auth.email_verification.error_icon_label")}
    >
      <Icon name="exclamation-triangle" class="email-verification__svg" aria-hidden="true" />
    </div>
    <h1 id="error-heading" class="email-verification__title" aria-live="assertive" tabindex="-1">
      {t("auth.email_verification.title")}
    </h1>
    <p class="email-verification__message" id="error-message" aria-live="assertive">
      {t("auth.email_verification.error")}
    </p>
    <a
      href={`/${String(lang)}/auth/login`}
      class="email-verification__button"
      role="button"
      aria-describedby="error-message"
    >
      {t("auth.email_verification.login")}
    </a>
  </div>
</div>

<script>
  /**
   * Display the appropriate state for email verification
   * Optimized for performance with efficient DOM operations and accessibility support
   *
   * @param {string} state - The state to display: 'loading', 'success', or 'error'
   */
  function showState(state: string): void {
    // Use more efficient class list operations
    const states = ["loading", "success", "error"];
    const hiddenClass = "email-verification__state--hidden";

    // Batch DOM operations for better performance
    states.forEach((stateName) => {
      const element = document.getElementById(`${stateName}State`);
      if (element) {
        element.classList.toggle(hiddenClass, stateName !== state);
      }
    });

    // Improve accessibility by focusing on the active state heading
    const activeHeading = document.querySelector(`#${state}State h1`) as HTMLElement | null;
    if (activeHeading) {
      // Use setTimeout to ensure screen readers announce the content change
      setTimeout(() => {
        activeHeading.focus();
      }, 100);
    }

    // Announce state change to screen readers
    const message =
      state === "success"
        ? document.getElementById("success-message")?.textContent || ""
        : state === "error"
          ? document.getElementById("error-message")?.textContent || ""
          : document.getElementById("loading-message")?.textContent || "";

    // Create temporary announcement for screen readers
    const announcement = document.createElement("div");
    announcement.setAttribute("aria-live", "assertive");
    announcement.setAttribute("aria-atomic", "true");
    announcement.className = "sr-only";
    announcement.textContent = message;
    document.body.appendChild(announcement);

    // Remove announcement after screen reader has processed it
    setTimeout(() => {
      document.body.removeChild(announcement);
    }, 1000);
  }

  /**
   * Verify the email address with the provided token
   * Enhanced with better error handling and performance optimizations
   */
  async function verifyEmail(): Promise<void> {
    try {
      // Use more efficient DOM query with early return
      const container = document.getElementById("verification-container");
      const token = container?.dataset.verificationToken;

      if (!token) {
        showState("error");
        return;
      }

      // Get language more efficiently
      const currentLang = document.documentElement.lang || "de";

      // Use AbortController for better request management
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10s timeout

      try {
        // API call with optimized fetch options
        const response = await fetch(
          `/${currentLang}/api/auth/verify-email?token=${encodeURIComponent(token)}`,
          {
            signal: controller.signal,
            method: "GET",
            headers: {
              Accept: "application/json",
            },
          }
        );

        clearTimeout(timeoutId);

        if (response.ok) {
          showState("success");
        } else {
          showState("error");
        }
      } catch (fetchError: unknown) {
        clearTimeout(timeoutId);
        if (fetchError instanceof Error && fetchError.name === "AbortError") {
          console.warn("Email verification request timed out");
        }
        showState("error");
      }
    } catch (error) {
      console.error("Email verification error:", error);
      showState("error");
    }
  }

  // Use more efficient event listener with passive option where appropriate
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", verifyEmail, { once: true });
  } else {
    // Document already loaded, execute immediately
    verifyEmail();
  }
</script>

<style>
  /* ============================================================================
   * Email Verification Component Styles
   * Optimized for performance with CSS custom properties and efficient selectors
   * WCAG AAA compliant with proper contrast ratios and accessibility features
   * ============================================================================ */

  /* ============================================================================
   * Screen Reader Only Content - WCAG 2.2 AAA Compliance
   * ============================================================================ */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Use global CSS variables from global.css for consistency */
  .email-verification {
    /* All spacing and sizing variables are now global */
  }

  /* ============================================================================
   * Email Verification Container
   * ============================================================================ */
  .email-verification {
    background-color: var(--color-background-card);
    border-radius: var(--border-radius-lg);
    padding: var(--spacing-xl);
    box-shadow: var(--shadow-lg);
    max-width: 32rem;
    margin: 0 auto;
    border: 1px solid var(--color-border);
    contain: layout style; /* Performance optimization for layout isolation */
  }

  /* ============================================================================
   * State Management
   * ============================================================================ */
  .email-verification__state {
    padding: var(--spacing-xl) 0;
    text-align: center;
    display: block;
  }

  .email-verification__state--hidden {
    display: none;
  }

  /* ============================================================================
   * Loading Spinner - GPU accelerated for smooth performance
   * ============================================================================ */
  .email-verification__spinner {
    display: inline-block;
    width: var(--component-spinner-size);
    height: var(--component-spinner-size);
    margin-bottom: var(--spacing-md);
    border: 2px solid transparent;
    border-top: 2px solid var(--color-purple-500);
    border-bottom: 2px solid var(--color-purple-500);
    border-radius: var(--border-radius-full);
    animation: spin var(--transition-duration-1000) linear infinite;
    will-change: transform; /* GPU acceleration hint */
    transform: translateZ(0); /* Force hardware acceleration */
  }

  @keyframes spin {
    0% {
      transform: translateZ(0) rotate(0deg);
    }
    100% {
      transform: translateZ(0) rotate(360deg);
    }
  }

  /* ============================================================================
   * Icon Container - Optimized with CSS logical properties
   * ============================================================================ */
  .email-verification__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    inline-size: var(--component-icon-size-lg);
    block-size: var(--component-icon-size-lg);
    margin-block-end: var(--spacing-md);
    border-radius: var(--border-radius-full);
    border: 2px solid;
    contain: layout; /* Performance optimization */
  }

  .email-verification__icon--success {
    border-color: var(--color-green-500);
    background-color: color-mix(in srgb, var(--color-green-500) 10%, transparent);
    color: var(--color-green-400);
  }

  .email-verification__icon--error {
    border-color: var(--color-red-500);
    background-color: color-mix(in srgb, var(--color-red-500) 10%, transparent);
    color: var(--color-red-400);
  }

  /* ============================================================================
   * SVG Icons
   * ============================================================================ */
  .email-verification__svg {
    width: var(--spacing-xl);
    height: var(--spacing-xl);
  }

  /* ============================================================================
   * Typography - WCAG 2.2 AAA compliant spacing and sizing
   * ============================================================================ */
  .email-verification__title {
    margin-bottom: var(--spacing-md);
    font-size: clamp(24px, 2rem, 32px); /* Minimum 24px for readability */
    font-weight: var(--font-weight-bold);
    color: var(--color-text-primary);
    line-height: 1.8; /* WCAG 2.2 AAA minimum line height */
    letter-spacing: 0.05em; /* Improved readability */
  }

  .email-verification__message {
    margin-bottom: var(--spacing-lg);
    font-size: clamp(18px, 1.125rem, 20px); /* Minimum 18px for AAA */
    color: var(--color-text-body);
    line-height: 1.8; /* WCAG 2.2 AAA minimum line height */
    letter-spacing: 0.025em; /* Improved readability */
    max-width: 60ch; /* Optimal reading line length */
    margin-inline: auto; /* Center text for readability */
  }

  .email-verification__text {
    font-size: clamp(18px, 1.125rem, 20px); /* Minimum 18px for AAA */
    color: var(--color-text-body);
    line-height: 1.8; /* WCAG 2.2 AAA minimum line height */
    letter-spacing: 0.025em; /* Improved readability */
    margin: 0;
    max-width: 60ch; /* Optimal reading line length */
    margin-inline: auto; /* Center text for readability */
  }

  /* ============================================================================
   * Button Styles - Enhanced for WCAG 2.2 AAA accessibility and performance
   * ============================================================================ */
  .email-verification__button {
    display: inline-block;
    min-block-size: 44px; /* WCAG 2.2 AAA minimum touch target */
    min-inline-size: 44px; /* WCAG 2.2 AAA minimum touch target */
    padding-block: var(--spacing-md);
    padding-inline: var(--spacing-lg);
    background-color: var(--color-primary);
    color: var(--color-text-primary);
    text-decoration: none;
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
    font-size: clamp(16px, 1rem, 18px); /* Minimum 16px for accessibility */
    font-weight: var(--font-weight-medium);
    line-height: 1.8; /* WCAG 2.2 AAA line height minimum */
    text-align: center;
    transition:
      background-color var(--transition-duration-300) var(--transition-timing-in-out),
      box-shadow var(--transition-duration-300) var(--transition-timing-in-out),
      transform var(--transition-duration-150) var(--transition-timing-in-out);
    border: 2px solid transparent; /* Ensures consistent border for high contrast */
    cursor: pointer;
    touch-action: manipulation;
    will-change: transform; /* Performance hint for animations */
    transform: translateZ(0); /* Force hardware acceleration */

    /* Enhanced focus styling for WCAG 2.2 AAA */
    position: relative;
  }

  .email-verification__button:hover {
    background-color: var(--color-primary-hover);
    box-shadow: var(--shadow-auth-button-hover);
    transform: translateZ(0) translateY(-1px);
  }

  .email-verification__button:active {
    transform: translateZ(0) translateY(0);
    box-shadow: var(--shadow-auth-button-active);
  }

  .email-verification__button:focus {
    outline: none;
    box-shadow:
      var(--shadow-auth-button-hover),
      0 0 0 3px rgba(139, 92, 246, 0.3);
  }

  /* Enhanced focus indicators for WCAG 2.2 AAA */
  .email-verification__button:focus-visible {
    outline: 3px solid var(--color-yellow-400); /* Minimum 3px for WCAG AAA */
    outline-offset: 2px;
    box-shadow:
      0 0 0 2px var(--color-primary),
      0 0 0 8px rgba(255, 255, 0, 0.4);
    border-color: var(--color-yellow-400);
  }

  /* ============================================================================
   * Responsive Design - Consolidated media queries for better performance
   * ============================================================================ */
  @media (min-width: 640px) {
    .email-verification {
      padding: var(--spacing-2xl);
    }

    .email-verification__title {
      font-size: var(--font-size-3xl);
    }

    .email-verification__message,
    .email-verification__text {
      font-size: var(--font-size-xl);
    }

    .email-verification__button {
      padding-block: var(--spacing-md);
      padding-inline: var(--spacing-xl);
      font-size: var(--font-size-lg);
    }
  }

  @media (min-width: 768px) {
    .email-verification {
      padding: var(--spacing-3xl);
    }
  }

  /* ============================================================================
   * User Preference Media Queries - Consolidated for performance
   * ============================================================================ */

  /* Light mode specific styles */
  @media (prefers-color-scheme: light) {
    .email-verification {
      background-color: var(--color-white);
      border-color: var(--color-gray-300);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .email-verification__title {
      color: var(--color-gray-900);
    }

    .email-verification__message,
    .email-verification__text {
      color: var(--color-gray-700);
    }

    .email-verification__spinner {
      border-top-color: var(--color-purple-600);
      border-bottom-color: var(--color-purple-600);
    }

    .email-verification__icon--success {
      background-color: color-mix(in srgb, var(--color-green-500) 10%, transparent);
    }

    .email-verification__icon--error {
      background-color: color-mix(in srgb, var(--color-red-500) 10%, transparent);
    }
  }

  /* High contrast mode optimizations - WCAG 2.2 AAA */
  @media (prefers-contrast: high) {
    .email-verification {
      border-width: 3px;
      border-color: var(--color-white);
      background-color: var(--color-black);
      color: var(--color-white);
    }

    .email-verification__button {
      border: 3px solid var(--color-white); /* Increased border for high contrast */
      background-color: var(--color-white);
      color: var(--color-black);
    }

    .email-verification__button:focus-visible {
      outline-width: 5px; /* Enhanced outline for high contrast */
      outline-color: var(--color-yellow-400);
      background-color: var(--color-yellow-400);
      color: var(--color-black);
      box-shadow:
        0 0 0 3px var(--color-black),
        0 0 0 8px var(--color-yellow-400);
    }

    .email-verification__icon--success,
    .email-verification__icon--error {
      border-width: 3px;
      background-color: transparent;
    }

    .email-verification__icon--success {
      border-color: var(--color-white);
      color: var(--color-white);
    }

    .email-verification__icon--error {
      border-color: var(--color-white);
      color: var(--color-white);
    }
  }

  /* Reduced motion accessibility */
  @media (prefers-reduced-motion: reduce) {
    .email-verification__spinner {
      animation: none;
    }

    .email-verification__button {
      transition: none;
      will-change: auto;
    }

    .email-verification__button:hover,
    .email-verification__button:active {
      transform: translateZ(0);
    }
  }

  /* Touch device optimization - WCAG 2.2 AAA touch targets */
  @media (hover: none) and (pointer: coarse) {
    .email-verification__button {
      min-block-size: 48px; /* Enhanced touch target size */
      min-inline-size: 48px; /* Enhanced touch target size */
      padding-block: 12px; /* Increased touch padding */
      padding-inline: var(--spacing-lg);
      font-size: 16px; /* Prevents zoom on iOS */
      touch-action: manipulation;

      /* Add spacing around touch targets */
      margin: 8px; /* Ensures 8px spacing around touch targets */
    }

    /* Ensure adequate spacing between interactive elements */
    .email-verification__icon {
      margin-block-end: 16px; /* Increased spacing for touch devices */
    }
  }

  /* Print styles optimization */
  @media print {
    .email-verification {
      box-shadow: none;
      border: 1px solid var(--color-black);
      background: var(--color-white);
      color: var(--color-black);
    }

    .email-verification__spinner {
      display: none;
    }

    .email-verification__button {
      background: transparent !important;
      color: var(--color-black) !important;
      border: 2px solid var(--color-black) !important;
    }

    .email-verification__icon--success,
    .email-verification__icon--error {
      background: transparent !important;
      border-color: var(--color-black) !important;
      color: var(--color-black) !important;
    }
  }
</style>

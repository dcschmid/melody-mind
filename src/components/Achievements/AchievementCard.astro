---
/**
 * AchievementCard - Responsive achievement display card
 *
 * Displays individual achievements with progress and status
 * WCAG AAA compliant with performance optimizations
 */

import { Icon } from "astro-icon/components";
import { useTranslations } from "@utils/i18n";
import type { LocalizedAchievement } from "../../types/achievement";
import Headline from "../Headline.astro";
import Paragraph from "../Paragraph.astro";

interface Props {
  achievement: LocalizedAchievement;
  lang: string;
}

const { achievement, lang } = Astro.props;
const t = useTranslations(lang);

const { progressPercentage, status, name, description, category } = achievement;
const statusClass = `achievement-card--${status}`;
const statusText =
  status === "unlocked"
    ? t("achievements.status.unlocked")
    : status === "in-progress"
      ? t("achievements.status.in_progress", { percent: progressPercentage })
      : t("achievements.status.locked");
const pointsValue = category?.points ?? 0;
const ariaExpanded = status === "unlocked" ? "true" : "false";
const ariaCurrent = status === "unlocked" ? "true" : undefined;
const progressBarStyles = `width: ${progressPercentage}%; transition: width var(--transition-normal);`;
---

<section class="achievement-card-section" aria-labelledby={`achievement-${achievement.id}-title`}>
  <div
    class={`achievement-card ${statusClass}`}
    data-testid={`achievement-card-${achievement.id}`}
    data-category={category?.code}
    data-status={status}
    role="button"
    tabindex="0"
    aria-label={`${name}: ${statusText}`}
    aria-describedby={`achievement-${achievement.id}-description achievement-${achievement.id}-points achievement-tooltip-${achievement.id}`}
    aria-expanded={ariaExpanded}
    aria-current={ariaCurrent}
  >
    <div class="achievement-card__header">
      {
        status === "unlocked" && (
          <div class="achievement-card__badge" aria-hidden="true">
            <Icon name="check-circle" width="16" height="16" />
          </div>
        )
      }
    </div>

    <div class="achievement-card__content">
      <Headline
        level="h3"
        size="lg"
        variant="default"
        id={`achievement-${achievement.id}-title`}
        ariaLabel={`${name}: ${statusText}`}
        textAlign="center"
      >
        {name}
        <span class="achievement-card__status sr-only">{statusText}</span>
      </Headline>

      <Paragraph
        {description}
        textSize="lg"
        align="center"
        enhancedSpacing={false}
        ariaLive="polite"
        id={`achievement-${achievement.id}-description`}
      />

      <div class="achievement-card__meta">
        <span class="achievement-card__points" id={`achievement-${achievement.id}-points`}>
          {t("achievements.points", { points: pointsValue })}
        </span>
      </div>

      <div
        class="achievement-card__progress-container"
        aria-label={t("achievements.progress", { progress: progressPercentage })}
        aria-describedby={`achievement-${achievement.id}-description`}
        aria-live="polite"
        aria-atomic="true"
      >
        <div
          class="achievement-card__progress-bar"
          role="progressbar"
          aria-valuenow={progressPercentage}
          aria-valuemin="0"
          aria-valuemax="100"
          aria-label={t("achievements.progressBar", { name, progress: progressPercentage })}
          style={progressBarStyles}
        >
        </div>
      </div>

      <span role="tooltip" id={`achievement-tooltip-${achievement.id}`} class="sr-only">
        {
          t("achievements.detailedDescription", {
            name,
            status: statusText,
            progress: progressPercentage,
            points: pointsValue,
          })
        }
      </span>
    </div>
  </div>
</section>

<script>
  import { initializeAchievementCards } from "../../utils/achievements/achievementCard.ts";

  const initializeController = (): void => {
    initializeAchievementCards();
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initializeController, { once: true });
  } else {
    initializeController();
  }
</script>

<style lang="scss">
  .achievement-card-section {
    // Container styles
  }

  .achievement-card {
    position: relative;
    display: flex;
    flex-direction: column;
    height: var(--width-full);
    padding: var(--space-sm);
    background: var(--bg-secondary);
    border: var(--border-width-thin) solid var(--border-primary);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    transition:
      box-shadow var(--transition-normal),
      transform var(--transition-normal);
    cursor: pointer;
    min-height: var(--touch-target-enhanced);
    overflow: hidden;

    @media (min-width: 30em) {
      padding: var(--space-md);
    }

    @media (min-width: 48em) {
      padding: var(--space-lg);
    }

    @media (min-width: 64em) {
      padding: var(--space-xl);
    }

    &:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-2px);
    }

    &:focus-visible {
      outline: var(--focus-outline);
      outline-offset: var(--focus-ring-offset);
      box-shadow: var(--focus-ring);
      z-index: var(--z-notification);
    }

    &__header {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: var(--space-sm);
      min-height: var(--touch-target-enhanced);
      padding: var(--space-xs);

      @media (min-width: 30em) {
        margin-bottom: var(--space-md);
        padding: var(--space-sm);
      }

      @media (min-width: 48em) {
        margin-bottom: var(--space-lg);
        padding: var(--space-md);
      }

      @media (min-width: 64em) {
        margin-bottom: var(--space-xl);
        padding: var(--space-lg);
      }
    }

    &__badge {
      position: absolute;
      top: calc(-1 * var(--space-xs));
      right: calc(-1 * var(--space-xs));
      display: flex;
      align-items: center;
      justify-content: center;
      width: var(--space-md);
      height: var(--space-md);
      background: var(--color-success-500);
      border: var(--border-width-thick) solid var(--bg-primary);
      border-radius: var(--radius-full);
      color: var(--text-inverse);
      box-shadow: var(--shadow-sm);

      @media (min-width: 30em) {
        width: var(--space-lg);
        height: var(--space-lg);
      }
    }

    &__content {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      gap: var(--space-xs);

      @media (min-width: 30em) {
        gap: var(--space-sm);
      }

      @media (min-width: 48em) {
        gap: var(--space-md);
      }

      @media (min-width: 64em) {
        gap: var(--space-lg);
      }
    }

    &__status {
      font-weight: var(--font-medium);
      color: var(--text-secondary);
      letter-spacing: var(--letter-spacing-enhanced);
    }

    &__meta {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-top: var(--space-sm);

      @media (min-width: 30em) {
        margin-top: var(--space-md);
      }

      @media (min-width: 48em) {
        margin-top: var(--space-lg);
      }

      @media (min-width: 64em) {
        margin-top: var(--space-lg);
      }
    }

    &__points {
      display: inline-flex;
      align-items: center;
      padding: var(--space-xs) var(--space-md);
      background: var(--form-bg);
      border: var(--border-width-thin) solid var(--form-border);
      border-radius: var(--radius-md);
      font-size: var(--text-xs);
      font-weight: var(--font-semibold);
      color: var(--form-text);
      box-shadow: var(--shadow-sm);
      transition: box-shadow var(--transition-normal);

      &:hover {
        box-shadow: var(--shadow-md);
      }

      @media (min-width: 30em) {
        font-size: var(--text-sm);
        padding: var(--space-sm) var(--space-lg);
      }

      @media (min-width: 48em) {
        font-size: var(--text-base);
        padding: var(--space-md) var(--space-xl);
      }
    }

    &__progress-container {
      position: relative;
      width: var(--width-full);
      height: var(--space-xs);
      background: var(--bg-tertiary);
      border: var(--border-width-thin) solid var(--border-primary);
      border-radius: var(--radius-md);
      overflow: hidden;
      margin-top: var(--space-md);

      @media (min-width: 30em) {
        height: var(--space-sm);
        margin-top: var(--space-lg);
      }

      @media (min-width: 48em) {
        height: var(--space-md);
        margin-top: var(--space-xl);
      }
    }

    &__progress-bar {
      height: var(--width-full);
      background: var(--interactive-primary);
      border-radius: var(--radius-lg);
      transition: width var(--transition-normal);
    }

    &--unlocked {
      border-color: var(--color-success-500);
      background: var(--bg-secondary);
      box-shadow: var(--shadow-lg);

      .achievement-card__progress-bar {
        background: var(--color-success-500);
      }

      &:hover {
        border-color: var(--color-success-400);
        box-shadow: var(--shadow-xl);
        transform: translateY(-2px);
      }
    }

    &--in-progress {
      border-color: var(--color-info-500);
      background: var(--bg-secondary);
      box-shadow: var(--shadow-lg);

      .achievement-card__progress-bar {
        background: var(--color-info-500);
      }

      &:hover {
        border-color: var(--color-info-400);
        box-shadow: var(--shadow-xl);
        transform: translateY(-2px);
      }
    }

    &--locked {
      opacity: 0.6;
      filter: grayscale(50%);
      background: var(--bg-secondary);

      .achievement-card__title {
        color: var(--text-tertiary);
      }

      .achievement-card__description.paragraph {
        color: var(--text-disabled) !important;
      }

      .achievement-card__progress-bar {
        background: var(--color-neutral-600);
      }

      &:hover {
        opacity: 0.8;
        transform: scale(1.02);
      }
    }
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  @media (prefers-reduced-motion: reduce) {
    .achievement-card {
      &,
      &__progress-bar,
      &__badge {
        transition: var(--transition-instant);
        animation: none;
      }

      &:hover {
        transform: none;
      }
    }
  }

  @media (prefers-contrast: high) {
    .achievement-card {
      border-width: var(--border-width-enhanced);

      &--unlocked {
        border-color: var(--color-success-600);
      }

      &--in-progress {
        border-color: var(--color-info-600);
      }

      &__badge {
        border-width: var(--border-width-enhanced);
      }
    }
  }
</style>

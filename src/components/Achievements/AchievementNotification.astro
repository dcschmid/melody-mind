---
/**
 * Achievement Notification Component
 *
 * Displays a toast-like notification when a user unlocks an achievement.
 * The notification appears with animation, plays a sound (if enabled),
 * and automatically disappears after a configurable time period.
 *
 * @component
 * @implements {WCAG AAA compliance}
 *
 * Accessibility Features:
 * - Uses role="alert" for screen reader announcements
 * - Provides aria-live="polite" for non-intrusive updates
 * - Supports close button with appropriate aria-label
 * - Implements focus management and outline for keyboard navigation
 * - Follows WCAG AAA contrast requirements (7:1 ratio)
 * - Supports reduced motion preferences
 *
 * @example
 * ```astro
 * <AchievementNotification lang="en" />
 * ```
 */

import { useTranslations } from "../../utils/i18n.ts";
import { Icon } from "astro-icon/components";

interface Props {
  /** Language code for translations */
  lang: string;
}

const { lang } = Astro.props;
const t = useTranslations(lang);
---

<div
  id="achievement-notification"
  class="achievement-notification"
  role="alert"
  aria-live="polite"
  aria-labelledby="achievement-title achievement-category"
  aria-describedby="achievement-description sr-notification-type"
  tabindex="-1"
>
  <div class="achievement-notification__container">
    <div class="achievement-notification__icon">
      <Icon name="trophy" width="24" height="24" aria-hidden="true" />
    </div>
    <div class="achievement-notification__content">
      <h3 id="achievement-title" class="achievement-notification__title">
        {t("achievements.notification.unlocked")}
      </h3>
      <p id="achievement-description" class="achievement-notification__description">
        {t("achievements.notification.progress")}
      </p>
      <!-- Zusätzliche versteckte Information für Screenreader -->
      <span id="sr-notification-type" class="sr-only">
        {t("achievements.notification.new_achievement")}
      </span>
    </div>
    <!-- Steuerelemente für Benachrichtigung -->
    <div class="achievement-notification__controls">
      <button
        id="achievement-pause"
        class="achievement-notification__control-button"
        aria-label={t("achievements.notification.pause")}
        title={t("achievements.notification.pause_title")}
      >
        <Icon name="pause" width="16" height="16" aria-hidden="true" />
      </button>
      <button
        id="achievement-sound-toggle"
        class="achievement-notification__control-button"
        aria-label={t("achievements.notification.toggle_sound")}
        title={t("achievements.notification.toggle_sound_title")}
      >
        <Icon name="volume-2" width="16" height="16" aria-hidden="true" />
      </button>
      <button
        id="achievement-close"
        class="achievement-notification__close"
        aria-label={t("achievements.notification.close")}
      >
        <Icon name="x" width="20" height="20" aria-hidden="true" />
      </button>
    </div>
  </div>
  <div id="achievement-category" class="achievement-notification__category"></div>

  <!-- Timer für Benachrichtigung -->
  <div class="achievement-notification__timer" aria-hidden="true">
    <div class="achievement-notification__timer-progress" id="notification-timer"></div>
  </div>
</div>

<!-- Audio für Benachrichtigungen mit verbesserter Zugänglichkeit -->
<audio id="achievement-sound" preload="none">
  <source src="/sounds/achievement-unlocked.mp3" type="audio/mpeg" />
  <source src="/sounds/achievement-unlocked.ogg" type="audio/ogg" />
  <track
    kind="captions"
    src="/sounds/achievement-unlocked-captions.vtt"
    srclang="en"
    label="English"
    default
  />
</audio>

<!-- Einstellungen für Barrierefreiheit (wird dynamisch mit JavaScript geladen) -->
<div
  id="achievement-a11y-settings"
  class="sr-only"
  aria-hidden="true"
  data-display-time="5000"
  data-enable-sound="true"
  data-display-time-min="3000"
  data-display-time-max="10000"
  data-display-time-step="1000"
>
</div>

<style>
  /* Achievement notification main container */
  .achievement-notification {
    position: fixed;
    right: var(--spacing-xl);
    bottom: var(--spacing-xl);
    z-index: 50;
    max-width: 24rem;
    transform: translateY(150%);
    overflow: hidden;
    border-radius: var(--border-radius-md);
    background-color: var(--color-gray-800);
    padding: var(--spacing-md);
    color: var(--color-white);
    opacity: 0;
    box-shadow: var(--shadow-lg);
    /* Verbesserte Tastaturzugänglichkeit mit Outline */
    outline: none;
    /* Verbesserte Vendor-Prefixes für bessere Kompatibilität */
    -webkit-transition:
      transform 0.3s ease-out,
      opacity 0.3s ease-out;
    transition:
      transform 0.3s ease-out,
      opacity 0.3s ease-out;
    /* Isolierung für korrektes Stacking */
    isolation: isolate;
    /* Text-Anpassung für WCAG AAA - Verbesserte Unterstützung für Textabstände */
    line-height: var(--line-height-relaxed, 1.8);
    letter-spacing: var(--letter-spacing, 0.03em);
    word-spacing: var(--word-spacing, 0.05em);
    overflow-wrap: break-word;
    /* Unterstützung für Text-Spacing - WCAG 1.4.12 Level AAA */
    text-spacing: trim-start allow-end trim-adjacent ideograph-alpha ideograph-numeric;
  }

  /* Container für den Benachrichtigungsinhalt */
  .achievement-notification__container {
    position: relative;
    display: flex;
    align-items: flex-start;
    gap: 1rem;
  }

  /* Icon-Container mit verbessertem Kontrast */
  .achievement-notification__icon {
    display: flex;
    height: 2.5rem;
    width: 2.5rem;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius-full);
    background-color: var(--color-purple-600);
    padding: 0.5rem;
    color: var(--color-white);
    /* Add subtle visual feedback for success */
    box-shadow: 0 0 0 rgba(139, 92, 246, 0.4);
    animation: pulse 2s infinite;
  }

  /* Subtile Pulsanimation für das Achievement-Icon */
  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(139, 92, 246, 0.4);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(139, 92, 246, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(139, 92, 246, 0);
    }
  }

  /* Animation für Benutzer mit reduzierter Bewegung deaktivieren */
  @media (prefers-reduced-motion: reduce) {
    .achievement-notification__icon {
      animation: none;
      box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.4);
    }
  }

  /* Inhaltsbereich */
  .achievement-notification__content {
    flex-grow: 1;
    padding-right: 1.5rem;
  }

  /* Titel mit verbessertem Kontrast */
  .achievement-notification__title {
    margin: 0;
    margin-bottom: 0.25rem;
    font-size: var(--font-size-lg);
    font-weight: 600;
    color: inherit; /* Korrekte Farbvererbung für Hell-/Dunkelmodus */
    line-height: 1.4; /* Verbesserte Lesbarkeit */
  }

  /* Beschreibung mit verbessertem Kontrast */
  .achievement-notification__description {
    margin: 0;
    font-size: var(--font-size-sm);
    opacity: 0.96; /* Verbessert von 0.9 für höheren Kontrast */
    line-height: 1.5; /* Bessere Lesbarkeit */
    max-width: 100%; /* Verhindert Textüberlauf */
    word-wrap: break-word; /* Lange Wörter handhaben */
  }

  /* Schließen-Button mit verbesserter Zugänglichkeit */
  .achievement-notification__close {
    position: absolute;
    top: 0;
    right: 0;
    display: flex;
    height: 2.5rem; /* Erhöht von 2rem für bessere Erfassung */
    width: 2.5rem; /* Erhöht von 2rem für bessere Erfassung */
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border: none;
    background-color: transparent;
    padding: 0;
    color: var(--color-gray-400);
    transition:
      color 0.2s,
      outline 0.2s;
    border-radius: 4px;
    /* Mindestgröße für Touch-Ziele - WCAG AAA */
    min-height: 44px;
    min-width: 44px;
  }

  .achievement-notification__close:hover,
  .achievement-notification__close:focus-visible {
    color: var(--color-white);
  }

  /* Verbesserter Fokusstil nach WCAG 2.2 Enhanced Focus Appearance */
  .achievement-notification__close:focus-visible,
  .achievement-notification__control-button:focus-visible {
    outline: 3px solid var(--color-purple-300, #c4b5fd);
    outline-offset: 3px;
    border-radius: 2px;
    /* Erhöhter Kontrast (Mindestens 3:1 zwischen Fokus und Nichtfokus) */
    background-color: rgba(124, 58, 237, 0.1);
    /* Minimale Breite und Höhe für Fokusindikator */
    min-width: 44px;
    min-height: 44px;
    /* Vermeiden von Fokusindikatoren unter 2px Dicke (WCAG 2.2) */
    box-shadow: 0 0 0 2px rgba(124, 58, 237, 0.3);
  }

  /* Kategorie */
  .achievement-notification__category {
    margin-top: 0.75rem;
    padding: 0.35rem 0;
    text-align: center;
    font-size: var(--font-size-sm);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    /* Visuelle Unterscheidung für Kategorie */
    border-top: 1px solid rgba(255, 255, 255, 0.2); /* Erhöhte Opazität für besseren Kontrast */
    padding-top: 0.5rem;
  }

  /* Modifier für sichtbaren Zustand */
  .achievement-notification--visible {
    transform: translateY(0);
    opacity: 1;
  }

  /* Steuerelemente für die Benachrichtigung */
  .achievement-notification__controls {
    position: absolute;
    top: 0;
    right: 0;
    display: flex;
    gap: 0.25rem;
  }

  /* Steuerelementtasten */
  .achievement-notification__control-button {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 2rem;
    width: 2rem;
    background-color: transparent;
    color: var(--color-gray-400);
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition:
      color 0.2s ease,
      background-color 0.2s ease,
      outline 0.2s ease;
    /* Mindestgröße für Touch-Ziele - WCAG AAA */
    min-height: 44px;
    min-width: 44px;
  }

  .achievement-notification__control-button:hover,
  .achievement-notification__control-button:focus-visible {
    color: var(--color-white);
  }

  .achievement-notification__control-button:focus-visible {
    outline: 3px solid var(--color-purple-300, #c4b5fd);
    outline-offset: 3px;
    border-radius: 2px;
    background-color: rgba(124, 58, 237, 0.1);
  }

  /* Timer für Benachrichtigung */
  .achievement-notification__timer {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background-color: rgba(255, 255, 255, 0.1);
    overflow: hidden;
  }

  .achievement-notification__timer-progress {
    height: 100%;
    width: 100%;
    background-color: var(--color-purple-500);
    transform-origin: left;
    transform: translateZ(0); /* Verbessert die GPU-Beschleunigung */
    will-change: transform; /* Optimiert für Animation-Performance */
  }

  @keyframes timer-countdown {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-100%);
    }
  }

  /* Responsive Anpassungen */
  @media (min-width: 640px) {
    .achievement-notification {
      max-width: 30rem;
      /* Verbesserte Position für größere Bildschirme */
      bottom: var(--spacing-2xl);
      right: var(--spacing-2xl);
    }
  }

  @media (min-width: 768px) {
    .achievement-notification {
      max-width: 36rem;
    }
  }

  /* Standardmäßig Dunkelmodus, Überschreibung für Hellmodus */
  @media (prefers-color-scheme: light) {
    .achievement-notification {
      background-color: var(--color-gray-100);
      color: var(--color-gray-900);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }

    .achievement-notification__icon {
      background-color: var(
        --color-purple-900
      ); /* Dunkler für höheres Kontrastverhältnis von 7:1 (WCAG AAA) */
      color: var(--color-white);
    }

    .achievement-notification__category {
      border-top-color: rgba(0, 0, 0, 0.2); /* Erhöhte Opazität für 7:1 Kontrastverhältnis */
      color: var(--color-gray-900); /* Maximaler Kontrast im Light Mode */
      font-weight: 700; /* Fetter für bessere Lesbarkeit und Kontrast */
    }

    .achievement-notification__description {
      color: var(--color-gray-900); /* Maximaler Kontrast im Light Mode */
      opacity: 1; /* Keine Verringerung der Deckkraft für maximalen Kontrast */
    }

    .achievement-notification__close,
    .achievement-notification__control-button {
      color: var(--color-gray-800); /* Dunkler für 7:1 Kontrastverhältnis */
    }

    .achievement-notification__close:hover,
    .achievement-notification__close:focus-visible,
    .achievement-notification__control-button:hover,
    .achievement-notification__control-button:focus-visible {
      color: var(--color-gray-900);
      background-color: rgba(0, 0, 0, 0.1); /* Verstärkter Hover-Zustand für Sichtbarkeit */
    }

    .achievement-notification__close:focus-visible,
    .achievement-notification__control-button:focus-visible {
      outline: 3px solid var(--color-purple-800);
      outline-offset: 3px;
      border-radius: 2px;
      background-color: rgba(88, 28, 135, 0.15); /* Dunklere Lila-Farbe für höheren Kontrast */
    }
  }

  /* Unterstützung für reduzierte Bewegung */
  @media (prefers-reduced-motion: reduce) {
    .achievement-notification {
      transition-duration: 0.001s !important;
      -webkit-transition-duration: 0.001s !important;
    }

    /* Alternative für Benutzer, die reduzierte Bewegung bevorzugen */
    .achievement-notification--visible {
      /* Sofortiges Erscheinen statt Animation */
      transition: none;
      -webkit-transition: none;
    }
  }

  /* Unterstützung für High Contrast Mode */
  @media (forced-colors: active) {
    .achievement-notification {
      border: 1px solid CanvasText;
    }

    .achievement-notification__icon {
      background-color: Highlight;
      color: HighlightText;
      border: 1px solid CanvasText;
    }

    .achievement-notification__close:focus-visible {
      outline: 3px solid CanvasText;
    }

    .achievement-notification__category {
      border-top: 1px solid CanvasText;
    }

    .achievement-notification__control-button {
      border: 1px solid CanvasText;
    }

    .achievement-notification__control-button:focus-visible {
      outline: 3px solid CanvasText;
    }

    .achievement-notification__timer {
      background-color: Canvas;
      border-bottom: 1px solid CanvasText;
    }

    .achievement-notification__timer-progress {
      background-color: Highlight;
    }
  }
</style>

<script>
  /**
   * Performance-optimized Achievement Notifications
   *
   * This script integrates the achievement notification system with the DOM.
   * The core functionality is extracted to an external TypeScript module for
   * better maintainability and performance optimizations.
   *
   * Key optimizations include:
   * - GPU acceleration using will-change and transform: translateZ(0)
   * - Efficient SVG icon handling with DocumentFragments
   * - Animation using translateX instead of scaleX for better performance
   * - Proper cleanup of resources when no longer needed
   * - Respect for user motion preferences
   */
  import { setupAchievementNotificationSystem } from "../../utils/achievements/achievementNotification";

  // Initialize notification system when document is ready
  const cleanupFunction = setupAchievementNotificationSystem();

  // Execute cleanup function when component is removed
  document.addEventListener("beforeunload", () => {
    if (typeof cleanupFunction === "function") {
      cleanupFunction();
    }
  });
</script>

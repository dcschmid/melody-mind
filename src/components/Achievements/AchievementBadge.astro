---
/**
 * AchievementBadge - Responsive notification badge
 *
 * Displays new achievement count with WCAG AAA compliance
 * Uses global.css variables for consistent theming
 */

import { useTranslations } from "@utils/i18n";

interface Props {
  lang: string;
}

const { lang } = Astro.props;
const t = useTranslations(lang);

const newLabel = t("achievements.badge.new");
const newLabelWithCount = t("achievements.badge.new_with_count");
const fallbackLabel = t("achievements.badge.fallback_text");
const contextDescription = t("achievements.badge.context_description");
const keyboardInstructions = t("achievements.badge.keyboard_instructions");
---

<span
  id="achievement-badge"
  class="achievement-badge"
  aria-label={newLabel}
  aria-describedby="achievement-badge-description"
  role="status"
  aria-live="polite"
  data-new-label={newLabel}
  data-new-label-with-count={newLabelWithCount}
  data-fallback-label={fallbackLabel}
  data-context-description={contextDescription}
  data-keyboard-instructions={keyboardInstructions}
>
  <span class="achievement-badge__count">0</span>
  <span id="achievement-badge-description" class="sr-only">
    {contextDescription}
  </span>
</span>

<style lang="scss">
  .achievement-badge {
    position: absolute;
    top: var(--space-xs);
    right: var(--space-xs);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    height: var(--achievement-badge-size);
    width: var(--achievement-badge-size);
    min-width: var(--touch-target-enhanced);
    min-height: var(--touch-target-enhanced);
    padding: var(--space-xs);
    border-radius: var(--radius-full);
    background: var(--interactive-secondary);
    color: var(--text-primary);
    box-shadow: var(--shadow-md);
    font-size: var(--text-xs);
    font-weight: var(--font-bold);
    line-height: var(--leading-tight);
    opacity: 0;
    transform: scale(0.8);
    transition:
      opacity var(--transition-normal),
      transform var(--transition-normal);
    pointer-events: none;
    letter-spacing: var(--letter-spacing-base);
    word-spacing: var(--word-spacing-enhanced);

    @media (min-width: 30em) {
      top: var(--space-sm);
      right: var(--space-sm);
      font-size: var(--text-sm);
    }

    @media (min-width: 48em) {
      top: var(--space-md);
      right: var(--space-md);
      font-size: var(--text-base);
    }

    &.visible {
      opacity: 1;
      transform: scale(1);
      pointer-events: auto;
    }

    &:focus-visible {
      outline: var(--focus-outline);
      outline-offset: var(--focus-ring-offset);
      box-shadow: var(--focus-ring), var(--shadow-lg);
      z-index: var(--z-notification);
    }

    &__count {
      display: block;
      width: var(--width-full);
      line-height: 1;
    }

    @media (prefers-reduced-motion: reduce) {
      transition-duration: var(--transition-instant);
      transform: scale(1);
    }

    @media print {
      display: none;
    }

    @media (forced-colors: active) {
      border: var(--border-width-thick) solid CanvasText;
      background-color: Highlight;
      color: HighlightText;
      forced-color-adjust: none;
    }

    @media (prefers-contrast: high) {
      border: var(--border-width-thick) solid var(--text-primary);
      background-color: var(--bg-primary);
      color: var(--text-primary);
      box-shadow: var(--shadow-xl);
    }

    @media (prefers-color-scheme: dark) {
      background-color: var(--color-primary-600);
      color: var(--color-white);
      box-shadow: var(--shadow-lg);
    }
  }
</style>

<script>
  import { initializeAchievementBadge } from "../../utils/achievements/achievementBadge.ts";

  document.addEventListener("DOMContentLoaded", initializeAchievementBadge);
</script>

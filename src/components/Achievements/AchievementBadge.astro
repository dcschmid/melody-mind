---
/**
 * AchievementBadge - Responsive notification badge
 *
 * Displays new achievement count with WCAG AAA compliance
 * Uses global.css variables for consistent theming
 *
 * @param {string} lang - Language code for translations (e.g., 'en', 'de')
 */

/* Imports */
import { useTranslations } from "@utils/i18n";

/* Props */
interface Props {
  /** Language code for translations (e.g., 'en', 'de') */
  lang: string;
}

/* Props processing */
const { lang } = Astro.props;
const t = useTranslations(lang);

/* Client-side variables */
const newLabel = t("achievements.badge.new");
const newLabelWithCount = t("achievements.badge.new_with_count");
const fallbackLabel = t("achievements.badge.fallback_text");
const contextDescription = t("achievements.badge.context_description");
const keyboardInstructions = t("achievements.badge.keyboard_instructions");
---

<!-- Component template -->
<span
  id="achievement-badge"
  class="achievement-badge"
  aria-label={newLabel}
  aria-describedby="achievement-badge-description"
  role="status"
  aria-live="polite"
  data-new-label={newLabel}
  data-new-label-with-count={newLabelWithCount}
  data-fallback-label={fallbackLabel}
  data-context-description={contextDescription}
  data-keyboard-instructions={keyboardInstructions}
>
  <span class="achievement-badge__count">0</span>
  <span id="achievement-badge-description" class="sr-only">
    {contextDescription}
  </span>
</span>

<!-- Component styles -->
<style lang="scss">
  /* AchievementBadge - responsive notification badge */
  /* Uses global.css variables, WCAG AAA compliant, performance optimized */

  .achievement-badge {
    /* Positioning with logical properties */
    position: absolute;
    inset-block-start: var(--space-xs);
    inset-inline-end: var(--space-xs);

    /* Flexbox layout */
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;

    /* Responsive sizing with clamp() and container queries */
    height: clamp(var(--touch-target-enhanced), 5vw, var(--achievement-badge-size));
    width: clamp(var(--touch-target-enhanced), 5vw, var(--achievement-badge-size));
    min-width: var(--touch-target-enhanced);
    min-height: var(--touch-target-enhanced);

    /* Container-based responsive scaling */
    @container (min-width: 20rem) {
      height: clamp(var(--touch-target-enhanced), 4vw, var(--achievement-badge-size));
      width: clamp(var(--touch-target-enhanced), 4vw, var(--achievement-badge-size));
    }

    /* Responsive padding with container queries */
    padding: clamp(var(--space-xs), 2vw, var(--space-sm));

    /* Optimize for different screen densities */
    @media (min-resolution: 2dppx) {
      padding: clamp(var(--space-xs), 1.5vw, var(--space-sm));
    }

    /* Visual styling */
    border-radius: var(--radius-full);
    background: var(--interactive-secondary);
    color: var(--text-primary);
    box-shadow: var(--shadow-md);

    /* Typography */
    font-size: clamp(var(--text-xs), 3vw, var(--text-sm));
    font-weight: var(--font-bold);
    line-height: var(--leading-tight);

    /* Animation */
    opacity: 0;
    transform: scale(var(--animation-scale-start)) translateZ(0);
    transition:
      opacity var(--animation-duration-normal) cubic-bezier(0.4, 0, 0.2, 1),
      transform var(--animation-duration-normal) cubic-bezier(0.4, 0, 0.2, 1);

    /* Interaction */
    pointer-events: none;

    /* Performance optimizations */
    contain: layout style paint;
    content-visibility: auto;
    contain-intrinsic-size: var(--achievement-badge-size) var(--achievement-badge-size);
    will-change: transform, opacity;

    /* WCAG AAA text spacing */
    letter-spacing: var(--letter-spacing-base);
    word-spacing: var(--word-spacing-enhanced);
    line-height: max(var(--leading-tight), var(--line-height-enhanced));

    /* Responsive breakpoints */
    @media (min-width: 40em) {
      inset-block-start: var(--space-sm);
      inset-inline-end: var(--space-sm);
      font-size: clamp(var(--text-sm), 2.5vw, var(--text-base));
    }

    @media (min-width: 64em) {
      inset-block-start: var(--space-md);
      inset-inline-end: var(--space-md);
      height: var(--achievement-badge-size);
      width: var(--achievement-badge-size);
      font-size: var(--text-base);
    }

    /* Visible state with performance optimization */
    &.visible {
      opacity: var(--animation-opacity-full);
      transform: scale(var(--animation-scale-end)) translateZ(0);
      pointer-events: auto;
      will-change: auto; /* Remove will-change when visible */
    }

    /* Enhanced focus state */
    &:focus-visible {
      outline: var(--focus-outline);
      outline-offset: var(--focus-ring-offset);
      box-shadow: var(--focus-ring), var(--shadow-lg);
      z-index: var(--z-notification);
    }

    /* Counter text */
    &__count {
      display: block;
      width: var(--width-full);
      line-height: 1;
      contain: layout style;
    }

    /* Reduced motion support */
    @media (prefers-reduced-motion: reduce) {
      transition-duration: var(--transition-instant);
      transform: scale(var(--animation-scale-end)) translateZ(0);
      will-change: auto;
    }

    /* Print optimization */
    @media print {
      display: none;
    }

    /* High contrast mode */
    @media (forced-colors: active) {
      border: var(--border-width-thick) solid CanvasText;
      background-color: Highlight;
      color: HighlightText;
      forced-color-adjust: none;
    }

    /* Enhanced contrast support */
    @media (prefers-contrast: high) {
      border: var(--border-width-thick) solid var(--text-primary);
      background-color: var(--bg-primary);
      color: var(--text-primary);
      box-shadow: var(--shadow-xl);
    }

    /* Dark mode optimization */
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-primary-600);
      color: var(--color-white);
      box-shadow: var(--shadow-lg);
    }
  }
</style>

<!-- Client-side interactivity -->
<script>
  import { initializeAchievementBadge } from "../../utils/achievements/achievementBadge.ts";

  /* Initialize badge */
  document.addEventListener("DOMContentLoaded", initializeAchievementBadge);
</script>

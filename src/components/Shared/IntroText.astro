---
interface Props {
  headline: string;
  subline?: string;
  level?: 1 | 2 | 3;
  headingId?: string;
}

const {
  headline,
  subline,
  level = 1,
  headingId = "intro-heading",
} = Astro.props;

const HeadingTag = `h${level}` as keyof HTMLElementTagNameMap;
---

<div
  class="introSection"
  role="region"
  aria-labelledby={headingId}
  tabindex="-1"
>
  <HeadingTag id={headingId} class="headline" tabindex="-1">
    {headline}
  </HeadingTag>

  {
    subline && (
      <p class="subline" id="intro-subline" aria-describedby={headingId}>
        {subline}
      </p>
    )
  }
</div>

<style lang="scss">
  .introSection {
    display: flex;
    flex-direction: column;
    gap: var(--padding-medium);
    align-items: center;

    width: 100%;
    max-width: var(--max-line-length);
    margin-block-end: var(--padding-large);
    margin-inline: auto;
    padding-inline: var(--padding-medium);

    text-align: center;

    @media (prefers-reduced-motion: no-preference) {
      animation: fade-in var(--transition-speed) ease-out;
    }

    @media (width <= 768px) {
      margin-block-end: var(--padding-medium);
      padding-inline: var(--padding-small);
    }
  }

  .headline {
    max-width: var(--max-line-length);
    margin: 0;

    font-family: var(--font-family);
    font-size: var(--header-font-size);
    font-weight: 900;
    line-height: var(--line-height-tight);
    hyphens: auto;
    color: var(--text-color);
    text-transform: uppercase;
    text-wrap: balance;
    letter-spacing: var(--spacing-text);

    @media (width <= 768px) {
      font-size: calc(var(--header-font-size) * 0.85);
    }

    @media (width <= 480px) {
      font-size: calc(var(--header-font-size) * 0.75);
    }

    @media (prefers-color-scheme: dark) {
      --minimum-contrast: 7;

      color: var(--text-color);
      text-shadow: none;
    }

    @media (prefers-reduced-motion: no-preference) {
      will-change: transform, opacity;
    }
  }

  .subline {
    max-width: min(30rem, 90%);
    margin: 0;

    font-family: var(--font-family);
    font-size: clamp(1.2rem, var(--body-font-size), 2rem);
    line-height: 1.8;
    color: var(--text-color);
    letter-spacing: var(--spacing-text);

    opacity: 1;
  }

  @keyframes fade-in {
    from {
      will-change: transform, opacity;
      transform: translateY(1rem);
      opacity: 0;
    }

    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .introSection {
      transform: none;
      animation: none;
    }
  }

  @media (forced-colors: active) {
    .headline,
    .subline {
      color: CanvasText;
      forced-color-adjust: none;
    }
  }

  @media (width <= 768px) {
    .headline {
      font-size: max(1.8rem, var(--header-font-size));
      word-wrap: break-word;
      overflow-wrap: break-word;
    }

    .subline {
      font-size: max(1.2rem, var(--body-font-size));
      word-wrap: break-word;
      overflow-wrap: break-word;
    }
  }
</style>

---
import { getLangFromUrl, useTranslations } from "@utils/i18n";

interface Props {
  headline?: string;
  className?: string;
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { headline = t("game.default.headline"), className = "" } = Astro.props;

const remainingText = t("game.remaining");
---

<div
  class="flex flex-col sm:flex-row justify-between items-center gap-4 mb-8 px-4 mx-auto w-full"
>
  <h1
    class={`text-2xl sm:text-3xl font-bold text-sky-500 text-center sm:text-left ${className}`}
  >
    {headline}
  </h1>

  <div class="flex items-center gap-4 text-zinc-300">
    <div
      class="flex gap-2 items-center justify-center"
      aria-label={t("game.current.round.label")}
    >
      <span class="text-zinc-400 text-sm uppercase tracking-wide font-medium">
        {t("game.current.round")}:
      </span>
      <span class="round tabular-nums text-lg font-bold text-zinc-50">0/0</span>
    </div>

    <div
      class="hidden w-px h-6 bg-zinc-700 motion-safe:animate-pulse"
      aria-hidden="true"
    >
    </div>

    <div class="hidden items-center gap-2 text-sm" data-remaining>
      <span class="font-medium text-amber-400">
        <span class="remaining-count tabular-nums">0</span>
        {remainingText}
      </span>
    </div>
  </div>
</div>

<style>
  /* High Contrast Mode Support */
  @media (forced-colors: active) {
    .round,
    [data-remaining] {
      padding: 0.25rem 0.5rem;
      border: 1px solid CanvasText;
    }
  }

  /* Print Style */
  @media print {
    h1 {
      margin-bottom: 1rem;
      color: #000 !important;
      text-align: center;
    }

    .round {
      color: #000 !important;
    }
  }
</style>

<script>
  // Erweitert um alle unterstützten Sprachen
  type SupportedLanguages =
    | "de"
    | "en"
    | "es"
    | "fr"
    | "it"
    | "pt"
    | "da"
    | "nl"
    | "sv"
    | "fi";

  export function updateRoundNumber(round: number) {
    const ROUND_SELECTOR = ".round" as const;
    const roundElement = document.querySelector(ROUND_SELECTOR);
    if (!roundElement) return;

    const roundText = round.toString();
    roundElement.textContent = roundText;

    const lang = document.documentElement.lang as SupportedLanguages;
    const ariaLabels: Record<SupportedLanguages, string> = {
      de: `Aktuelle Runde: ${round}`,
      en: `Current round: ${round}`,
      es: `Ronda actual: ${round}`,
      fr: `Tour actuel: ${round}`,
      it: `Round attuale: ${round}`,
      pt: `Rodada atual: ${round}`,
      da: `Nuværende runde: ${round}`,
      nl: `Huidige ronde: ${round}`,
      sv: `Aktuell runda: ${round}`,
      fi: `Nykyinen kierros: ${round}`,
    };

    roundElement.setAttribute("aria-label", ariaLabels[lang] || ariaLabels.en);
  }
</script>

---
/**
 * Paragraph Component
 *
 * A fully accessible, performance-optimized paragraph component for displaying text content
 * throughout the MelodyMind application. This component follows WCAG AAA standards for
 * accessibility and is optimized for both performance and maintainability.
 *
 * Features:
 * - WCAG AAA compliant with 7:1 contrast ratio
 * - Responsive typography with Tailwind
 * - Screen reader optimizations with proper ARIA attributes
 * - Support for multiple languages with lang attribute
 * - Configurable text alignment and sizing
 * - High contrast mode for enhanced accessibility
 * - Support for reduced motion preferences
 *
 * Usage example:
 * ```astro
 * <Paragraph
 *   description="This is a text paragraph"
 *   textSize="text-lg md:text-xl"
 *   align="center"
 *   highContrast={true}
 * />
 * ```
 *
 * @component Paragraph
 */
interface Props {
  /** Text content as an alternative to using slots */
  description?: string;

  /** Tailwind classes for text size (default: text-xl md:text-2xl) */
  textSize?: string;

  /** Additional Tailwind classes for customization */
  className?: string;

  /** Optional ID for the paragraph, important for ARIA references and anchor links */
  id?: string;

  /** Text alignment (start, center, end) */
  align?: "start" | "center" | "end";

  /** Language attribute for the text, important for screen readers and pronunciation */
  lang?: string;

  /** Optional ARIA label for improved screen reader support */
  ariaLabel?: string;

  /** Optional ARIA live setting for dynamic content announcements */
  ariaLive?: "off" | "polite" | "assertive";

  /** Set to true to make text high-contrast for better accessibility (WCAG AAA 7:1 ratio) */
  highContrast?: boolean;
}

const {
  description,
  textSize = "text-xl md:text-2xl",
  className = "",
  id,
  align = "start",
  lang,
  ariaLabel,
  ariaLive,
  highContrast = false,
} = Astro.props;

// Optimized Tailwind classes for better performance and accessibility
const alignmentClasses = {
  start: "text-left",
  center: "text-center",
  end: "text-right",
};

// Enhanced color contrasts for WCAG AAA compliance (7:1 contrast ratio)
// text-white for maximum contrast, text-zinc-100 for standard high contrast
const textColor = highContrast ? "text-white" : "text-zinc-100";

// Composed classes for optimized rendering performance
// Using array filtering to avoid unnecessary spaces and optimize class application
const paragraphClasses = [
  textSize,
  "leading-relaxed", // Improved line height for better readability
  "mb-10", // Consistent bottom margin
  "tracking-wide", // Slightly wider letter spacing for better readability
  textColor,
  alignmentClasses[align],
  className,
]
  .filter(Boolean)
  .join(" ");
---

<p
  class={`${paragraphClasses} transition-colors duration-200 ease-in-out motion-reduce:transition-none`}
  {id}
  {lang}
  aria-label={ariaLabel}
  aria-live={ariaLive}
>
  {description || <slot />}
</p>

<style>
  /**
   * Paragraph Component Styles
   *
   * These styles enhance the paragraph component with accessibility 
   * and performance optimizations beyond what's possible with Tailwind alone.
   */

  /* 
   * Default styles ensuring proper text rendering
   * for better readability across browsers
   */
  p {
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /**
   * Print styles for better document formatting when printed
   * WCAG 2.1 Success Criterion 1.4.8 (Visual Presentation)
   */
  @media print {
    p {
      color: #000 !important;
      font-size: 12pt !important;
      line-height: 1.5 !important;
    }
  }

  /**
   * High Contrast Mode Support
   * Ensures visibility in Windows High Contrast Mode
   * WCAG 2.1 Success Criterion 1.4.3 (Contrast)
   */
  @media (forced-colors: active) {
    p {
      color: CanvasText;
      forced-color-adjust: none;
    }
  }
</style>

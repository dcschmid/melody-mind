---
/**
 * LoadingState Component - Responsive & Accessible
 *
 * A reusable component for displaying loading states with consistent styling.
 * Fully responsive with WCAG AAA compliance and optimized for all screen sizes.
 *
 * @component
 * @example
 * ```astro
 * <LoadingState text="Loading games..." size="lg" />
 * <LoadingState text="Please wait..." size="sm" />
 * ```
 */
import Paragraph from "./Paragraph.astro";
export interface Props {
  /** The loading message text */
  text?: string;
  /** Additional CSS class for styling customization */
  className?: string;
  /** Size variant for the spinner */
  size?: "sm" | "md" | "lg";
  /** Whether to show the component (useful for conditional rendering) */
  visible?: boolean;
  /** Minimum height for the loading state container */
  minHeight?: string;
}

const {
  text = "Loading...",
  className = "",
  size = "md",
  visible = true,
  minHeight = "12rem",
} = Astro.props;

// Generate unique ID for accessibility using modern ES6 features
const generateUniqueId = (): string => `loading-${Math.random().toString(36).substring(2, 11)}`;

const loadingId = generateUniqueId();
---

{
  visible && (
    <div
      class={`loading-state loading-state--${size} ${className}`}
      role="status"
      aria-live="polite"
      aria-labelledby={loadingId}
      style={`--loading-state-min-height: ${minHeight};`}
    >
      <div class="loading-state__spinner" aria-label={text} />
      <Paragraph id={loadingId} className="loading-state__text">
        {text}
      </Paragraph>
      <span class="sr-only">Loading content, please wait...</span>
    </div>
  )
}

<style lang="scss">
  /* ======================================
   * LOADING STATE COMPONENT STYLES
   * Responsive design with global.css variables
   * WCAG AAA compliant - Zero hardcoded values
   * ====================================== */

  .loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: var(--loading-state-min-height, calc(var(--space-3xl) * 3));
    gap: var(--space-md);
    padding: var(--space-lg);
    font-family: var(--font-family-primary);

    /* Responsive padding adjustments */
    @media (max-width: 47.9375em) {
      padding: var(--space-md);
      gap: var(--space-sm);
    }

    @media (max-width: 39.9375em) {
      padding: var(--space-sm);
      gap: var(--space-xs);
    }

    &__spinner {
      border-radius: var(--radius-full);
      border: var(--border-width-thick) solid var(--border-primary);
      border-top: var(--border-width-thick) solid var(--interactive-primary);
      animation: spin 1s linear infinite;
    }

    &__text {
      color: var(--text-secondary);
      font-size: var(--text-base);
      margin: 0;
      text-align: center;
      line-height: var(--leading-normal);

      /* Responsive typography */
      @media (max-width: 47.9375em) {
        font-size: var(--text-sm);
      }

      @media (max-width: 39.9375em) {
        font-size: var(--text-xs);
      }
    }

    /* ======================================
     * SIZE VARIANTS - RESPONSIVE SIZING
     * ====================================== */

    /* Small size variant */
    &--sm {
      .loading-state__spinner {
        width: var(--space-lg);
        height: var(--space-lg);

        /* Responsive sizing */
        @media (max-width: 47.9375em) {
          width: var(--space-md);
          height: var(--space-md);
        }

        @media (max-width: 39.9375em) {
          width: var(--space-sm);
          height: var(--space-sm);
        }
      }
    }

    /* Medium size variant (default) */
    &--md {
      .loading-state__spinner {
        width: var(--space-xl);
        height: var(--space-xl);

        /* Responsive sizing */
        @media (max-width: 47.9375em) {
          width: var(--space-lg);
          height: var(--space-lg);
        }

        @media (max-width: 39.9375em) {
          width: var(--space-md);
          height: var(--space-md);
        }
      }
    }

    /* Large size variant */
    &--lg {
      .loading-state__spinner {
        width: var(--space-2xl);
        height: var(--space-2xl);

        /* Responsive sizing */
        @media (max-width: 47.9375em) {
          width: var(--space-xl);
          height: var(--space-xl);
        }

        @media (max-width: 39.9375em) {
          width: var(--space-lg);
          height: var(--space-lg);
        }
      }
    }

    /* ======================================
     * RESPONSIVE MIN-HEIGHT ADJUSTMENTS
     * ====================================== */

    /* Responsive min-height for better mobile experience */
    @media (max-width: 47.9375em) {
      min-height: calc(var(--space-2xl) * 2);
    }

    @media (max-width: 39.9375em) {
      min-height: calc(var(--space-xl) * 2);
    }
  }

  /* ======================================
   * ANIMATIONS
   * ====================================== */

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  /* ======================================
   * ACCESSIBILITY ENHANCEMENTS
   * ====================================== */

  /* Accessibility: Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .loading-state__spinner {
      animation: none;
      border: var(--border-width-thick) solid var(--interactive-primary);
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .loading-state__spinner {
      border-width: var(--border-width-enhanced);
    }
  }

  /* Forced colors mode support */
  @media (forced-colors: active) {
    .loading-state__spinner {
      border-color: ButtonText;
      border-top-color: Highlight;
    }
  }

  /* Screen reader only content */
  .sr-only {
    position: absolute;
    width: var(--sr-only-width);
    height: var(--sr-only-height);
    padding: 0;
    margin: var(--sr-only-margin);
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>

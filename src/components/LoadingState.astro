---
/**
 * LoadingState Component - Responsive & Accessible
 *
 * A reusable component for displaying loading states with consistent styling.
 * Fully responsive with WCAG AAA compliance and optimized for all screen sizes.
 *
 * @component
 * @example
 * ```astro
 * <LoadingState text="Loading games..." size="lg" />
 * <LoadingState text="Please wait..." size="sm" />
 * ```
 */

import Paragraph from "./Paragraph.astro";

export interface Props {
  /** The loading message text */
  text?: string;
  /** Additional CSS class for styling customization */
  className?: string;
  /** Size variant for the spinner */
  size?: "sm" | "md" | "lg";
  /** Whether to show the component (useful for conditional rendering) */
  visible?: boolean;
  /** Minimum height for the loading state container */
  minHeight?: string;
}

const {
  text = "Loading...",
  className = "",
  size = "md",
  visible = true,
  minHeight = "12rem",
} = Astro.props;
---

{
  visible && (
    <div
      class={`flex flex-col items-center justify-center gap-4 p-6 font-primary min-h-[12rem] sm:gap-3 sm:p-4 md:gap-6 md:p-6 ${className}`}
      role="status"
      aria-live="polite"
      style={`min-height: ${minHeight};`}
    >
      <div
        class={`rounded-full border-2 border-gray-700 border-t-purple-500 animate-spin ${
          size === "sm" ? "w-6 h-6" : size === "md" ? "w-8 h-8" : "w-12 h-12"
        }`}
        aria-label={text}
      />
      <Paragraph textAlign="center">{text}</Paragraph>
      <span class="sr-only">Loading content, please wait...</span>
    </div>
  )
}

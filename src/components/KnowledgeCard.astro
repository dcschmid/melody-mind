---
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { format } from "date-fns";
import { de, enUS as en } from "date-fns/locale";

interface Props {
  title: string;
  description: string;
  image?: string;
  createdAt: Date;
  slug: string;
  lang: string;
  readingTime?: number;
}

const {
  title,
  description,
  image = "/default-cover.jpg",
  createdAt,
  slug,
  lang,
  readingTime = 0,
} = Astro.props;

// Choose locale for date formatting
const locales = { de, en };
const locale = locales[lang as keyof typeof locales] || en;

const lang_t = useTranslations(lang as "de" | "en");
const formattedDate = format(createdAt, "MMMM d, yyyy", { locale });
---

<article class="h-full flex flex-col overflow-hidden bg-gradient-to-b from-zinc-700 to-zinc-800 rounded-xl shadow-sm hover:shadow-md transition-all duration-300 transform hover:-translate-y-1">
  <a
    href={`/${lang}/knowledge/${slug}`}
    class="group h-full flex flex-col"
    aria-label={title}
  >
    <div class="relative w-full aspect-[16/9] overflow-hidden bg-zinc-800">
      <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent z-[1] opacity-30 group-hover:opacity-20 transition-opacity"></div>
      <img
        src={image}
        alt=""
        class="w-full h-full object-cover transition-all duration-500 group-hover:scale-105"
        loading="lazy"
        width="400"
        height="225"
      />
    </div>

    <div class="p-5 flex-grow flex flex-col">
      <div class="flex justify-between items-center mb-2 text-sm text-zinc-400">
        <time datetime={createdAt.toISOString()}>{formattedDate}</time>
        <span class="flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          {readingTime} {lang_t("knowledge.reading.time")}
        </span>
      </div>

      <h3 class="text-xl font-bold text-white mb-2 line-clamp-2">
        {title}
      </h3>

      <p class="description text-zinc-300 mb-4 line-clamp-3 text-sm leading-relaxed">
        {description}
      </p>

      <div class="mt-auto">
        <span class="inline-flex items-center text-white group-hover:text-gray-300 transition-colors font-medium">
          Weiterlesen
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M14 5l7 7m0 0l-7 7m7-7H3"
            />
          </svg>
        </span>
      </div>
    </div>
  </a>
</article>

<style>
  /* High Contrast Mode Support */
  @media (forced-colors: active) {
    article {
      border: 2px solid CanvasText;
    }

    article:focus-within {
      outline: 2px solid Highlight;
      outline-offset: 2px;
    }
  }

  /* Print styles */
  @media print {
    article {
      break-inside: avoid;
      border: 1px solid #000;

      page-break-inside: avoid;
    }

    .description {
      color: #000 !important;
    }

    h3 {
      color: #000 !important;
    }
  }
</style>

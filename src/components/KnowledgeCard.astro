---
/**
 * KnowledgeCard Component
 *
 * An aesthetically enhanced and fully accessible card component for displaying
 * music knowledge articles, including image, title, description, and metadata.
 * Designed for MelodyMind's music history and educational content.
 *
 * This component is dual-purpose:
 * 1. As a standalone card with its own link (when articleUrl is provided)
 * 2. Inside a parent link element (when articleUrl is not provided)
 *
 * @component
 * @implements {WCAG AAA compliance}
 */
import { useTranslations } from "@utils/i18n";
import { format } from "date-fns";
import { de, enUS as en } from "date-fns/locale";
import { Image } from "astro:assets";

export const prerender = true;

interface Props {
  /** Title of the knowledge article */
  title: string;
  /** Brief description or excerpt of the article */
  description: string;
  /** Path to the article's cover image (uses default if not provided) */
  image?: string;
  /** Date when the article was created/published */
  createdAt: Date;
  /** URL slug for the article link */
  slug: string;
  /** Language code (en/de) for localization */
  lang: string;
  /** Estimated reading time in minutes */
  readingTime?: number;
  /** Complete URL to the article (optional - if omitted, component will be a non-linking card) */
  articleUrl?: string;
  /** Comma-separated keywords for searchability */
  keywords?: string;
  /** Index for animation delay calculation */
  index?: number;
}

const {
  title,
  description,
  image = "/default-cover.jpg",
  createdAt,
  slug,
  lang,
  readingTime = 0,
  articleUrl,
  keywords,
  index = 0,
} = Astro.props;

// Choose locale for date formatting
const locales = { de, en };
const locale = locales[lang as keyof typeof locales] || en;

const lang_t = useTranslations(lang as "de" | "en");
const formattedDate = format(createdAt, "MMMM d, yyyy", { locale });

// Use articleUrl if provided, otherwise let the parent handle the link
const hasOwnLink = !!articleUrl;

// Generate a unique ID for this card for aria-labelledby
const cardId = `card-title-${slug}-${index}`;

// Format reading time for better appearance and accessibility
const formattedReadingTime = `${readingTime} ${lang_t("knowledge.reading.time")}`;
---

<article
  class="knowledge-card will-change-shadow print:page-break-inside-avoid forced-colors:border-CanvasText relative isolate flex h-full flex-col overflow-hidden rounded-xl border-2 border-purple-700/60 bg-zinc-900 shadow-lg shadow-purple-900/20 transition-all duration-300 will-change-transform hover:border-purple-500 hover:shadow-[0_0_20px_rgba(168,85,247,0.2)] hover:shadow-xl hover:shadow-purple-900/30 motion-reduce:transform-none motion-reduce:transition-none print:break-inside-avoid print:border print:border-black print:bg-white print:text-black forced-colors:border-[3px]"
  data-testid="knowledge-card"
  data-title={title}
  data-description={description}
  data-keywords={keywords}
  aria-labelledby={cardId}
>
  {
    hasOwnLink ? (
      <a
        href={articleUrl}
        class="group forced-colors:focus-visible:outline-CanvasText flex h-full flex-col overflow-hidden rounded-xl focus-visible:shadow-[0_0_0_4px_rgba(240,171,252,0.5)] focus-visible:ring-3 focus-visible:ring-purple-400 focus-visible:ring-offset-3 focus-visible:ring-offset-zinc-900 focus-visible:outline-[4px] focus-visible:outline-offset-4 focus-visible:outline-pink-300 focus-visible:outline-none motion-safe:transition-all print:text-black forced-colors:focus-visible:outline-[4px]"
        aria-labelledby={cardId}
        aria-describedby={`${cardId}-desc`}
      >
        <div class="knowledge-card-content relative h-full">
          <div
            class="absolute top-0 right-0 left-0 h-1 bg-gradient-to-r from-purple-700 via-purple-500 to-purple-700"
            aria-hidden="true"
          />

          <div class="relative aspect-[16/9] overflow-hidden">
            <Image
              src={image}
              alt=""
              loading="lazy"
              width={640}
              height={360}
              class="h-full w-full object-cover motion-safe:transition-transform motion-safe:duration-500 motion-safe:group-hover:scale-105 motion-safe:group-focus-visible:scale-105 motion-reduce:transform-none motion-reduce:transition-none print:max-h-[3in]"
            />
          </div>

          <div class="flex flex-grow flex-col justify-start px-5 pt-4 pb-3">
            <h3
              id={cardId}
              class="mb-3 text-2xl font-bold tracking-wide text-white max-sm:text-[1.5rem] max-sm:leading-[1.4] print:text-black"
            >
              {title}
            </h3>

            <p
              id={`${cardId}-desc`}
              class="mb-4 text-base leading-relaxed text-zinc-100 max-sm:text-[1.125rem] max-sm:leading-[1.6] print:text-black"
            >
              {description}
            </p>

            <div class="mt-4 flex items-center justify-between border-t border-zinc-700/50 pt-3">
              <span
                class="flex items-center text-base text-zinc-300 max-sm:text-[1.125rem] max-sm:leading-[1.6]"
                aria-label={formattedReadingTime}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="mr-1.5 h-5 w-5 text-purple-400"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                  focusable="false"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
                <span>
                  {readingTime} {lang_t("knowledge.reading.time")}
                </span>
              </span>

              <time
                datetime={createdAt.toISOString()}
                class="flex items-center text-base text-zinc-300 max-sm:text-[1.125rem] max-sm:leading-[1.6]"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="mr-1.5 h-5 w-5 text-purple-400"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                  focusable="false"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                  />
                </svg>
                {formattedDate}
              </time>
            </div>
          </div>
        </div>
        {hasOwnLink && <span class="sr-only">(opens article page)</span>}
      </a>
    ) : (
      <div class="knowledge-card-content relative h-full">
        <div
          class="absolute top-0 right-0 left-0 h-1 bg-gradient-to-r from-purple-700 via-purple-500 to-purple-700"
          aria-hidden="true"
        />

        <div class="relative aspect-[16/9] overflow-hidden">
          <Image
            src={image}
            alt=""
            loading="lazy"
            width={640}
            height={360}
            class="h-full w-full object-cover"
          />
          <div
            class="absolute inset-0 bg-gradient-to-t from-zinc-950/95 via-zinc-900/75 to-transparent opacity-90"
            aria-hidden="true"
          />
        </div>

        <div class="flex flex-grow flex-col justify-start px-5 pt-4 pb-3">
          <h3
            id={cardId}
            class="mb-3 line-clamp-2 text-2xl font-bold tracking-wide text-white max-sm:text-[1.5rem] max-sm:leading-[1.4]"
          >
            {title}
          </h3>

          <p
            id={`${cardId}-desc`}
            class="mb-4 line-clamp-3 text-base leading-relaxed text-zinc-100 max-sm:text-[1.125rem] max-sm:leading-[1.6]"
          >
            {description}
          </p>

          <div class="mt-4 flex items-center justify-between border-t border-zinc-700/50 pt-3">
            {" "}
            <span
              class="flex items-center text-base text-zinc-300 max-sm:text-[1.125rem] max-sm:leading-[1.6]"
              aria-label={formattedReadingTime}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="mr-1.5 h-5 w-5 text-purple-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                aria-hidden="true"
                focusable="false"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              </svg>
              <span>
                {readingTime} {lang_t("knowledge.reading.time")}
              </span>
            </span>
            <time
              datetime={createdAt.toISOString()}
              class="flex items-center text-base text-zinc-300 max-sm:text-[1.125rem] max-sm:leading-[1.6]"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="mr-1.5 h-5 w-5 text-purple-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                aria-hidden="true"
                focusable="false"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                />
              </svg>
              {formattedDate}
            </time>
          </div>
        </div>
      </div>
    )
  }
</article>

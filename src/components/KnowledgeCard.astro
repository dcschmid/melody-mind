---
import { getLangFromUrl, useTranslations } from "@utils/i18n";
import { format } from "date-fns";
import { de, enUS as en } from "date-fns/locale";

export const prerender = true;

interface Props {
  title: string;
  description: string;
  image?: string;
  createdAt: Date;
  slug: string;
  lang: string;
  readingTime?: number;
}

const {
  title,
  description,
  image = "/default-cover.jpg",
  createdAt,
  slug,
  lang,
  readingTime = 0,
} = Astro.props;

// Choose locale for date formatting
const locales = { de, en };
const locale = locales[lang as keyof typeof locales] || en;

const lang_t = useTranslations(lang as "de" | "en");
const formattedDate = format(createdAt, "MMMM d, yyyy", { locale });
---

<article class="h-full">
  <!-- Image container -->
  <div class="relative aspect-video overflow-hidden group">
    <img
      src={image}
      alt={title}
      loading="lazy"
      class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
      width="640"
      height="360"
    />

    <!-- Gradient overlay for better text contrast -->
    <div
      class="absolute inset-0 bg-gradient-to-t from-zinc-900 to-transparent opacity-60"
    >
    </div>
  </div>

  <!-- Content section -->
  <div class="p-4">
    <h3 class="text-lg font-semibold text-white mb-2">{title}</h3>
    <p class="text-zinc-300 text-sm line-clamp-3 mb-4">
      {description}
    </p>

    <div class="flex justify-between items-center mt-auto">
      <span class="text-xs text-zinc-400 flex items-center">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4 mr-1"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
            d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        {readingTime}
        {lang_t("knowledge.reading.time")}
      </span>
      <span class="text-xs text-zinc-400">
        {createdAt.toLocaleDateString()}
      </span>
    </div>
  </div>
</article>

<style>
  /* Minimal styling to avoid conflicts */
  article {
    color: inherit;
    display: block;
  }

  /* High Contrast Mode Support */
  @media (forced-colors: active) {
    article {
      border: 2px solid CanvasText;
    }
  }

  /* Print styles */
  @media print {
    article {
      break-inside: avoid;
      page-break-inside: avoid;
    }
  }
</style>

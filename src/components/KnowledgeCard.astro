---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  title: string;
  description: string;
  image: string | ImageMetadata;
  createdAt: Date;
  slug: string;
  lang: string;
  keywords?: string[];
  readingTime?: number;
}

const {
  title,
  description,
  image,
  createdAt,
  slug,
  lang,
  keywords,
  readingTime,
} = Astro.props;

// Default image import
import defaultImage from "/public/melody-mind.jpg";

// Function to check if the image is a string path
const isImagePath = (img: string | ImageMetadata): img is string => {
  return typeof img === "string";
};

// Determine which image to use
const imageSource = isImagePath(image) ? defaultImage : image;
---

<article class="knowledge-card">
  <a href={`/${lang}/knowledge/${slug}`} class="card-link">
    <div class="image-container">
      <img src={image as string} alt={title} width={300} height={300} />
    </div>
    <div class="content">
      <h3>{title}</h3>
      <p class="description">{description}</p>
      {
        keywords && keywords.length > 0 && (
          <div class="keywords">
            {keywords.slice(0, 3).map((keyword) => (
              <span class="keyword">{keyword}</span>
            ))}
          </div>
        )
      }
      <div class="meta">
        <time datetime={createdAt.toISOString()}>
          {new Date(createdAt).toLocaleDateString()}
        </time>
        {
          readingTime && (
            <span class="reading-time">{readingTime} min Lesezeit</span>
          )
        }
      </div>
    </div>
  </a>
</article>

<style>
  .knowledge-card {
    overflow: hidden;

    border-radius: 12px;

    background: #fff;
    box-shadow: 0 2px 8px rgb(0 0 0 / 10%);

    transition:
      transform 0.2s ease-in-out,
      box-shadow 0.2s ease-in-out;
  }

  .knowledge-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 12px rgb(0 0 0 / 15%);
  }

  .card-link {
    display: block;
    color: inherit;
    text-decoration: none;
  }

  .image-container {
    overflow: hidden;
    width: 100%;
    height: 200px;
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .knowledge-card:hover img {
    transform: scale(1.05);
  }

  .content {
    padding: 1.5rem;
  }

  h3 {
    margin: 0 0 0.5rem;
    font-size: 1.25rem;
    color: #1a1a1a;
  }

  .description {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;

    margin-bottom: 1rem;

    font-size: 0.9rem;
    color: #666;
  }

  .keywords {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .keyword {
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;

    font-size: 0.8rem;
    color: #666;

    background: #f0f0f0;
  }

  .meta {
    display: flex;
    align-items: center;
    justify-content: space-between;

    font-size: 0.8rem;
    color: #888;
  }

  time,
  .reading-time {
    color: #888;
  }

  .reading-time {
    display: flex;
    gap: 0.25rem;
    align-items: center;
  }

  .reading-time::before {
    content: "â€¢";
    margin-right: 0.5rem;
  }
</style>

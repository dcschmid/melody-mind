---
import { For } from "@astropub/flow";
import Arrows from "../Round/Arrows.astro";
import { Picture } from "astro:assets";

const {
  randomizedCoverflowData,
  upText = "",
  downText = "",
  dataCategory = "",
  dataSolution,
  dataRound = "",
} = Astro.props;
---

<div
  class="coverFlowRoot"
  data-category={dataCategory}
  data-solution={JSON.stringify(dataSolution)}
  data-round={dataRound.replace("#", "")}
>
  <div class="smallText">{upText}</div>

  <div class="coverflow">
    <For of={randomizedCoverflowData}>
      {
        (item: any) => (
          <div
            class="cover"
            data-band={item.band}
            data-album={item.album}
            data-data={
              dataRound === "round-one"
                ? item.dataYear
                : dataRound === "round-two"
                  ? item.dataSales
                  : item.dataLength
            }
            data-cover-source={item.coverSrc}
          >
            <Picture
              src={item.coverSrc}
              width={130}
              height={130}
              formats={["avif", "webp"]}
              alt=""
            />
            <audio
              id={`audio-${item.band}`}
              src={item.audioSrc}
              preload="none"
            />
          </div>
        )
      }
    </For>

    <Arrows />
  </div>
  <div class="smallText">{downText}</div>
</div>

<style>
  .smallText {
    display: inline-flex;
    gap: var(--spacing-xxs);
    align-items: center;
    justify-content: center;

    width: auto;
    margin: var(--spacing-s) 0;

    font-size: 16px;
    font-weight: 400;
    font-style: normal;
  }

  .coverFlowRoot {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .coverflow {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-md);
    align-items: flex-start;
    justify-content: center;

    padding: var(--spacing-md);

    @media screen and (width >= 360px) {
      padding: var(--spacing-1) var(--spacing-xl) var(--spacing-15)
        var(--spacing-xl);
    }
  }

  .cover {
    width: 120px;
    height: 120px;

    @media screen and (width >= 385px) {
      width: 138px;
      height: 138px;
    }

    @media screen and (width >= 425px) {
      width: 160px;
      height: 160px;
    }

    @media screen and (width >= 475px) {
      width: 180px;
      height: 180px;
    }
  }

  .cover img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .cover.selected {
    border: 4px solid var(--primary-color);
    border-radius: var(--radius-radius-rounded);
  }

  .cover:nth-child(2) {
    margin-top: 4rem;
  }

  .cover:nth-child(3) {
    margin-top: -2rem;
  }

  .cover:nth-child(4) {
    margin-top: 2rem;
  }
</style>

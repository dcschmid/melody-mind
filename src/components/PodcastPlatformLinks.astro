---
import { Icon } from "astro-icon/components";
import { useTranslations } from "@utils/i18n";
import { getPodcastLinks } from "../data/podcast-links";
import type { PodcastLanguage } from "../data/podcast-links";

interface Props {
  lang: PodcastLanguage;
  className?: string;
}

const { lang, className = "" } = Astro.props;
const t = useTranslations(lang);
const links = getPodcastLinks(lang);

const platforms = [
  {
    name: "Spotify",
    icon: "spotify",
    url: links.spotify,
    colorClass: "bg-[#1DB954] hover:bg-[#1ed760]"
  },
  {
    name: "Apple Podcasts",
    icon: "apple",
    url: links.apple,
    colorClass: "bg-[#FB233B] hover:bg-[#ff3b52]"
  },
  {
    name: "Deezer",
    icon: "deezer",
    url: links.deezer,
    colorClass: "bg-[#FF0092] hover:bg-[#ff33a7]"
  },
  {
    name: "JellyPod",
    icon: "podcast",
    url: links.jellypod,
    colorClass: "bg-[#5865F2] hover:bg-[#6b76ff]"
  }
];
---

<div class={`podcast-platform-links flex flex-wrap gap-3 mt-4 ${className}`}>
  {platforms.map(platform => (
    <a
      href={platform.url}
      target="_blank"
      rel="noopener noreferrer"
      class={`inline-flex items-center gap-2 px-4 py-2 ${platform.colorClass} rounded-full text-white text-sm font-medium transition-all`}
      aria-label={`${t("podcast.listen.on")} ${platform.name}`}
    >
      <Icon name={platform.icon} class="h-4 w-4" />
      <span>{platform.name}</span>
    </a>
  ))}
</div>

<p class="text-xs text-zinc-400 mt-2">
  {t("podcast.language.availability")}
</p>

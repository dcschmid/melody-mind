---
import { Icon } from "astro-icon/components";
import { Picture } from "astro:assets";
import { db, User, eq } from "astro:db";

const defaultUser = {
  id: "1",
  username: "Mika",
  avatarUrl: "/user-profiles/mika.png",
};

const backgroundImage = "/userbg/music-bg.jpg";

const user = Astro.locals.user ?? defaultUser;

const currentUser = user?.id
  ? await db
      .select({
        total_user_points: User.total_user_points,
        username: User.username,
      })
      .from(User)
      .where(eq(User.id, user.id))
      .limit(1)
  : null;

const totalUserPoints = currentUser?.[0]?.total_user_points ?? 0;
---

<header
  class="profileHeader"
  role="banner"
  aria-label="Benutzerprofil Header"
  style={`--background-image: url(${backgroundImage});`}
>
  <div class="headerContent">
    <div
      class="avatarWrapper"
      role="img"
      aria-label={`Profilbild von ${user?.username ?? "Mika"}`}
    >
      <Picture
        class="avatarImage"
        src={user?.avatarUrl || "/user-profiles/mika.png"}
        width={128}
        height={128}
        formats={["avif", "webp"]}
        alt=""
        loading="eager"
      />
    </div>

    <div
      class="pointsDisplay"
      role="status"
      aria-live="polite"
      aria-atomic="true"
    >
      <Icon
        class="coinIcon"
        name="coin"
        width={24}
        height={24}
        aria-hidden="true"
      />
      <span class="pointsValue">
        <span class="sr-only">Punktestand:</span>
        {totalUserPoints}
      </span>
    </div>
  </div>
</header>

<style lang="scss">
  .profileHeader {
    position: relative;
    overflow: hidden;
    margin-bottom: var(--padding-large);
    border-radius: var(--border-radius);

    &::before {
      will-change: transform;
      content: "";

      position: absolute;
      z-index: 0;
      inset: 0;

      background-image: linear-gradient(
          to bottom,
          rgb(0 0 0 / 60%),
          rgb(0 0 0 / 60%)
        ),
        var(--background-image);
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;

      @supports (object-fit: cover) {
        background-size: cover;
      }
    }
  }

  @layer base {
    .avatarImage {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 50%;

      @supports not (object-fit: cover) {
        height: auto;
        min-height: 100%;
      }
    }
  }

  .headerContent {
    position: relative;
    z-index: 1;

    display: flex;
    flex-direction: column;
    gap: var(--padding-medium);
    align-items: center;

    padding: var(--padding-large);

    @media (width >= 768px) {
      flex-direction: row;
      gap: var(--padding-large);
      justify-content: center;
    }
  }

  .avatarWrapper {
    position: relative;

    overflow: hidden;

    width: clamp(100px, 30vw, 130px);
    height: clamp(100px, 30vw, 130px);

    border: 4px solid var(--secondary-color);
    border-radius: 50%;
    box-shadow: var(--box-shadow);

    img {
      content-visibility: auto;
      contain: paint;
    }

    @media (prefers-reduced-motion: no-preference) {
      transition: transform var(--transition-speed) ease;

      &:hover {
        transform: scale(1.05);
      }
    }
  }

  .userInfo {
    display: flex;
    flex-direction: column;
    gap: var(--padding-small);
    align-items: center;

    text-align: center;
  }

  .pointsDisplay {
    display: flex;
    gap: var(--padding-small);
    align-items: center;

    padding: var(--padding-small) var(--padding-medium);

    background-color: rgb(255 255 255 / 10%);
    backdrop-filter: blur(8px);
    border-radius: calc(var(--border-radius) / 2);
  }

  .coinIcon {
    color: var(--highlight-color);
    filter: drop-shadow(0 2px 4px rgb(0 0 0 / 20%));

    @media (prefers-reduced-motion: no-preference) {
      will-change: transform;
      transform: translateZ(0);
      animation: bounce 2s ease-in-out infinite;
    }
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-3px);
    }
  }

  .pointsValue {
    font-family: var(--font-family);
    font-size: var(--body-font-size);
    font-weight: 700;
    color: #fff;
    text-shadow: 0 1px 2px rgb(0 0 0 / 30%);

    @media (prefers-contrast: more) {
      color: var(--high-contrast-text, #fff);
      text-shadow: none;
    }
  }

  // High Contrast Mode Support
  @media (forced-colors: active) {
    .profileHeader::before {
      background: Canvas;
      border: 2px solid CanvasText;
    }

    .avatarWrapper {
      border: 2px solid ButtonText;
    }

    .pointsDisplay {
      border: 1px solid ButtonText;
    }
  }

  // Print Styles
  @media print {
    .profileHeader::before {
      background: none !important;
    }

    .pointsValue {
      color: #000;
      text-shadow: none;
    }
  }

  // Reduced Motion
  @media (prefers-reduced-motion: reduce) {
    .coinIcon {
      animation: none;
    }
  }
</style>
